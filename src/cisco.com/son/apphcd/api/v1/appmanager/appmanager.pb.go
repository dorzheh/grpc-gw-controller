// Code generated by protoc-gen-go. DO NOT EDIT.
// source: appmanager.proto

package appmanager

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/envoyproxy/protoc-gen-validate/validate"
import any "github.com/golang/protobuf/ptypes/any"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Defines application instance state
type AppStateAfterDeployment int32

const (
	// Enable application after deployment
	AppStateAfterDeployment_disabled AppStateAfterDeployment = 0
	// Disable application after deployment
	AppStateAfterDeployment_enabled AppStateAfterDeployment = 1
)

var AppStateAfterDeployment_name = map[int32]string{
	0: "disabled",
	1: "enabled",
}
var AppStateAfterDeployment_value = map[string]int32{
	"disabled": 0,
	"enabled":  1,
}

func (x AppStateAfterDeployment) String() string {
	return proto.EnumName(AppStateAfterDeployment_name, int32(x))
}
func (AppStateAfterDeployment) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_appmanager_545acda625c91d98, []int{0}
}

// Status represents operation status.
type Status int32

const (
	// Operation was successful
	Status_SUCCESS Status = 0
	// Operation failed
	Status_ERROR Status = 1
	// Resource not found
	Status_NOT_FOUND Status = 2
	// Operation had no results (e.g. upgrade identical, rollback to same, delete non-existent)
	Status_UNCHANGED Status = 3
)

var Status_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR",
	2: "NOT_FOUND",
	3: "UNCHANGED",
}
var Status_value = map[string]int32{
	"SUCCESS":   0,
	"ERROR":     1,
	"NOT_FOUND": 2,
	"UNCHANGED": 3,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}
func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_appmanager_545acda625c91d98, []int{1}
}

// Protocol ("TCP" or "UDP").
type Spec_Port_Proto int32

const (
	Spec_Port_TCP Spec_Port_Proto = 0
	Spec_Port_UDP Spec_Port_Proto = 1
)

var Spec_Port_Proto_name = map[int32]string{
	0: "TCP",
	1: "UDP",
}
var Spec_Port_Proto_value = map[string]int32{
	"TCP": 0,
	"UDP": 1,
}

func (x Spec_Port_Proto) String() string {
	return proto.EnumName(Spec_Port_Proto_name, int32(x))
}
func (Spec_Port_Proto) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_appmanager_545acda625c91d98, []int{9, 1, 0}
}

// CreateAppRequest holds appropriate properties required for a particular request
// related to a new application instance creation
type CreateAppRequest struct {
	// Application name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Enable or disable the application after deployment. By default application disabled
	AppState AppStateAfterDeployment `protobuf:"varint,2,opt,name=app_state,json=appState,proto3,enum=com.cisco.son.apphcd.api.v1.appmanager.AppStateAfterDeployment" json:"app_state,omitempty"`
	// Upgrade existing application instance to the version exposed by the attribute
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	// Don't create a new metadata but use existing one. Installs directly from catalog
	FromCatalog bool `protobuf:"varint,4,opt,name=from_catalog,json=fromCatalog,proto3" json:"from_catalog,omitempty"`
	// Application description.
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// Application type. Supported types:
	// periodic - application of type "CronJob" will be created, will be scheduled according to
	// the CyclePeriodic configuration.
	// daemon - application of type "Deployment" will be created, will be running continuously
	// run_once - application of type "Job", will run once until success
	Cycle string `protobuf:"bytes,6,opt,name=cycle,proto3" json:"cycle,omitempty"`
	// Cycle Periodic attributes
	CyclePeriodicAttr *CyclePeriodicReqAttr `protobuf:"bytes,7,opt,name=cycle_periodic_attr,json=cyclePeriodicAttr,proto3" json:"cycle_periodic_attr,omitempty"`
	// Root Group ID
	RootGroupId string `protobuf:"bytes,8,opt,name=root_group_id,json=rootGroupId,proto3" json:"root_group_id,omitempty"`
	// A list of group ID
	GroupIds []string `protobuf:"bytes,9,rep,name=group_ids,json=groupIds,proto3" json:"group_ids,omitempty"`
	// Application configurations
	AppConfigs map[string]string `protobuf:"bytes,10,rep,name=app_configs,json=appConfigs,proto3" json:"app_configs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Application environment variables
	EnvVars map[string]string `protobuf:"bytes,11,rep,name=env_vars,json=envVars,proto3" json:"env_vars,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Secret objects
	Secrets map[string]string `protobuf:"bytes,12,rep,name=secrets,proto3" json:"secrets,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Labels
	Labels map[string]string `protobuf:"bytes,13,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Annotations
	Annotations map[string]string `protobuf:"bytes,14,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Dependencies
	// repeated Dependency deps = 12;
	// Shared storage size
	SharedStorage uint32 `protobuf:"varint,15,opt,name=shared_storage,json=sharedStorage,proto3" json:"shared_storage,omitempty"`
	// Instance specifications
	Spec                 *Spec    `protobuf:"bytes,16,opt,name=spec,proto3" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateAppRequest) Reset()         { *m = CreateAppRequest{} }
func (m *CreateAppRequest) String() string { return proto.CompactTextString(m) }
func (*CreateAppRequest) ProtoMessage()    {}
func (*CreateAppRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_appmanager_545acda625c91d98, []int{0}
}
func (m *CreateAppRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAppRequest.Unmarshal(m, b)
}
func (m *CreateAppRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAppRequest.Marshal(b, m, deterministic)
}
func (dst *CreateAppRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAppRequest.Merge(dst, src)
}
func (m *CreateAppRequest) XXX_Size() int {
	return xxx_messageInfo_CreateAppRequest.Size(m)
}
func (m *CreateAppRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAppRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAppRequest proto.InternalMessageInfo

func (m *CreateAppRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateAppRequest) GetAppState() AppStateAfterDeployment {
	if m != nil {
		return m.AppState
	}
	return AppStateAfterDeployment_disabled
}

func (m *CreateAppRequest) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *CreateAppRequest) GetFromCatalog() bool {
	if m != nil {
		return m.FromCatalog
	}
	return false
}

func (m *CreateAppRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CreateAppRequest) GetCycle() string {
	if m != nil {
		return m.Cycle
	}
	return ""
}

func (m *CreateAppRequest) GetCyclePeriodicAttr() *CyclePeriodicReqAttr {
	if m != nil {
		return m.CyclePeriodicAttr
	}
	return nil
}

func (m *CreateAppRequest) GetRootGroupId() string {
	if m != nil {
		return m.RootGroupId
	}
	return ""
}

func (m *CreateAppRequest) GetGroupIds() []string {
	if m != nil {
		return m.GroupIds
	}
	return nil
}

func (m *CreateAppRequest) GetAppConfigs() map[string]string {
	if m != nil {
		return m.AppConfigs
	}
	return nil
}

func (m *CreateAppRequest) GetEnvVars() map[string]string {
	if m != nil {
		return m.EnvVars
	}
	return nil
}

func (m *CreateAppRequest) GetSecrets() map[string]string {
	if m != nil {
		return m.Secrets
	}
	return nil
}

func (m *CreateAppRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *CreateAppRequest) GetAnnotations() map[string]string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *CreateAppRequest) GetSharedStorage() uint32 {
	if m != nil {
		return m.SharedStorage
	}
	return 0
}

func (m *CreateAppRequest) GetSpec() *Spec {
	if m != nil {
		return m.Spec
	}
	return nil
}

// UpgradeAppRequest holds the attributes required for creating a new or upgrading existing application instance
type UpgradeAppRequest struct {
	// Application name.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Enable or disable the application after upgrade. By default application disabled
	AppState AppStateAfterDeployment `protobuf:"varint,2,opt,name=app_state,json=appState,proto3,enum=com.cisco.son.apphcd.api.v1.appmanager.AppStateAfterDeployment" json:"app_state,omitempty"`
	// Application version to upgrade to
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	// Don't create a new metadata but install application instance directly from catalog
	FromCatalog bool `protobuf:"varint,4,opt,name=from_catalog,json=fromCatalog,proto3" json:"from_catalog,omitempty"`
	// Application instance description
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// Application type. Supported types:
	// periodic - application of type "CronJob" will be created, will be scheduled according to
	// the CyclePeriodic configuration.
	// daemon - application of type "Deployment" will be created, will be running continuously
	// run_once - application of type "Job", will run once until success
	Cycle string `protobuf:"bytes,6,opt,name=cycle,proto3" json:"cycle,omitempty"`
	// Cycle Periodic attributes
	CyclePeriodicAttr *CyclePeriodicReqAttr `protobuf:"bytes,7,opt,name=cycle_periodic_attr,json=cyclePeriodicAttr,proto3" json:"cycle_periodic_attr,omitempty"`
	// Root Group ID
	RootGroupId string `protobuf:"bytes,8,opt,name=root_group_id,json=rootGroupId,proto3" json:"root_group_id,omitempty"`
	// A list of group ID
	GroupIds []string `protobuf:"bytes,9,rep,name=group_ids,json=groupIds,proto3" json:"group_ids,omitempty"`
	// Application configuration
	AppConfigs map[string]string `protobuf:"bytes,10,rep,name=app_configs,json=appConfigs,proto3" json:"app_configs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Application environment variables
	EnvVars map[string]string `protobuf:"bytes,11,rep,name=env_vars,json=envVars,proto3" json:"env_vars,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Secret objects
	Secrets map[string]string `protobuf:"bytes,12,rep,name=secrets,proto3" json:"secrets,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Labels
	Labels map[string]string `protobuf:"bytes,13,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Annotations
	Annotations map[string]string `protobuf:"bytes,14,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Shared storage size
	SharedStorage uint32 `protobuf:"varint,15,opt,name=shared_storage,json=sharedStorage,proto3" json:"shared_storage,omitempty"`
	// Instance specifications
	Spec                 *Spec    `protobuf:"bytes,16,opt,name=spec,proto3" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpgradeAppRequest) Reset()         { *m = UpgradeAppRequest{} }
func (m *UpgradeAppRequest) String() string { return proto.CompactTextString(m) }
func (*UpgradeAppRequest) ProtoMessage()    {}
func (*UpgradeAppRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_appmanager_545acda625c91d98, []int{1}
}
func (m *UpgradeAppRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpgradeAppRequest.Unmarshal(m, b)
}
func (m *UpgradeAppRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpgradeAppRequest.Marshal(b, m, deterministic)
}
func (dst *UpgradeAppRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpgradeAppRequest.Merge(dst, src)
}
func (m *UpgradeAppRequest) XXX_Size() int {
	return xxx_messageInfo_UpgradeAppRequest.Size(m)
}
func (m *UpgradeAppRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpgradeAppRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpgradeAppRequest proto.InternalMessageInfo

func (m *UpgradeAppRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpgradeAppRequest) GetAppState() AppStateAfterDeployment {
	if m != nil {
		return m.AppState
	}
	return AppStateAfterDeployment_disabled
}

func (m *UpgradeAppRequest) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *UpgradeAppRequest) GetFromCatalog() bool {
	if m != nil {
		return m.FromCatalog
	}
	return false
}

func (m *UpgradeAppRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *UpgradeAppRequest) GetCycle() string {
	if m != nil {
		return m.Cycle
	}
	return ""
}

func (m *UpgradeAppRequest) GetCyclePeriodicAttr() *CyclePeriodicReqAttr {
	if m != nil {
		return m.CyclePeriodicAttr
	}
	return nil
}

func (m *UpgradeAppRequest) GetRootGroupId() string {
	if m != nil {
		return m.RootGroupId
	}
	return ""
}

func (m *UpgradeAppRequest) GetGroupIds() []string {
	if m != nil {
		return m.GroupIds
	}
	return nil
}

func (m *UpgradeAppRequest) GetAppConfigs() map[string]string {
	if m != nil {
		return m.AppConfigs
	}
	return nil
}

func (m *UpgradeAppRequest) GetEnvVars() map[string]string {
	if m != nil {
		return m.EnvVars
	}
	return nil
}

func (m *UpgradeAppRequest) GetSecrets() map[string]string {
	if m != nil {
		return m.Secrets
	}
	return nil
}

func (m *UpgradeAppRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *UpgradeAppRequest) GetAnnotations() map[string]string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *UpgradeAppRequest) GetSharedStorage() uint32 {
	if m != nil {
		return m.SharedStorage
	}
	return 0
}

func (m *UpgradeAppRequest) GetSpec() *Spec {
	if m != nil {
		return m.Spec
	}
	return nil
}

// UpdadeApp implements the logic of UpgradeApp but allows also to update currently running application
// With the new configuration and if appropriate information is missed in the request, the information will
// be obtained from one of running instances of a particular application
type UpdateAppRequest struct {
	// Application name.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Enable or disable the application after update. By default application is disabled
	AppState AppStateAfterDeployment `protobuf:"varint,2,opt,name=app_state,json=appState,proto3,enum=com.cisco.son.apphcd.api.v1.appmanager.AppStateAfterDeployment" json:"app_state,omitempty"`
	// Application version to upgrade to
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	// Don't create a new metadata but install application instance directly from catalog
	FromCatalog bool `protobuf:"varint,4,opt,name=from_catalog,json=fromCatalog,proto3" json:"from_catalog,omitempty"`
	// Application instance description
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// Application type. Supported types:
	// periodic - application of type "CronJob" will be created, will be scheduled according to
	// the CyclePeriodic configuration
	// daemon - application of type "Deployment" will be created, will be running continuously
	// run_once - application of type "Job", will run once until success.
	Cycle string `protobuf:"bytes,6,opt,name=cycle,proto3" json:"cycle,omitempty"`
	// Cycle Periodic attributes
	CyclePeriodicAttr *CyclePeriodicReqAttr `protobuf:"bytes,7,opt,name=cycle_periodic_attr,json=cyclePeriodicAttr,proto3" json:"cycle_periodic_attr,omitempty"`
	// Root Group ID
	RootGroupId string `protobuf:"bytes,8,opt,name=root_group_id,json=rootGroupId,proto3" json:"root_group_id,omitempty"`
	// A list of group ID
	GroupIds []string `protobuf:"bytes,9,rep,name=group_ids,json=groupIds,proto3" json:"group_ids,omitempty"`
	// Application configuration
	AppConfigs map[string]string `protobuf:"bytes,10,rep,name=app_configs,json=appConfigs,proto3" json:"app_configs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Application environment variables
	EnvVars map[string]string `protobuf:"bytes,11,rep,name=env_vars,json=envVars,proto3" json:"env_vars,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Secret objects
	Secrets map[string]string `protobuf:"bytes,12,rep,name=secrets,proto3" json:"secrets,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Labels
	Labels map[string]string `protobuf:"bytes,13,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Annotations
	Annotations map[string]string `protobuf:"bytes,14,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Shared storage size
	SharedStorage uint32 `protobuf:"varint,15,opt,name=shared_storage,json=sharedStorage,proto3" json:"shared_storage,omitempty"`
	// Instance specifications.
	Spec                 *Spec    `protobuf:"bytes,16,opt,name=spec,proto3" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateAppRequest) Reset()         { *m = UpdateAppRequest{} }
func (m *UpdateAppRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateAppRequest) ProtoMessage()    {}
func (*UpdateAppRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_appmanager_545acda625c91d98, []int{2}
}
func (m *UpdateAppRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateAppRequest.Unmarshal(m, b)
}
func (m *UpdateAppRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateAppRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateAppRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateAppRequest.Merge(dst, src)
}
func (m *UpdateAppRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateAppRequest.Size(m)
}
func (m *UpdateAppRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateAppRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateAppRequest proto.InternalMessageInfo

func (m *UpdateAppRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateAppRequest) GetAppState() AppStateAfterDeployment {
	if m != nil {
		return m.AppState
	}
	return AppStateAfterDeployment_disabled
}

func (m *UpdateAppRequest) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *UpdateAppRequest) GetFromCatalog() bool {
	if m != nil {
		return m.FromCatalog
	}
	return false
}

func (m *UpdateAppRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *UpdateAppRequest) GetCycle() string {
	if m != nil {
		return m.Cycle
	}
	return ""
}

func (m *UpdateAppRequest) GetCyclePeriodicAttr() *CyclePeriodicReqAttr {
	if m != nil {
		return m.CyclePeriodicAttr
	}
	return nil
}

func (m *UpdateAppRequest) GetRootGroupId() string {
	if m != nil {
		return m.RootGroupId
	}
	return ""
}

func (m *UpdateAppRequest) GetGroupIds() []string {
	if m != nil {
		return m.GroupIds
	}
	return nil
}

func (m *UpdateAppRequest) GetAppConfigs() map[string]string {
	if m != nil {
		return m.AppConfigs
	}
	return nil
}

func (m *UpdateAppRequest) GetEnvVars() map[string]string {
	if m != nil {
		return m.EnvVars
	}
	return nil
}

func (m *UpdateAppRequest) GetSecrets() map[string]string {
	if m != nil {
		return m.Secrets
	}
	return nil
}

func (m *UpdateAppRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *UpdateAppRequest) GetAnnotations() map[string]string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *UpdateAppRequest) GetSharedStorage() uint32 {
	if m != nil {
		return m.SharedStorage
	}
	return 0
}

func (m *UpdateAppRequest) GetSpec() *Spec {
	if m != nil {
		return m.Spec
	}
	return nil
}

// GetAppsRequest holds attributes required for obtaining information about
// appropriate application and related instances
type GetAppsRequest struct {
	// Application name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Application version.
	// If omitted, controller will provide information about all running application instances
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	// Application type
	Cycle string `protobuf:"bytes,3,opt,name=cycle,proto3" json:"cycle,omitempty"`
	// Root Group ID
	RootGroupId string `protobuf:"bytes,4,opt,name=root_group_id,json=rootGroupId,proto3" json:"root_group_id,omitempty"`
	// A list of group IDs
	GroupIds []string `protobuf:"bytes,5,rep,name=group_ids,json=groupIds,proto3" json:"group_ids,omitempty"`
	// Printout a lot of information
	Verbose              bool     `protobuf:"varint,6,opt,name=verbose,proto3" json:"verbose,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAppsRequest) Reset()         { *m = GetAppsRequest{} }
func (m *GetAppsRequest) String() string { return proto.CompactTextString(m) }
func (*GetAppsRequest) ProtoMessage()    {}
func (*GetAppsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_appmanager_545acda625c91d98, []int{3}
}
func (m *GetAppsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAppsRequest.Unmarshal(m, b)
}
func (m *GetAppsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAppsRequest.Marshal(b, m, deterministic)
}
func (dst *GetAppsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAppsRequest.Merge(dst, src)
}
func (m *GetAppsRequest) XXX_Size() int {
	return xxx_messageInfo_GetAppsRequest.Size(m)
}
func (m *GetAppsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAppsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAppsRequest proto.InternalMessageInfo

func (m *GetAppsRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetAppsRequest) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *GetAppsRequest) GetCycle() string {
	if m != nil {
		return m.Cycle
	}
	return ""
}

func (m *GetAppsRequest) GetRootGroupId() string {
	if m != nil {
		return m.RootGroupId
	}
	return ""
}

func (m *GetAppsRequest) GetGroupIds() []string {
	if m != nil {
		return m.GroupIds
	}
	return nil
}

func (m *GetAppsRequest) GetVerbose() bool {
	if m != nil {
		return m.Verbose
	}
	return false
}

// DeleteAppRequest holds attributes required for deleting
// appropriate application and its related instances
type DeleteAppRequest struct {
	// Application name.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Application version.
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	// Root Group ID
	RootGroupId string `protobuf:"bytes,3,opt,name=root_group_id,json=rootGroupId,proto3" json:"root_group_id,omitempty"`
	// A list of group IDs
	GroupIds []string `protobuf:"bytes,4,rep,name=group_ids,json=groupIds,proto3" json:"group_ids,omitempty"`
	// Indicates whether the app should be also removed from catalog
	Purge                bool     `protobuf:"varint,5,opt,name=purge,proto3" json:"purge,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteAppRequest) Reset()         { *m = DeleteAppRequest{} }
func (m *DeleteAppRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteAppRequest) ProtoMessage()    {}
func (*DeleteAppRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_appmanager_545acda625c91d98, []int{4}
}
func (m *DeleteAppRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteAppRequest.Unmarshal(m, b)
}
func (m *DeleteAppRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteAppRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteAppRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteAppRequest.Merge(dst, src)
}
func (m *DeleteAppRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteAppRequest.Size(m)
}
func (m *DeleteAppRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteAppRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteAppRequest proto.InternalMessageInfo

func (m *DeleteAppRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DeleteAppRequest) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *DeleteAppRequest) GetRootGroupId() string {
	if m != nil {
		return m.RootGroupId
	}
	return ""
}

func (m *DeleteAppRequest) GetGroupIds() []string {
	if m != nil {
		return m.GroupIds
	}
	return nil
}

func (m *DeleteAppRequest) GetPurge() bool {
	if m != nil {
		return m.Purge
	}
	return false
}

// DeleteAppMetadataRequest holds attributes required for deleting
// metadata for appropriate application and related instances
type DeleteAppMetadataRequest struct {
	// Application name
	AppName string `protobuf:"bytes,1,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
	// Deletes only a particular version of application instance
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	// Root Group ID
	RootGroupId string `protobuf:"bytes,3,opt,name=root_group_id,json=rootGroupId,proto3" json:"root_group_id,omitempty"`
	// A list of group IDs
	GroupIds             []string `protobuf:"bytes,4,rep,name=group_ids,json=groupIds,proto3" json:"group_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteAppMetadataRequest) Reset()         { *m = DeleteAppMetadataRequest{} }
func (m *DeleteAppMetadataRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteAppMetadataRequest) ProtoMessage()    {}
func (*DeleteAppMetadataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_appmanager_545acda625c91d98, []int{5}
}
func (m *DeleteAppMetadataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteAppMetadataRequest.Unmarshal(m, b)
}
func (m *DeleteAppMetadataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteAppMetadataRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteAppMetadataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteAppMetadataRequest.Merge(dst, src)
}
func (m *DeleteAppMetadataRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteAppMetadataRequest.Size(m)
}
func (m *DeleteAppMetadataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteAppMetadataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteAppMetadataRequest proto.InternalMessageInfo

func (m *DeleteAppMetadataRequest) GetAppName() string {
	if m != nil {
		return m.AppName
	}
	return ""
}

func (m *DeleteAppMetadataRequest) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *DeleteAppMetadataRequest) GetRootGroupId() string {
	if m != nil {
		return m.RootGroupId
	}
	return ""
}

func (m *DeleteAppMetadataRequest) GetGroupIds() []string {
	if m != nil {
		return m.GroupIds
	}
	return nil
}

// DeleteAppsRequest holds attributes required for removing applications
// and their related instances.
type DeleteAppsRequest struct {
	// Indicates whether all the apps should be also removed from catalog
	Purge                bool     `protobuf:"varint,1,opt,name=purge,proto3" json:"purge,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteAppsRequest) Reset()         { *m = DeleteAppsRequest{} }
func (m *DeleteAppsRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteAppsRequest) ProtoMessage()    {}
func (*DeleteAppsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_appmanager_545acda625c91d98, []int{6}
}
func (m *DeleteAppsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteAppsRequest.Unmarshal(m, b)
}
func (m *DeleteAppsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteAppsRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteAppsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteAppsRequest.Merge(dst, src)
}
func (m *DeleteAppsRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteAppsRequest.Size(m)
}
func (m *DeleteAppsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteAppsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteAppsRequest proto.InternalMessageInfo

func (m *DeleteAppsRequest) GetPurge() bool {
	if m != nil {
		return m.Purge
	}
	return false
}

// EnableDisableAppRequest holds attributes required for disabling or enabling appropriate application instance
type EnableDisableAppRequest struct {
	// Application name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Application version
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	// Root Group ID
	RootGroupId string `protobuf:"bytes,3,opt,name=root_group_id,json=rootGroupId,proto3" json:"root_group_id,omitempty"`
	// A list of group IDs
	GroupIds []string `protobuf:"bytes,4,rep,name=group_ids,json=groupIds,proto3" json:"group_ids,omitempty"`
	// Enable or disable application instances
	Disable              bool     `protobuf:"varint,5,opt,name=disable,proto3" json:"disable,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnableDisableAppRequest) Reset()         { *m = EnableDisableAppRequest{} }
func (m *EnableDisableAppRequest) String() string { return proto.CompactTextString(m) }
func (*EnableDisableAppRequest) ProtoMessage()    {}
func (*EnableDisableAppRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_appmanager_545acda625c91d98, []int{7}
}
func (m *EnableDisableAppRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnableDisableAppRequest.Unmarshal(m, b)
}
func (m *EnableDisableAppRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnableDisableAppRequest.Marshal(b, m, deterministic)
}
func (dst *EnableDisableAppRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnableDisableAppRequest.Merge(dst, src)
}
func (m *EnableDisableAppRequest) XXX_Size() int {
	return xxx_messageInfo_EnableDisableAppRequest.Size(m)
}
func (m *EnableDisableAppRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EnableDisableAppRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EnableDisableAppRequest proto.InternalMessageInfo

func (m *EnableDisableAppRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EnableDisableAppRequest) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *EnableDisableAppRequest) GetRootGroupId() string {
	if m != nil {
		return m.RootGroupId
	}
	return ""
}

func (m *EnableDisableAppRequest) GetGroupIds() []string {
	if m != nil {
		return m.GroupIds
	}
	return nil
}

func (m *EnableDisableAppRequest) GetDisable() bool {
	if m != nil {
		return m.Disable
	}
	return false
}

// CyclePeriodicReqAttr message holds information for an application of type periodic
type CyclePeriodicReqAttr struct {
	WorkingDays          *CyclePeriodicReqAttr_Sched `protobuf:"bytes,1,opt,name=working_days,json=workingDays,proto3" json:"working_days,omitempty"`
	MinStartHour         uint32                      `protobuf:"varint,2,opt,name=min_start_hour,json=minStartHour,proto3" json:"min_start_hour,omitempty"`
	MaxStartHour         uint32                      `protobuf:"varint,3,opt,name=max_start_hour,json=maxStartHour,proto3" json:"max_start_hour,omitempty"`
	IntervalMin          uint32                      `protobuf:"varint,4,opt,name=interval_min,json=intervalMin,proto3" json:"interval_min,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *CyclePeriodicReqAttr) Reset()         { *m = CyclePeriodicReqAttr{} }
func (m *CyclePeriodicReqAttr) String() string { return proto.CompactTextString(m) }
func (*CyclePeriodicReqAttr) ProtoMessage()    {}
func (*CyclePeriodicReqAttr) Descriptor() ([]byte, []int) {
	return fileDescriptor_appmanager_545acda625c91d98, []int{8}
}
func (m *CyclePeriodicReqAttr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CyclePeriodicReqAttr.Unmarshal(m, b)
}
func (m *CyclePeriodicReqAttr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CyclePeriodicReqAttr.Marshal(b, m, deterministic)
}
func (dst *CyclePeriodicReqAttr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CyclePeriodicReqAttr.Merge(dst, src)
}
func (m *CyclePeriodicReqAttr) XXX_Size() int {
	return xxx_messageInfo_CyclePeriodicReqAttr.Size(m)
}
func (m *CyclePeriodicReqAttr) XXX_DiscardUnknown() {
	xxx_messageInfo_CyclePeriodicReqAttr.DiscardUnknown(m)
}

var xxx_messageInfo_CyclePeriodicReqAttr proto.InternalMessageInfo

func (m *CyclePeriodicReqAttr) GetWorkingDays() *CyclePeriodicReqAttr_Sched {
	if m != nil {
		return m.WorkingDays
	}
	return nil
}

func (m *CyclePeriodicReqAttr) GetMinStartHour() uint32 {
	if m != nil {
		return m.MinStartHour
	}
	return 0
}

func (m *CyclePeriodicReqAttr) GetMaxStartHour() uint32 {
	if m != nil {
		return m.MaxStartHour
	}
	return 0
}

func (m *CyclePeriodicReqAttr) GetIntervalMin() uint32 {
	if m != nil {
		return m.IntervalMin
	}
	return 0
}

type CyclePeriodicReqAttr_Sched struct {
	Saturday             bool     `protobuf:"varint,1,opt,name=Saturday,proto3" json:"Saturday,omitempty"`
	Sunday               bool     `protobuf:"varint,2,opt,name=Sunday,proto3" json:"Sunday,omitempty"`
	Monday               bool     `protobuf:"varint,3,opt,name=Monday,proto3" json:"Monday,omitempty"`
	Tuesday              bool     `protobuf:"varint,4,opt,name=Tuesday,proto3" json:"Tuesday,omitempty"`
	Wednesday            bool     `protobuf:"varint,5,opt,name=Wednesday,proto3" json:"Wednesday,omitempty"`
	Thursday             bool     `protobuf:"varint,6,opt,name=Thursday,proto3" json:"Thursday,omitempty"`
	Friday               bool     `protobuf:"varint,7,opt,name=Friday,proto3" json:"Friday,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CyclePeriodicReqAttr_Sched) Reset()         { *m = CyclePeriodicReqAttr_Sched{} }
func (m *CyclePeriodicReqAttr_Sched) String() string { return proto.CompactTextString(m) }
func (*CyclePeriodicReqAttr_Sched) ProtoMessage()    {}
func (*CyclePeriodicReqAttr_Sched) Descriptor() ([]byte, []int) {
	return fileDescriptor_appmanager_545acda625c91d98, []int{8, 0}
}
func (m *CyclePeriodicReqAttr_Sched) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CyclePeriodicReqAttr_Sched.Unmarshal(m, b)
}
func (m *CyclePeriodicReqAttr_Sched) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CyclePeriodicReqAttr_Sched.Marshal(b, m, deterministic)
}
func (dst *CyclePeriodicReqAttr_Sched) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CyclePeriodicReqAttr_Sched.Merge(dst, src)
}
func (m *CyclePeriodicReqAttr_Sched) XXX_Size() int {
	return xxx_messageInfo_CyclePeriodicReqAttr_Sched.Size(m)
}
func (m *CyclePeriodicReqAttr_Sched) XXX_DiscardUnknown() {
	xxx_messageInfo_CyclePeriodicReqAttr_Sched.DiscardUnknown(m)
}

var xxx_messageInfo_CyclePeriodicReqAttr_Sched proto.InternalMessageInfo

func (m *CyclePeriodicReqAttr_Sched) GetSaturday() bool {
	if m != nil {
		return m.Saturday
	}
	return false
}

func (m *CyclePeriodicReqAttr_Sched) GetSunday() bool {
	if m != nil {
		return m.Sunday
	}
	return false
}

func (m *CyclePeriodicReqAttr_Sched) GetMonday() bool {
	if m != nil {
		return m.Monday
	}
	return false
}

func (m *CyclePeriodicReqAttr_Sched) GetTuesday() bool {
	if m != nil {
		return m.Tuesday
	}
	return false
}

func (m *CyclePeriodicReqAttr_Sched) GetWednesday() bool {
	if m != nil {
		return m.Wednesday
	}
	return false
}

func (m *CyclePeriodicReqAttr_Sched) GetThursday() bool {
	if m != nil {
		return m.Thursday
	}
	return false
}

func (m *CyclePeriodicReqAttr_Sched) GetFriday() bool {
	if m != nil {
		return m.Friday
	}
	return false
}

// Specification message
type Spec struct {
	Image                *Spec_Image     `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	Ports                []*Spec_Port    `protobuf:"bytes,2,rep,name=ports,proto3" json:"ports,omitempty"`
	Resources            *Spec_Resources `protobuf:"bytes,3,opt,name=resources,proto3" json:"resources,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Spec) Reset()         { *m = Spec{} }
func (m *Spec) String() string { return proto.CompactTextString(m) }
func (*Spec) ProtoMessage()    {}
func (*Spec) Descriptor() ([]byte, []int) {
	return fileDescriptor_appmanager_545acda625c91d98, []int{9}
}
func (m *Spec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Spec.Unmarshal(m, b)
}
func (m *Spec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Spec.Marshal(b, m, deterministic)
}
func (dst *Spec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Spec.Merge(dst, src)
}
func (m *Spec) XXX_Size() int {
	return xxx_messageInfo_Spec.Size(m)
}
func (m *Spec) XXX_DiscardUnknown() {
	xxx_messageInfo_Spec.DiscardUnknown(m)
}

var xxx_messageInfo_Spec proto.InternalMessageInfo

func (m *Spec) GetImage() *Spec_Image {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *Spec) GetPorts() []*Spec_Port {
	if m != nil {
		return m.Ports
	}
	return nil
}

func (m *Spec) GetResources() *Spec_Resources {
	if m != nil {
		return m.Resources
	}
	return nil
}

// Image structure.
type Spec_Image struct {
	// Repository name.
	Repo string `protobuf:"bytes,1,opt,name=repo,proto3" json:"repo,omitempty"`
	// Image tag.
	Tag                  string   `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Spec_Image) Reset()         { *m = Spec_Image{} }
func (m *Spec_Image) String() string { return proto.CompactTextString(m) }
func (*Spec_Image) ProtoMessage()    {}
func (*Spec_Image) Descriptor() ([]byte, []int) {
	return fileDescriptor_appmanager_545acda625c91d98, []int{9, 0}
}
func (m *Spec_Image) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Spec_Image.Unmarshal(m, b)
}
func (m *Spec_Image) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Spec_Image.Marshal(b, m, deterministic)
}
func (dst *Spec_Image) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Spec_Image.Merge(dst, src)
}
func (m *Spec_Image) XXX_Size() int {
	return xxx_messageInfo_Spec_Image.Size(m)
}
func (m *Spec_Image) XXX_DiscardUnknown() {
	xxx_messageInfo_Spec_Image.DiscardUnknown(m)
}

var xxx_messageInfo_Spec_Image proto.InternalMessageInfo

func (m *Spec_Image) GetRepo() string {
	if m != nil {
		return m.Repo
	}
	return ""
}

func (m *Spec_Image) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

// Network structure
type Spec_Port struct {
	// Port label.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Port number.
	Number               uint32          `protobuf:"varint,2,opt,name=number,proto3" json:"number,omitempty"`
	Proto                Spec_Port_Proto `protobuf:"varint,3,opt,name=proto,proto3,enum=com.cisco.son.apphcd.api.v1.appmanager.Spec_Port_Proto" json:"proto,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Spec_Port) Reset()         { *m = Spec_Port{} }
func (m *Spec_Port) String() string { return proto.CompactTextString(m) }
func (*Spec_Port) ProtoMessage()    {}
func (*Spec_Port) Descriptor() ([]byte, []int) {
	return fileDescriptor_appmanager_545acda625c91d98, []int{9, 1}
}
func (m *Spec_Port) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Spec_Port.Unmarshal(m, b)
}
func (m *Spec_Port) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Spec_Port.Marshal(b, m, deterministic)
}
func (dst *Spec_Port) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Spec_Port.Merge(dst, src)
}
func (m *Spec_Port) XXX_Size() int {
	return xxx_messageInfo_Spec_Port.Size(m)
}
func (m *Spec_Port) XXX_DiscardUnknown() {
	xxx_messageInfo_Spec_Port.DiscardUnknown(m)
}

var xxx_messageInfo_Spec_Port proto.InternalMessageInfo

func (m *Spec_Port) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Spec_Port) GetNumber() uint32 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *Spec_Port) GetProto() Spec_Port_Proto {
	if m != nil {
		return m.Proto
	}
	return Spec_Port_TCP
}

type Spec_Resources struct {
	PersistentStorage    uint32                 `protobuf:"varint,1,opt,name=persistent_storage,json=persistentStorage,proto3" json:"persistent_storage,omitempty"`
	Limits               *Spec_Resources_Limits `protobuf:"bytes,2,opt,name=limits,proto3" json:"limits,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Spec_Resources) Reset()         { *m = Spec_Resources{} }
func (m *Spec_Resources) String() string { return proto.CompactTextString(m) }
func (*Spec_Resources) ProtoMessage()    {}
func (*Spec_Resources) Descriptor() ([]byte, []int) {
	return fileDescriptor_appmanager_545acda625c91d98, []int{9, 2}
}
func (m *Spec_Resources) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Spec_Resources.Unmarshal(m, b)
}
func (m *Spec_Resources) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Spec_Resources.Marshal(b, m, deterministic)
}
func (dst *Spec_Resources) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Spec_Resources.Merge(dst, src)
}
func (m *Spec_Resources) XXX_Size() int {
	return xxx_messageInfo_Spec_Resources.Size(m)
}
func (m *Spec_Resources) XXX_DiscardUnknown() {
	xxx_messageInfo_Spec_Resources.DiscardUnknown(m)
}

var xxx_messageInfo_Spec_Resources proto.InternalMessageInfo

func (m *Spec_Resources) GetPersistentStorage() uint32 {
	if m != nil {
		return m.PersistentStorage
	}
	return 0
}

func (m *Spec_Resources) GetLimits() *Spec_Resources_Limits {
	if m != nil {
		return m.Limits
	}
	return nil
}

type Spec_Resources_Limits struct {
	Memory               uint32   `protobuf:"varint,1,opt,name=memory,proto3" json:"memory,omitempty"`
	Cpu                  float64  `protobuf:"fixed64,2,opt,name=cpu,proto3" json:"cpu,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Spec_Resources_Limits) Reset()         { *m = Spec_Resources_Limits{} }
func (m *Spec_Resources_Limits) String() string { return proto.CompactTextString(m) }
func (*Spec_Resources_Limits) ProtoMessage()    {}
func (*Spec_Resources_Limits) Descriptor() ([]byte, []int) {
	return fileDescriptor_appmanager_545acda625c91d98, []int{9, 2, 0}
}
func (m *Spec_Resources_Limits) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Spec_Resources_Limits.Unmarshal(m, b)
}
func (m *Spec_Resources_Limits) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Spec_Resources_Limits.Marshal(b, m, deterministic)
}
func (dst *Spec_Resources_Limits) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Spec_Resources_Limits.Merge(dst, src)
}
func (m *Spec_Resources_Limits) XXX_Size() int {
	return xxx_messageInfo_Spec_Resources_Limits.Size(m)
}
func (m *Spec_Resources_Limits) XXX_DiscardUnknown() {
	xxx_messageInfo_Spec_Resources_Limits.DiscardUnknown(m)
}

var xxx_messageInfo_Spec_Resources_Limits proto.InternalMessageInfo

func (m *Spec_Resources_Limits) GetMemory() uint32 {
	if m != nil {
		return m.Memory
	}
	return 0
}

func (m *Spec_Resources_Limits) GetCpu() float64 {
	if m != nil {
		return m.Cpu
	}
	return 0
}

// CyclePeriodicRespAttr message holds information for an application of type periodic
type CyclePeriodicRespAttr struct {
	WorkingDays          []string `protobuf:"bytes,1,rep,name=working_days,json=workingDays,proto3" json:"working_days,omitempty"`
	MinStartHour         uint32   `protobuf:"varint,2,opt,name=min_start_hour,json=minStartHour,proto3" json:"min_start_hour,omitempty"`
	MaxStartHour         uint32   `protobuf:"varint,3,opt,name=max_start_hour,json=maxStartHour,proto3" json:"max_start_hour,omitempty"`
	IntervalMin          uint32   `protobuf:"varint,4,opt,name=interval_min,json=intervalMin,proto3" json:"interval_min,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CyclePeriodicRespAttr) Reset()         { *m = CyclePeriodicRespAttr{} }
func (m *CyclePeriodicRespAttr) String() string { return proto.CompactTextString(m) }
func (*CyclePeriodicRespAttr) ProtoMessage()    {}
func (*CyclePeriodicRespAttr) Descriptor() ([]byte, []int) {
	return fileDescriptor_appmanager_545acda625c91d98, []int{10}
}
func (m *CyclePeriodicRespAttr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CyclePeriodicRespAttr.Unmarshal(m, b)
}
func (m *CyclePeriodicRespAttr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CyclePeriodicRespAttr.Marshal(b, m, deterministic)
}
func (dst *CyclePeriodicRespAttr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CyclePeriodicRespAttr.Merge(dst, src)
}
func (m *CyclePeriodicRespAttr) XXX_Size() int {
	return xxx_messageInfo_CyclePeriodicRespAttr.Size(m)
}
func (m *CyclePeriodicRespAttr) XXX_DiscardUnknown() {
	xxx_messageInfo_CyclePeriodicRespAttr.DiscardUnknown(m)
}

var xxx_messageInfo_CyclePeriodicRespAttr proto.InternalMessageInfo

func (m *CyclePeriodicRespAttr) GetWorkingDays() []string {
	if m != nil {
		return m.WorkingDays
	}
	return nil
}

func (m *CyclePeriodicRespAttr) GetMinStartHour() uint32 {
	if m != nil {
		return m.MinStartHour
	}
	return 0
}

func (m *CyclePeriodicRespAttr) GetMaxStartHour() uint32 {
	if m != nil {
		return m.MaxStartHour
	}
	return 0
}

func (m *CyclePeriodicRespAttr) GetIntervalMin() uint32 {
	if m != nil {
		return m.IntervalMin
	}
	return 0
}

type PeriodicFields struct {
	Schedule                   string   `protobuf:"bytes,1,opt,name=schedule,proto3" json:"schedule,omitempty"`
	LastScheduleTime           string   `protobuf:"bytes,2,opt,name=last_schedule_time,json=lastScheduleTime,proto3" json:"last_schedule_time,omitempty"`
	FailedJobsHistoryLimit     int64    `protobuf:"varint,3,opt,name=failed_jobs_history_limit,json=failedJobsHistoryLimit,proto3" json:"failed_jobs_history_limit,omitempty"`
	SuccessfulJobsHistoryLimit int64    `protobuf:"varint,4,opt,name=successful_jobs_history_limit,json=successfulJobsHistoryLimit,proto3" json:"successful_jobs_history_limit,omitempty"`
	XXX_NoUnkeyedLiteral       struct{} `json:"-"`
	XXX_unrecognized           []byte   `json:"-"`
	XXX_sizecache              int32    `json:"-"`
}

func (m *PeriodicFields) Reset()         { *m = PeriodicFields{} }
func (m *PeriodicFields) String() string { return proto.CompactTextString(m) }
func (*PeriodicFields) ProtoMessage()    {}
func (*PeriodicFields) Descriptor() ([]byte, []int) {
	return fileDescriptor_appmanager_545acda625c91d98, []int{11}
}
func (m *PeriodicFields) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeriodicFields.Unmarshal(m, b)
}
func (m *PeriodicFields) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeriodicFields.Marshal(b, m, deterministic)
}
func (dst *PeriodicFields) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeriodicFields.Merge(dst, src)
}
func (m *PeriodicFields) XXX_Size() int {
	return xxx_messageInfo_PeriodicFields.Size(m)
}
func (m *PeriodicFields) XXX_DiscardUnknown() {
	xxx_messageInfo_PeriodicFields.DiscardUnknown(m)
}

var xxx_messageInfo_PeriodicFields proto.InternalMessageInfo

func (m *PeriodicFields) GetSchedule() string {
	if m != nil {
		return m.Schedule
	}
	return ""
}

func (m *PeriodicFields) GetLastScheduleTime() string {
	if m != nil {
		return m.LastScheduleTime
	}
	return ""
}

func (m *PeriodicFields) GetFailedJobsHistoryLimit() int64 {
	if m != nil {
		return m.FailedJobsHistoryLimit
	}
	return 0
}

func (m *PeriodicFields) GetSuccessfulJobsHistoryLimit() int64 {
	if m != nil {
		return m.SuccessfulJobsHistoryLimit
	}
	return 0
}

type RunOnceFields struct {
	Active               int64    `protobuf:"varint,1,opt,name=active,proto3" json:"active,omitempty"`
	Completions          int64    `protobuf:"varint,2,opt,name=completions,proto3" json:"completions,omitempty"`
	Failed               int64    `protobuf:"varint,3,opt,name=failed,proto3" json:"failed,omitempty"`
	Succeeded            int64    `protobuf:"varint,4,opt,name=succeeded,proto3" json:"succeeded,omitempty"`
	StartTime            string   `protobuf:"bytes,5,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	CompletionTime       string   `protobuf:"bytes,6,opt,name=completion_time,json=completionTime,proto3" json:"completion_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RunOnceFields) Reset()         { *m = RunOnceFields{} }
func (m *RunOnceFields) String() string { return proto.CompactTextString(m) }
func (*RunOnceFields) ProtoMessage()    {}
func (*RunOnceFields) Descriptor() ([]byte, []int) {
	return fileDescriptor_appmanager_545acda625c91d98, []int{12}
}
func (m *RunOnceFields) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunOnceFields.Unmarshal(m, b)
}
func (m *RunOnceFields) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunOnceFields.Marshal(b, m, deterministic)
}
func (dst *RunOnceFields) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunOnceFields.Merge(dst, src)
}
func (m *RunOnceFields) XXX_Size() int {
	return xxx_messageInfo_RunOnceFields.Size(m)
}
func (m *RunOnceFields) XXX_DiscardUnknown() {
	xxx_messageInfo_RunOnceFields.DiscardUnknown(m)
}

var xxx_messageInfo_RunOnceFields proto.InternalMessageInfo

func (m *RunOnceFields) GetActive() int64 {
	if m != nil {
		return m.Active
	}
	return 0
}

func (m *RunOnceFields) GetCompletions() int64 {
	if m != nil {
		return m.Completions
	}
	return 0
}

func (m *RunOnceFields) GetFailed() int64 {
	if m != nil {
		return m.Failed
	}
	return 0
}

func (m *RunOnceFields) GetSucceeded() int64 {
	if m != nil {
		return m.Succeeded
	}
	return 0
}

func (m *RunOnceFields) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *RunOnceFields) GetCompletionTime() string {
	if m != nil {
		return m.CompletionTime
	}
	return ""
}

type Resources struct {
	Requests             *Resources_Requests `protobuf:"bytes,1,opt,name=requests,proto3" json:"requests,omitempty"`
	Limits               *Resources_Limits   `protobuf:"bytes,2,opt,name=limits,proto3" json:"limits,omitempty"`
	PersistentStorage    uint32              `protobuf:"varint,3,opt,name=persistent_storage,json=persistentStorage,proto3" json:"persistent_storage,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Resources) Reset()         { *m = Resources{} }
func (m *Resources) String() string { return proto.CompactTextString(m) }
func (*Resources) ProtoMessage()    {}
func (*Resources) Descriptor() ([]byte, []int) {
	return fileDescriptor_appmanager_545acda625c91d98, []int{13}
}
func (m *Resources) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Resources.Unmarshal(m, b)
}
func (m *Resources) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Resources.Marshal(b, m, deterministic)
}
func (dst *Resources) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Resources.Merge(dst, src)
}
func (m *Resources) XXX_Size() int {
	return xxx_messageInfo_Resources.Size(m)
}
func (m *Resources) XXX_DiscardUnknown() {
	xxx_messageInfo_Resources.DiscardUnknown(m)
}

var xxx_messageInfo_Resources proto.InternalMessageInfo

func (m *Resources) GetRequests() *Resources_Requests {
	if m != nil {
		return m.Requests
	}
	return nil
}

func (m *Resources) GetLimits() *Resources_Limits {
	if m != nil {
		return m.Limits
	}
	return nil
}

func (m *Resources) GetPersistentStorage() uint32 {
	if m != nil {
		return m.PersistentStorage
	}
	return 0
}

type Resources_Requests struct {
	// Memory in MiB
	Memory uint32 `protobuf:"varint,1,opt,name=memory,proto3" json:"memory,omitempty"`
	// CPU in millicores
	Cpu                  float64  `protobuf:"fixed64,2,opt,name=cpu,proto3" json:"cpu,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Resources_Requests) Reset()         { *m = Resources_Requests{} }
func (m *Resources_Requests) String() string { return proto.CompactTextString(m) }
func (*Resources_Requests) ProtoMessage()    {}
func (*Resources_Requests) Descriptor() ([]byte, []int) {
	return fileDescriptor_appmanager_545acda625c91d98, []int{13, 0}
}
func (m *Resources_Requests) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Resources_Requests.Unmarshal(m, b)
}
func (m *Resources_Requests) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Resources_Requests.Marshal(b, m, deterministic)
}
func (dst *Resources_Requests) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Resources_Requests.Merge(dst, src)
}
func (m *Resources_Requests) XXX_Size() int {
	return xxx_messageInfo_Resources_Requests.Size(m)
}
func (m *Resources_Requests) XXX_DiscardUnknown() {
	xxx_messageInfo_Resources_Requests.DiscardUnknown(m)
}

var xxx_messageInfo_Resources_Requests proto.InternalMessageInfo

func (m *Resources_Requests) GetMemory() uint32 {
	if m != nil {
		return m.Memory
	}
	return 0
}

func (m *Resources_Requests) GetCpu() float64 {
	if m != nil {
		return m.Cpu
	}
	return 0
}

type Resources_Limits struct {
	// Memory in MiB
	Memory uint32 `protobuf:"varint,1,opt,name=memory,proto3" json:"memory,omitempty"`
	// CPU in milli cores
	Cpu                  float64  `protobuf:"fixed64,2,opt,name=cpu,proto3" json:"cpu,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Resources_Limits) Reset()         { *m = Resources_Limits{} }
func (m *Resources_Limits) String() string { return proto.CompactTextString(m) }
func (*Resources_Limits) ProtoMessage()    {}
func (*Resources_Limits) Descriptor() ([]byte, []int) {
	return fileDescriptor_appmanager_545acda625c91d98, []int{13, 1}
}
func (m *Resources_Limits) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Resources_Limits.Unmarshal(m, b)
}
func (m *Resources_Limits) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Resources_Limits.Marshal(b, m, deterministic)
}
func (dst *Resources_Limits) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Resources_Limits.Merge(dst, src)
}
func (m *Resources_Limits) XXX_Size() int {
	return xxx_messageInfo_Resources_Limits.Size(m)
}
func (m *Resources_Limits) XXX_DiscardUnknown() {
	xxx_messageInfo_Resources_Limits.DiscardUnknown(m)
}

var xxx_messageInfo_Resources_Limits proto.InternalMessageInfo

func (m *Resources_Limits) GetMemory() uint32 {
	if m != nil {
		return m.Memory
	}
	return 0
}

func (m *Resources_Limits) GetCpu() float64 {
	if m != nil {
		return m.Cpu
	}
	return 0
}

// Instance message holds information about a particular workload
type Instance struct {
	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id          string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Version     string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	RootGroupId string `protobuf:"bytes,4,opt,name=root_group_id,json=rootGroupId,proto3" json:"root_group_id,omitempty"`
	GroupId     string `protobuf:"bytes,5,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	State       string `protobuf:"bytes,6,opt,name=state,proto3" json:"state,omitempty"`
	Cycle       string `protobuf:"bytes,7,opt,name=cycle,proto3" json:"cycle,omitempty"`
	ImageRepo   string `protobuf:"bytes,8,opt,name=image_repo,json=imageRepo,proto3" json:"image_repo,omitempty"`
	ImageName   string `protobuf:"bytes,9,opt,name=image_name,json=imageName,proto3" json:"image_name,omitempty"`
	ImageTag    string `protobuf:"bytes,10,opt,name=image_tag,json=imageTag,proto3" json:"image_tag,omitempty"`
	// Types that are valid to be assigned to CycleFields:
	//	*Instance_PeriodicFields
	//	*Instance_RunOnceFields
	CycleFields          isInstance_CycleFields     `protobuf_oneof:"CycleFields"`
	CreateDate           string                     `protobuf:"bytes,13,opt,name=create_date,json=createDate,proto3" json:"create_date,omitempty"`
	UpdateDate           string                     `protobuf:"bytes,14,opt,name=update_date,json=updateDate,proto3" json:"update_date,omitempty"`
	ProjectId            string                     `protobuf:"bytes,15,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Namespace            string                     `protobuf:"bytes,16,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Scale                string                     `protobuf:"bytes,17,opt,name=scale,proto3" json:"scale,omitempty"`
	Resources            *Resources                 `protobuf:"bytes,18,opt,name=resources,proto3" json:"resources,omitempty"`
	Containers           []*Instance_Container      `protobuf:"bytes,19,rep,name=containers,proto3" json:"containers,omitempty"`
	PublicEndpoints      []*Instance_PublicEndpoint `protobuf:"bytes,20,rep,name=public_endpoints,json=publicEndpoints,proto3" json:"public_endpoints,omitempty"`
	Template             *Template                  `protobuf:"bytes,21,opt,name=template,proto3" json:"template,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *Instance) Reset()         { *m = Instance{} }
func (m *Instance) String() string { return proto.CompactTextString(m) }
func (*Instance) ProtoMessage()    {}
func (*Instance) Descriptor() ([]byte, []int) {
	return fileDescriptor_appmanager_545acda625c91d98, []int{14}
}
func (m *Instance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Instance.Unmarshal(m, b)
}
func (m *Instance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Instance.Marshal(b, m, deterministic)
}
func (dst *Instance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Instance.Merge(dst, src)
}
func (m *Instance) XXX_Size() int {
	return xxx_messageInfo_Instance.Size(m)
}
func (m *Instance) XXX_DiscardUnknown() {
	xxx_messageInfo_Instance.DiscardUnknown(m)
}

var xxx_messageInfo_Instance proto.InternalMessageInfo

func (m *Instance) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Instance) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Instance) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Instance) GetRootGroupId() string {
	if m != nil {
		return m.RootGroupId
	}
	return ""
}

func (m *Instance) GetGroupId() string {
	if m != nil {
		return m.GroupId
	}
	return ""
}

func (m *Instance) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *Instance) GetCycle() string {
	if m != nil {
		return m.Cycle
	}
	return ""
}

func (m *Instance) GetImageRepo() string {
	if m != nil {
		return m.ImageRepo
	}
	return ""
}

func (m *Instance) GetImageName() string {
	if m != nil {
		return m.ImageName
	}
	return ""
}

func (m *Instance) GetImageTag() string {
	if m != nil {
		return m.ImageTag
	}
	return ""
}

type isInstance_CycleFields interface {
	isInstance_CycleFields()
}

type Instance_PeriodicFields struct {
	PeriodicFields *PeriodicFields `protobuf:"bytes,11,opt,name=periodic_fields,json=periodicFields,proto3,oneof"`
}

type Instance_RunOnceFields struct {
	RunOnceFields *RunOnceFields `protobuf:"bytes,12,opt,name=run_once_fields,json=runOnceFields,proto3,oneof"`
}

func (*Instance_PeriodicFields) isInstance_CycleFields() {}

func (*Instance_RunOnceFields) isInstance_CycleFields() {}

func (m *Instance) GetCycleFields() isInstance_CycleFields {
	if m != nil {
		return m.CycleFields
	}
	return nil
}

func (m *Instance) GetPeriodicFields() *PeriodicFields {
	if x, ok := m.GetCycleFields().(*Instance_PeriodicFields); ok {
		return x.PeriodicFields
	}
	return nil
}

func (m *Instance) GetRunOnceFields() *RunOnceFields {
	if x, ok := m.GetCycleFields().(*Instance_RunOnceFields); ok {
		return x.RunOnceFields
	}
	return nil
}

func (m *Instance) GetCreateDate() string {
	if m != nil {
		return m.CreateDate
	}
	return ""
}

func (m *Instance) GetUpdateDate() string {
	if m != nil {
		return m.UpdateDate
	}
	return ""
}

func (m *Instance) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *Instance) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *Instance) GetScale() string {
	if m != nil {
		return m.Scale
	}
	return ""
}

func (m *Instance) GetResources() *Resources {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *Instance) GetContainers() []*Instance_Container {
	if m != nil {
		return m.Containers
	}
	return nil
}

func (m *Instance) GetPublicEndpoints() []*Instance_PublicEndpoint {
	if m != nil {
		return m.PublicEndpoints
	}
	return nil
}

func (m *Instance) GetTemplate() *Template {
	if m != nil {
		return m.Template
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Instance) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Instance_OneofMarshaler, _Instance_OneofUnmarshaler, _Instance_OneofSizer, []interface{}{
		(*Instance_PeriodicFields)(nil),
		(*Instance_RunOnceFields)(nil),
	}
}

func _Instance_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Instance)
	// CycleFields
	switch x := m.CycleFields.(type) {
	case *Instance_PeriodicFields:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PeriodicFields); err != nil {
			return err
		}
	case *Instance_RunOnceFields:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RunOnceFields); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Instance.CycleFields has unexpected type %T", x)
	}
	return nil
}

func _Instance_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Instance)
	switch tag {
	case 11: // CycleFields.periodic_fields
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PeriodicFields)
		err := b.DecodeMessage(msg)
		m.CycleFields = &Instance_PeriodicFields{msg}
		return true, err
	case 12: // CycleFields.run_once_fields
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RunOnceFields)
		err := b.DecodeMessage(msg)
		m.CycleFields = &Instance_RunOnceFields{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Instance_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Instance)
	// CycleFields
	switch x := m.CycleFields.(type) {
	case *Instance_PeriodicFields:
		s := proto.Size(x.PeriodicFields)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Instance_RunOnceFields:
		s := proto.Size(x.RunOnceFields)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Instance_Container struct {
	Name                 string                            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Image                string                            `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	State                string                            `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	Ports                []*Instance_Container_Port        `protobuf:"bytes,4,rep,name=ports,proto3" json:"ports,omitempty"`
	VolMounts            []*Instance_Container_VolumeMount `protobuf:"bytes,5,rep,name=vol_mounts,json=volMounts,proto3" json:"vol_mounts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *Instance_Container) Reset()         { *m = Instance_Container{} }
func (m *Instance_Container) String() string { return proto.CompactTextString(m) }
func (*Instance_Container) ProtoMessage()    {}
func (*Instance_Container) Descriptor() ([]byte, []int) {
	return fileDescriptor_appmanager_545acda625c91d98, []int{14, 0}
}
func (m *Instance_Container) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Instance_Container.Unmarshal(m, b)
}
func (m *Instance_Container) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Instance_Container.Marshal(b, m, deterministic)
}
func (dst *Instance_Container) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Instance_Container.Merge(dst, src)
}
func (m *Instance_Container) XXX_Size() int {
	return xxx_messageInfo_Instance_Container.Size(m)
}
func (m *Instance_Container) XXX_DiscardUnknown() {
	xxx_messageInfo_Instance_Container.DiscardUnknown(m)
}

var xxx_messageInfo_Instance_Container proto.InternalMessageInfo

func (m *Instance_Container) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Instance_Container) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *Instance_Container) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *Instance_Container) GetPorts() []*Instance_Container_Port {
	if m != nil {
		return m.Ports
	}
	return nil
}

func (m *Instance_Container) GetVolMounts() []*Instance_Container_VolumeMount {
	if m != nil {
		return m.VolMounts
	}
	return nil
}

type Instance_Container_Port struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Port                 int64    `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	DnsName              string   `protobuf:"bytes,3,opt,name=dns_name,json=dnsName,proto3" json:"dns_name,omitempty"`
	HostIp               string   `protobuf:"bytes,4,opt,name=host_ip,json=hostIp,proto3" json:"host_ip,omitempty"`
	Kind                 string   `protobuf:"bytes,5,opt,name=kind,proto3" json:"kind,omitempty"`
	Proto                string   `protobuf:"bytes,6,opt,name=proto,proto3" json:"proto,omitempty"`
	SrcPort              int64    `protobuf:"varint,7,opt,name=src_port,json=srcPort,proto3" json:"src_port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Instance_Container_Port) Reset()         { *m = Instance_Container_Port{} }
func (m *Instance_Container_Port) String() string { return proto.CompactTextString(m) }
func (*Instance_Container_Port) ProtoMessage()    {}
func (*Instance_Container_Port) Descriptor() ([]byte, []int) {
	return fileDescriptor_appmanager_545acda625c91d98, []int{14, 0, 0}
}
func (m *Instance_Container_Port) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Instance_Container_Port.Unmarshal(m, b)
}
func (m *Instance_Container_Port) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Instance_Container_Port.Marshal(b, m, deterministic)
}
func (dst *Instance_Container_Port) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Instance_Container_Port.Merge(dst, src)
}
func (m *Instance_Container_Port) XXX_Size() int {
	return xxx_messageInfo_Instance_Container_Port.Size(m)
}
func (m *Instance_Container_Port) XXX_DiscardUnknown() {
	xxx_messageInfo_Instance_Container_Port.DiscardUnknown(m)
}

var xxx_messageInfo_Instance_Container_Port proto.InternalMessageInfo

func (m *Instance_Container_Port) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Instance_Container_Port) GetPort() int64 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *Instance_Container_Port) GetDnsName() string {
	if m != nil {
		return m.DnsName
	}
	return ""
}

func (m *Instance_Container_Port) GetHostIp() string {
	if m != nil {
		return m.HostIp
	}
	return ""
}

func (m *Instance_Container_Port) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *Instance_Container_Port) GetProto() string {
	if m != nil {
		return m.Proto
	}
	return ""
}

func (m *Instance_Container_Port) GetSrcPort() int64 {
	if m != nil {
		return m.SrcPort
	}
	return 0
}

type Instance_Container_VolumeMount struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	MountPath            string   `protobuf:"bytes,2,opt,name=mount_path,json=mountPath,proto3" json:"mount_path,omitempty"`
	ReadOnly             bool     `protobuf:"varint,3,opt,name=read_only,json=readOnly,proto3" json:"read_only,omitempty"`
	SubPath              string   `protobuf:"bytes,4,opt,name=sub_path,json=subPath,proto3" json:"sub_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Instance_Container_VolumeMount) Reset()         { *m = Instance_Container_VolumeMount{} }
func (m *Instance_Container_VolumeMount) String() string { return proto.CompactTextString(m) }
func (*Instance_Container_VolumeMount) ProtoMessage()    {}
func (*Instance_Container_VolumeMount) Descriptor() ([]byte, []int) {
	return fileDescriptor_appmanager_545acda625c91d98, []int{14, 0, 1}
}
func (m *Instance_Container_VolumeMount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Instance_Container_VolumeMount.Unmarshal(m, b)
}
func (m *Instance_Container_VolumeMount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Instance_Container_VolumeMount.Marshal(b, m, deterministic)
}
func (dst *Instance_Container_VolumeMount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Instance_Container_VolumeMount.Merge(dst, src)
}
func (m *Instance_Container_VolumeMount) XXX_Size() int {
	return xxx_messageInfo_Instance_Container_VolumeMount.Size(m)
}
func (m *Instance_Container_VolumeMount) XXX_DiscardUnknown() {
	xxx_messageInfo_Instance_Container_VolumeMount.DiscardUnknown(m)
}

var xxx_messageInfo_Instance_Container_VolumeMount proto.InternalMessageInfo

func (m *Instance_Container_VolumeMount) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Instance_Container_VolumeMount) GetMountPath() string {
	if m != nil {
		return m.MountPath
	}
	return ""
}

func (m *Instance_Container_VolumeMount) GetReadOnly() bool {
	if m != nil {
		return m.ReadOnly
	}
	return false
}

func (m *Instance_Container_VolumeMount) GetSubPath() string {
	if m != nil {
		return m.SubPath
	}
	return ""
}

type Instance_PublicEndpoint struct {
	Addresses            []string `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
	AllNodes             bool     `protobuf:"varint,2,opt,name=all_nodes,json=allNodes,proto3" json:"all_nodes,omitempty"`
	Hostname             string   `protobuf:"bytes,3,opt,name=hostname,proto3" json:"hostname,omitempty"`
	IngressId            string   `protobuf:"bytes,4,opt,name=ingress_id,json=ingressId,proto3" json:"ingress_id,omitempty"`
	NodeId               string   `protobuf:"bytes,5,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Path                 string   `protobuf:"bytes,6,opt,name=path,proto3" json:"path,omitempty"`
	PodId                string   `protobuf:"bytes,7,opt,name=pod_id,json=podId,proto3" json:"pod_id,omitempty"`
	Port                 int64    `protobuf:"varint,8,opt,name=port,proto3" json:"port,omitempty"`
	Proto                string   `protobuf:"bytes,9,opt,name=proto,proto3" json:"proto,omitempty"`
	ServiceId            string   `protobuf:"bytes,10,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Instance_PublicEndpoint) Reset()         { *m = Instance_PublicEndpoint{} }
func (m *Instance_PublicEndpoint) String() string { return proto.CompactTextString(m) }
func (*Instance_PublicEndpoint) ProtoMessage()    {}
func (*Instance_PublicEndpoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_appmanager_545acda625c91d98, []int{14, 1}
}
func (m *Instance_PublicEndpoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Instance_PublicEndpoint.Unmarshal(m, b)
}
func (m *Instance_PublicEndpoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Instance_PublicEndpoint.Marshal(b, m, deterministic)
}
func (dst *Instance_PublicEndpoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Instance_PublicEndpoint.Merge(dst, src)
}
func (m *Instance_PublicEndpoint) XXX_Size() int {
	return xxx_messageInfo_Instance_PublicEndpoint.Size(m)
}
func (m *Instance_PublicEndpoint) XXX_DiscardUnknown() {
	xxx_messageInfo_Instance_PublicEndpoint.DiscardUnknown(m)
}

var xxx_messageInfo_Instance_PublicEndpoint proto.InternalMessageInfo

func (m *Instance_PublicEndpoint) GetAddresses() []string {
	if m != nil {
		return m.Addresses
	}
	return nil
}

func (m *Instance_PublicEndpoint) GetAllNodes() bool {
	if m != nil {
		return m.AllNodes
	}
	return false
}

func (m *Instance_PublicEndpoint) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *Instance_PublicEndpoint) GetIngressId() string {
	if m != nil {
		return m.IngressId
	}
	return ""
}

func (m *Instance_PublicEndpoint) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *Instance_PublicEndpoint) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *Instance_PublicEndpoint) GetPodId() string {
	if m != nil {
		return m.PodId
	}
	return ""
}

func (m *Instance_PublicEndpoint) GetPort() int64 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *Instance_PublicEndpoint) GetProto() string {
	if m != nil {
		return m.Proto
	}
	return ""
}

func (m *Instance_PublicEndpoint) GetServiceId() string {
	if m != nil {
		return m.ServiceId
	}
	return ""
}

// Template message holds information about metadata for a particular application instance
type Template struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Versions             []string `protobuf:"bytes,2,rep,name=versions,proto3" json:"versions,omitempty"`
	CatalogId            string   `protobuf:"bytes,3,opt,name=catalog_id,json=catalogId,proto3" json:"catalog_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Template) Reset()         { *m = Template{} }
func (m *Template) String() string { return proto.CompactTextString(m) }
func (*Template) ProtoMessage()    {}
func (*Template) Descriptor() ([]byte, []int) {
	return fileDescriptor_appmanager_545acda625c91d98, []int{15}
}
func (m *Template) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Template.Unmarshal(m, b)
}
func (m *Template) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Template.Marshal(b, m, deterministic)
}
func (dst *Template) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Template.Merge(dst, src)
}
func (m *Template) XXX_Size() int {
	return xxx_messageInfo_Template.Size(m)
}
func (m *Template) XXX_DiscardUnknown() {
	xxx_messageInfo_Template.DiscardUnknown(m)
}

var xxx_messageInfo_Template proto.InternalMessageInfo

func (m *Template) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Template) GetVersions() []string {
	if m != nil {
		return m.Versions
	}
	return nil
}

func (m *Template) GetCatalogId() string {
	if m != nil {
		return m.CatalogId
	}
	return ""
}

// AppInstance holds information about appropriate application instance
type AppInstance struct {
	Name                 string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id                   string    `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Version              string    `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	RootGroupId          string    `protobuf:"bytes,4,opt,name=root_group_id,json=rootGroupId,proto3" json:"root_group_id,omitempty"`
	GroupId              string    `protobuf:"bytes,5,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Template             *Template `protobuf:"bytes,6,opt,name=template,proto3" json:"template,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *AppInstance) Reset()         { *m = AppInstance{} }
func (m *AppInstance) String() string { return proto.CompactTextString(m) }
func (*AppInstance) ProtoMessage()    {}
func (*AppInstance) Descriptor() ([]byte, []int) {
	return fileDescriptor_appmanager_545acda625c91d98, []int{16}
}
func (m *AppInstance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppInstance.Unmarshal(m, b)
}
func (m *AppInstance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppInstance.Marshal(b, m, deterministic)
}
func (dst *AppInstance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppInstance.Merge(dst, src)
}
func (m *AppInstance) XXX_Size() int {
	return xxx_messageInfo_AppInstance.Size(m)
}
func (m *AppInstance) XXX_DiscardUnknown() {
	xxx_messageInfo_AppInstance.DiscardUnknown(m)
}

var xxx_messageInfo_AppInstance proto.InternalMessageInfo

func (m *AppInstance) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AppInstance) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AppInstance) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *AppInstance) GetRootGroupId() string {
	if m != nil {
		return m.RootGroupId
	}
	return ""
}

func (m *AppInstance) GetGroupId() string {
	if m != nil {
		return m.GroupId
	}
	return ""
}

func (m *AppInstance) GetTemplate() *Template {
	if m != nil {
		return m.Template
	}
	return nil
}

// App holds information about appropriate application
type App struct {
	Name                 string         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Cycle                string         `protobuf:"bytes,2,opt,name=cycle,proto3" json:"cycle,omitempty"`
	Instances            []*AppInstance `protobuf:"bytes,3,rep,name=instances,proto3" json:"instances,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *App) Reset()         { *m = App{} }
func (m *App) String() string { return proto.CompactTextString(m) }
func (*App) ProtoMessage()    {}
func (*App) Descriptor() ([]byte, []int) {
	return fileDescriptor_appmanager_545acda625c91d98, []int{17}
}
func (m *App) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_App.Unmarshal(m, b)
}
func (m *App) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_App.Marshal(b, m, deterministic)
}
func (dst *App) XXX_Merge(src proto.Message) {
	xxx_messageInfo_App.Merge(dst, src)
}
func (m *App) XXX_Size() int {
	return xxx_messageInfo_App.Size(m)
}
func (m *App) XXX_DiscardUnknown() {
	xxx_messageInfo_App.DiscardUnknown(m)
}

var xxx_messageInfo_App proto.InternalMessageInfo

func (m *App) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *App) GetCycle() string {
	if m != nil {
		return m.Cycle
	}
	return ""
}

func (m *App) GetInstances() []*AppInstance {
	if m != nil {
		return m.Instances
	}
	return nil
}

// Apps holds information about applications
type Apps struct {
	Apps                 []*App   `protobuf:"bytes,1,rep,name=apps,proto3" json:"apps,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Apps) Reset()         { *m = Apps{} }
func (m *Apps) String() string { return proto.CompactTextString(m) }
func (*Apps) ProtoMessage()    {}
func (*Apps) Descriptor() ([]byte, []int) {
	return fileDescriptor_appmanager_545acda625c91d98, []int{18}
}
func (m *Apps) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Apps.Unmarshal(m, b)
}
func (m *Apps) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Apps.Marshal(b, m, deterministic)
}
func (dst *Apps) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Apps.Merge(dst, src)
}
func (m *Apps) XXX_Size() int {
	return xxx_messageInfo_Apps.Size(m)
}
func (m *Apps) XXX_DiscardUnknown() {
	xxx_messageInfo_Apps.DiscardUnknown(m)
}

var xxx_messageInfo_Apps proto.InternalMessageInfo

func (m *Apps) GetApps() []*App {
	if m != nil {
		return m.Apps
	}
	return nil
}

// AppInfo holds information about particular application running in the cluster
type AppInfo struct {
	MonitorUrl           string                 `protobuf:"bytes,1,opt,name=monitor_url,json=monitorUrl,proto3" json:"monitor_url,omitempty"`
	LogsUrl              string                 `protobuf:"bytes,2,opt,name=logs_url,json=logsUrl,proto3" json:"logs_url,omitempty"`
	TotalResources       *Resources             `protobuf:"bytes,3,opt,name=total_resources,json=totalResources,proto3" json:"total_resources,omitempty"`
	SharedStorage        uint32                 `protobuf:"varint,4,opt,name=shared_storage,json=sharedStorage,proto3" json:"shared_storage,omitempty"`
	CyclePeriodicFields  *CyclePeriodicRespAttr `protobuf:"bytes,5,opt,name=cycle_periodic_fields,json=cyclePeriodicFields,proto3" json:"cycle_periodic_fields,omitempty"`
	Instances            []*Instance            `protobuf:"bytes,6,rep,name=instances,proto3" json:"instances,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *AppInfo) Reset()         { *m = AppInfo{} }
func (m *AppInfo) String() string { return proto.CompactTextString(m) }
func (*AppInfo) ProtoMessage()    {}
func (*AppInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_appmanager_545acda625c91d98, []int{19}
}
func (m *AppInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppInfo.Unmarshal(m, b)
}
func (m *AppInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppInfo.Marshal(b, m, deterministic)
}
func (dst *AppInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppInfo.Merge(dst, src)
}
func (m *AppInfo) XXX_Size() int {
	return xxx_messageInfo_AppInfo.Size(m)
}
func (m *AppInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_AppInfo.DiscardUnknown(m)
}

var xxx_messageInfo_AppInfo proto.InternalMessageInfo

func (m *AppInfo) GetMonitorUrl() string {
	if m != nil {
		return m.MonitorUrl
	}
	return ""
}

func (m *AppInfo) GetLogsUrl() string {
	if m != nil {
		return m.LogsUrl
	}
	return ""
}

func (m *AppInfo) GetTotalResources() *Resources {
	if m != nil {
		return m.TotalResources
	}
	return nil
}

func (m *AppInfo) GetSharedStorage() uint32 {
	if m != nil {
		return m.SharedStorage
	}
	return 0
}

func (m *AppInfo) GetCyclePeriodicFields() *CyclePeriodicRespAttr {
	if m != nil {
		return m.CyclePeriodicFields
	}
	return nil
}

func (m *AppInfo) GetInstances() []*Instance {
	if m != nil {
		return m.Instances
	}
	return nil
}

// AppsInfo holds information about applications running in the cluster
type AppsInfo struct {
	Apps                 map[string]*AppInfo `protobuf:"bytes,1,rep,name=apps,proto3" json:"apps,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *AppsInfo) Reset()         { *m = AppsInfo{} }
func (m *AppsInfo) String() string { return proto.CompactTextString(m) }
func (*AppsInfo) ProtoMessage()    {}
func (*AppsInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_appmanager_545acda625c91d98, []int{20}
}
func (m *AppsInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppsInfo.Unmarshal(m, b)
}
func (m *AppsInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppsInfo.Marshal(b, m, deterministic)
}
func (dst *AppsInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppsInfo.Merge(dst, src)
}
func (m *AppsInfo) XXX_Size() int {
	return xxx_messageInfo_AppsInfo.Size(m)
}
func (m *AppsInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_AppsInfo.DiscardUnknown(m)
}

var xxx_messageInfo_AppsInfo proto.InternalMessageInfo

func (m *AppsInfo) GetApps() map[string]*AppInfo {
	if m != nil {
		return m.Apps
	}
	return nil
}

// AppTemplates holds information about metadata related to the instances of a particular application
type AppTemplates struct {
	AppName              string      `protobuf:"bytes,1,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
	Templates            []*Template `protobuf:"bytes,2,rep,name=templates,proto3" json:"templates,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *AppTemplates) Reset()         { *m = AppTemplates{} }
func (m *AppTemplates) String() string { return proto.CompactTextString(m) }
func (*AppTemplates) ProtoMessage()    {}
func (*AppTemplates) Descriptor() ([]byte, []int) {
	return fileDescriptor_appmanager_545acda625c91d98, []int{21}
}
func (m *AppTemplates) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppTemplates.Unmarshal(m, b)
}
func (m *AppTemplates) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppTemplates.Marshal(b, m, deterministic)
}
func (dst *AppTemplates) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppTemplates.Merge(dst, src)
}
func (m *AppTemplates) XXX_Size() int {
	return xxx_messageInfo_AppTemplates.Size(m)
}
func (m *AppTemplates) XXX_DiscardUnknown() {
	xxx_messageInfo_AppTemplates.DiscardUnknown(m)
}

var xxx_messageInfo_AppTemplates proto.InternalMessageInfo

func (m *AppTemplates) GetAppName() string {
	if m != nil {
		return m.AppName
	}
	return ""
}

func (m *AppTemplates) GetTemplates() []*Template {
	if m != nil {
		return m.Templates
	}
	return nil
}

// AppInstanceActivation holds information about appropriate enabled or disabled application instance
type AffectedAppInstance struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Version              string   `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	RootGroupId          string   `protobuf:"bytes,4,opt,name=root_group_id,json=rootGroupId,proto3" json:"root_group_id,omitempty"`
	GroupId              string   `protobuf:"bytes,5,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AffectedAppInstance) Reset()         { *m = AffectedAppInstance{} }
func (m *AffectedAppInstance) String() string { return proto.CompactTextString(m) }
func (*AffectedAppInstance) ProtoMessage()    {}
func (*AffectedAppInstance) Descriptor() ([]byte, []int) {
	return fileDescriptor_appmanager_545acda625c91d98, []int{22}
}
func (m *AffectedAppInstance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AffectedAppInstance.Unmarshal(m, b)
}
func (m *AffectedAppInstance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AffectedAppInstance.Marshal(b, m, deterministic)
}
func (dst *AffectedAppInstance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AffectedAppInstance.Merge(dst, src)
}
func (m *AffectedAppInstance) XXX_Size() int {
	return xxx_messageInfo_AffectedAppInstance.Size(m)
}
func (m *AffectedAppInstance) XXX_DiscardUnknown() {
	xxx_messageInfo_AffectedAppInstance.DiscardUnknown(m)
}

var xxx_messageInfo_AffectedAppInstance proto.InternalMessageInfo

func (m *AffectedAppInstance) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AffectedAppInstance) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AffectedAppInstance) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *AffectedAppInstance) GetRootGroupId() string {
	if m != nil {
		return m.RootGroupId
	}
	return ""
}

func (m *AffectedAppInstance) GetGroupId() string {
	if m != nil {
		return m.GroupId
	}
	return ""
}

// AffectedAppInstances holds information about application instances
type AffectedAppInstances struct {
	Instances            []*AffectedAppInstance `protobuf:"bytes,1,rep,name=instances,proto3" json:"instances,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *AffectedAppInstances) Reset()         { *m = AffectedAppInstances{} }
func (m *AffectedAppInstances) String() string { return proto.CompactTextString(m) }
func (*AffectedAppInstances) ProtoMessage()    {}
func (*AffectedAppInstances) Descriptor() ([]byte, []int) {
	return fileDescriptor_appmanager_545acda625c91d98, []int{23}
}
func (m *AffectedAppInstances) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AffectedAppInstances.Unmarshal(m, b)
}
func (m *AffectedAppInstances) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AffectedAppInstances.Marshal(b, m, deterministic)
}
func (dst *AffectedAppInstances) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AffectedAppInstances.Merge(dst, src)
}
func (m *AffectedAppInstances) XXX_Size() int {
	return xxx_messageInfo_AffectedAppInstances.Size(m)
}
func (m *AffectedAppInstances) XXX_DiscardUnknown() {
	xxx_messageInfo_AffectedAppInstances.DiscardUnknown(m)
}

var xxx_messageInfo_AffectedAppInstances proto.InternalMessageInfo

func (m *AffectedAppInstances) GetInstances() []*AffectedAppInstance {
	if m != nil {
		return m.Instances
	}
	return nil
}

// AppsActivation holds information about applications affected by EnableDisableApps request
type AppsActivation struct {
	Apps                 map[string]*AffectedAppInstances `protobuf:"bytes,1,rep,name=apps,proto3" json:"apps,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *AppsActivation) Reset()         { *m = AppsActivation{} }
func (m *AppsActivation) String() string { return proto.CompactTextString(m) }
func (*AppsActivation) ProtoMessage()    {}
func (*AppsActivation) Descriptor() ([]byte, []int) {
	return fileDescriptor_appmanager_545acda625c91d98, []int{24}
}
func (m *AppsActivation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppsActivation.Unmarshal(m, b)
}
func (m *AppsActivation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppsActivation.Marshal(b, m, deterministic)
}
func (dst *AppsActivation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppsActivation.Merge(dst, src)
}
func (m *AppsActivation) XXX_Size() int {
	return xxx_messageInfo_AppsActivation.Size(m)
}
func (m *AppsActivation) XXX_DiscardUnknown() {
	xxx_messageInfo_AppsActivation.DiscardUnknown(m)
}

var xxx_messageInfo_AppsActivation proto.InternalMessageInfo

func (m *AppsActivation) GetApps() map[string]*AffectedAppInstances {
	if m != nil {
		return m.Apps
	}
	return nil
}

// Response holds information related to a response message that is sent on appropriate request
type Response struct {
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Status               Status               `protobuf:"varint,2,opt,name=status,proto3,enum=com.cisco.son.apphcd.api.v1.appmanager.Status" json:"status,omitempty"`
	Message              string               `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Body                 *any.Any             `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_appmanager_545acda625c91d98, []int{25}
}
func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (dst *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(dst, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *Response) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_SUCCESS
}

func (m *Response) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Response) GetBody() *any.Any {
	if m != nil {
		return m.Body
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateAppRequest)(nil), "com.cisco.son.apphcd.api.v1.appmanager.CreateAppRequest")
	proto.RegisterMapType((map[string]string)(nil), "com.cisco.son.apphcd.api.v1.appmanager.CreateAppRequest.AnnotationsEntry")
	proto.RegisterMapType((map[string]string)(nil), "com.cisco.son.apphcd.api.v1.appmanager.CreateAppRequest.AppConfigsEntry")
	proto.RegisterMapType((map[string]string)(nil), "com.cisco.son.apphcd.api.v1.appmanager.CreateAppRequest.EnvVarsEntry")
	proto.RegisterMapType((map[string]string)(nil), "com.cisco.son.apphcd.api.v1.appmanager.CreateAppRequest.LabelsEntry")
	proto.RegisterMapType((map[string]string)(nil), "com.cisco.son.apphcd.api.v1.appmanager.CreateAppRequest.SecretsEntry")
	proto.RegisterType((*UpgradeAppRequest)(nil), "com.cisco.son.apphcd.api.v1.appmanager.UpgradeAppRequest")
	proto.RegisterMapType((map[string]string)(nil), "com.cisco.son.apphcd.api.v1.appmanager.UpgradeAppRequest.AnnotationsEntry")
	proto.RegisterMapType((map[string]string)(nil), "com.cisco.son.apphcd.api.v1.appmanager.UpgradeAppRequest.AppConfigsEntry")
	proto.RegisterMapType((map[string]string)(nil), "com.cisco.son.apphcd.api.v1.appmanager.UpgradeAppRequest.EnvVarsEntry")
	proto.RegisterMapType((map[string]string)(nil), "com.cisco.son.apphcd.api.v1.appmanager.UpgradeAppRequest.LabelsEntry")
	proto.RegisterMapType((map[string]string)(nil), "com.cisco.son.apphcd.api.v1.appmanager.UpgradeAppRequest.SecretsEntry")
	proto.RegisterType((*UpdateAppRequest)(nil), "com.cisco.son.apphcd.api.v1.appmanager.UpdateAppRequest")
	proto.RegisterMapType((map[string]string)(nil), "com.cisco.son.apphcd.api.v1.appmanager.UpdateAppRequest.AnnotationsEntry")
	proto.RegisterMapType((map[string]string)(nil), "com.cisco.son.apphcd.api.v1.appmanager.UpdateAppRequest.AppConfigsEntry")
	proto.RegisterMapType((map[string]string)(nil), "com.cisco.son.apphcd.api.v1.appmanager.UpdateAppRequest.EnvVarsEntry")
	proto.RegisterMapType((map[string]string)(nil), "com.cisco.son.apphcd.api.v1.appmanager.UpdateAppRequest.LabelsEntry")
	proto.RegisterMapType((map[string]string)(nil), "com.cisco.son.apphcd.api.v1.appmanager.UpdateAppRequest.SecretsEntry")
	proto.RegisterType((*GetAppsRequest)(nil), "com.cisco.son.apphcd.api.v1.appmanager.GetAppsRequest")
	proto.RegisterType((*DeleteAppRequest)(nil), "com.cisco.son.apphcd.api.v1.appmanager.DeleteAppRequest")
	proto.RegisterType((*DeleteAppMetadataRequest)(nil), "com.cisco.son.apphcd.api.v1.appmanager.DeleteAppMetadataRequest")
	proto.RegisterType((*DeleteAppsRequest)(nil), "com.cisco.son.apphcd.api.v1.appmanager.DeleteAppsRequest")
	proto.RegisterType((*EnableDisableAppRequest)(nil), "com.cisco.son.apphcd.api.v1.appmanager.EnableDisableAppRequest")
	proto.RegisterType((*CyclePeriodicReqAttr)(nil), "com.cisco.son.apphcd.api.v1.appmanager.CyclePeriodicReqAttr")
	proto.RegisterType((*CyclePeriodicReqAttr_Sched)(nil), "com.cisco.son.apphcd.api.v1.appmanager.CyclePeriodicReqAttr.Sched")
	proto.RegisterType((*Spec)(nil), "com.cisco.son.apphcd.api.v1.appmanager.Spec")
	proto.RegisterType((*Spec_Image)(nil), "com.cisco.son.apphcd.api.v1.appmanager.Spec.Image")
	proto.RegisterType((*Spec_Port)(nil), "com.cisco.son.apphcd.api.v1.appmanager.Spec.Port")
	proto.RegisterType((*Spec_Resources)(nil), "com.cisco.son.apphcd.api.v1.appmanager.Spec.Resources")
	proto.RegisterType((*Spec_Resources_Limits)(nil), "com.cisco.son.apphcd.api.v1.appmanager.Spec.Resources.Limits")
	proto.RegisterType((*CyclePeriodicRespAttr)(nil), "com.cisco.son.apphcd.api.v1.appmanager.CyclePeriodicRespAttr")
	proto.RegisterType((*PeriodicFields)(nil), "com.cisco.son.apphcd.api.v1.appmanager.PeriodicFields")
	proto.RegisterType((*RunOnceFields)(nil), "com.cisco.son.apphcd.api.v1.appmanager.RunOnceFields")
	proto.RegisterType((*Resources)(nil), "com.cisco.son.apphcd.api.v1.appmanager.Resources")
	proto.RegisterType((*Resources_Requests)(nil), "com.cisco.son.apphcd.api.v1.appmanager.Resources.Requests")
	proto.RegisterType((*Resources_Limits)(nil), "com.cisco.son.apphcd.api.v1.appmanager.Resources.Limits")
	proto.RegisterType((*Instance)(nil), "com.cisco.son.apphcd.api.v1.appmanager.Instance")
	proto.RegisterType((*Instance_Container)(nil), "com.cisco.son.apphcd.api.v1.appmanager.Instance.Container")
	proto.RegisterType((*Instance_Container_Port)(nil), "com.cisco.son.apphcd.api.v1.appmanager.Instance.Container.Port")
	proto.RegisterType((*Instance_Container_VolumeMount)(nil), "com.cisco.son.apphcd.api.v1.appmanager.Instance.Container.VolumeMount")
	proto.RegisterType((*Instance_PublicEndpoint)(nil), "com.cisco.son.apphcd.api.v1.appmanager.Instance.PublicEndpoint")
	proto.RegisterType((*Template)(nil), "com.cisco.son.apphcd.api.v1.appmanager.Template")
	proto.RegisterType((*AppInstance)(nil), "com.cisco.son.apphcd.api.v1.appmanager.AppInstance")
	proto.RegisterType((*App)(nil), "com.cisco.son.apphcd.api.v1.appmanager.App")
	proto.RegisterType((*Apps)(nil), "com.cisco.son.apphcd.api.v1.appmanager.Apps")
	proto.RegisterType((*AppInfo)(nil), "com.cisco.son.apphcd.api.v1.appmanager.AppInfo")
	proto.RegisterType((*AppsInfo)(nil), "com.cisco.son.apphcd.api.v1.appmanager.AppsInfo")
	proto.RegisterMapType((map[string]*AppInfo)(nil), "com.cisco.son.apphcd.api.v1.appmanager.AppsInfo.AppsEntry")
	proto.RegisterType((*AppTemplates)(nil), "com.cisco.son.apphcd.api.v1.appmanager.AppTemplates")
	proto.RegisterType((*AffectedAppInstance)(nil), "com.cisco.son.apphcd.api.v1.appmanager.AffectedAppInstance")
	proto.RegisterType((*AffectedAppInstances)(nil), "com.cisco.son.apphcd.api.v1.appmanager.AffectedAppInstances")
	proto.RegisterType((*AppsActivation)(nil), "com.cisco.son.apphcd.api.v1.appmanager.AppsActivation")
	proto.RegisterMapType((map[string]*AffectedAppInstances)(nil), "com.cisco.son.apphcd.api.v1.appmanager.AppsActivation.AppsEntry")
	proto.RegisterType((*Response)(nil), "com.cisco.son.apphcd.api.v1.appmanager.Response")
	proto.RegisterEnum("com.cisco.son.apphcd.api.v1.appmanager.AppStateAfterDeployment", AppStateAfterDeployment_name, AppStateAfterDeployment_value)
	proto.RegisterEnum("com.cisco.son.apphcd.api.v1.appmanager.Status", Status_name, Status_value)
	proto.RegisterEnum("com.cisco.son.apphcd.api.v1.appmanager.Spec_Port_Proto", Spec_Port_Proto_name, Spec_Port_Proto_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AppManagerClient is the client API for AppManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AppManagerClient interface {
	// CreateApp method creates a new application.
	// It will create a new catalog entry and install the new application from the catalog.
	// If appropriate application instance with the same name and version already running,
	// the instance won't be overwritten and no error will be returned.The request will continue
	// to the next instance.If all requested instances already running, the status "UNCHANGED" will be
	// returned to the caller. A list of created instances will be returned as part of the response body
	CreateApp(ctx context.Context, in *CreateAppRequest, opts ...grpc.CallOption) (*Response, error)
	// UpgradeApp creates new, upgrades or downgrades existing application.
	// Application will be recreated if the version in request is equal to the version of running application.
	// In this case the catalog artifact will be replaced with the new one the running application will be replaced
	// with recent application from the catalog.
	// Application will be upgraded if the version in request is higher than version of running application.In this case
	// a new catalog artifact will be created and the running application will be upgraded from the catalog.
	// Application will be downgraded if the version in request is lower than version of running application. In this case
	// a new catalog artifact will be created and the running application will be downgraded from the catalog
	UpgradeApp(ctx context.Context, in *UpgradeAppRequest, opts ...grpc.CallOption) (*Response, error)
	// UpdateApp updates existing application instances. The new application instance will be based on configuration
	// of existing instance hence a minimal request can be sent to controller. If there is no application instance
	// running, the method will return "UNCHANGED" status and message "Nothing to update/upgrade".
	// This method always recreates existing application instance
	UpdateApp(ctx context.Context, in *UpdateAppRequest, opts ...grpc.CallOption) (*Response, error)
	// EnableDisableApp disables or enables an application
	EnableDisableApp(ctx context.Context, in *EnableDisableAppRequest, opts ...grpc.CallOption) (*Response, error)
	// DeleteApp deletes instances of a particular running application.
	// It's possible to customize the request by providing appropriate body
	DeleteApp(ctx context.Context, in *DeleteAppRequest, opts ...grpc.CallOption) (*Response, error)
	// DeleteApps deletes running applications and related workloads.
	// If "purge" flag is set True, the applications will be also removed from the catalog
	DeleteApps(ctx context.Context, in *DeleteAppsRequest, opts ...grpc.CallOption) (*Response, error)
	// GetApps shows appropriate information about running application
	GetApps(ctx context.Context, in *GetAppsRequest, opts ...grpc.CallOption) (*Response, error)
	// DeleteAppMetadata deletes metadata for a particular application instance
	DeleteAppMetadata(ctx context.Context, in *DeleteAppMetadataRequest, opts ...grpc.CallOption) (*Response, error)
}

type appManagerClient struct {
	cc *grpc.ClientConn
}

func NewAppManagerClient(cc *grpc.ClientConn) AppManagerClient {
	return &appManagerClient{cc}
}

func (c *appManagerClient) CreateApp(ctx context.Context, in *CreateAppRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/com.cisco.son.apphcd.api.v1.appmanager.AppManager/CreateApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appManagerClient) UpgradeApp(ctx context.Context, in *UpgradeAppRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/com.cisco.son.apphcd.api.v1.appmanager.AppManager/UpgradeApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appManagerClient) UpdateApp(ctx context.Context, in *UpdateAppRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/com.cisco.son.apphcd.api.v1.appmanager.AppManager/UpdateApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appManagerClient) EnableDisableApp(ctx context.Context, in *EnableDisableAppRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/com.cisco.son.apphcd.api.v1.appmanager.AppManager/EnableDisableApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appManagerClient) DeleteApp(ctx context.Context, in *DeleteAppRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/com.cisco.son.apphcd.api.v1.appmanager.AppManager/DeleteApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appManagerClient) DeleteApps(ctx context.Context, in *DeleteAppsRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/com.cisco.son.apphcd.api.v1.appmanager.AppManager/DeleteApps", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appManagerClient) GetApps(ctx context.Context, in *GetAppsRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/com.cisco.son.apphcd.api.v1.appmanager.AppManager/GetApps", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appManagerClient) DeleteAppMetadata(ctx context.Context, in *DeleteAppMetadataRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/com.cisco.son.apphcd.api.v1.appmanager.AppManager/DeleteAppMetadata", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AppManagerServer is the server API for AppManager service.
type AppManagerServer interface {
	// CreateApp method creates a new application.
	// It will create a new catalog entry and install the new application from the catalog.
	// If appropriate application instance with the same name and version already running,
	// the instance won't be overwritten and no error will be returned.The request will continue
	// to the next instance.If all requested instances already running, the status "UNCHANGED" will be
	// returned to the caller. A list of created instances will be returned as part of the response body
	CreateApp(context.Context, *CreateAppRequest) (*Response, error)
	// UpgradeApp creates new, upgrades or downgrades existing application.
	// Application will be recreated if the version in request is equal to the version of running application.
	// In this case the catalog artifact will be replaced with the new one the running application will be replaced
	// with recent application from the catalog.
	// Application will be upgraded if the version in request is higher than version of running application.In this case
	// a new catalog artifact will be created and the running application will be upgraded from the catalog.
	// Application will be downgraded if the version in request is lower than version of running application. In this case
	// a new catalog artifact will be created and the running application will be downgraded from the catalog
	UpgradeApp(context.Context, *UpgradeAppRequest) (*Response, error)
	// UpdateApp updates existing application instances. The new application instance will be based on configuration
	// of existing instance hence a minimal request can be sent to controller. If there is no application instance
	// running, the method will return "UNCHANGED" status and message "Nothing to update/upgrade".
	// This method always recreates existing application instance
	UpdateApp(context.Context, *UpdateAppRequest) (*Response, error)
	// EnableDisableApp disables or enables an application
	EnableDisableApp(context.Context, *EnableDisableAppRequest) (*Response, error)
	// DeleteApp deletes instances of a particular running application.
	// It's possible to customize the request by providing appropriate body
	DeleteApp(context.Context, *DeleteAppRequest) (*Response, error)
	// DeleteApps deletes running applications and related workloads.
	// If "purge" flag is set True, the applications will be also removed from the catalog
	DeleteApps(context.Context, *DeleteAppsRequest) (*Response, error)
	// GetApps shows appropriate information about running application
	GetApps(context.Context, *GetAppsRequest) (*Response, error)
	// DeleteAppMetadata deletes metadata for a particular application instance
	DeleteAppMetadata(context.Context, *DeleteAppMetadataRequest) (*Response, error)
}

func RegisterAppManagerServer(s *grpc.Server, srv AppManagerServer) {
	s.RegisterService(&_AppManager_serviceDesc, srv)
}

func _AppManager_CreateApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppManagerServer).CreateApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.cisco.son.apphcd.api.v1.appmanager.AppManager/CreateApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppManagerServer).CreateApp(ctx, req.(*CreateAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppManager_UpgradeApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpgradeAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppManagerServer).UpgradeApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.cisco.son.apphcd.api.v1.appmanager.AppManager/UpgradeApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppManagerServer).UpgradeApp(ctx, req.(*UpgradeAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppManager_UpdateApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppManagerServer).UpdateApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.cisco.son.apphcd.api.v1.appmanager.AppManager/UpdateApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppManagerServer).UpdateApp(ctx, req.(*UpdateAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppManager_EnableDisableApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EnableDisableAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppManagerServer).EnableDisableApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.cisco.son.apphcd.api.v1.appmanager.AppManager/EnableDisableApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppManagerServer).EnableDisableApp(ctx, req.(*EnableDisableAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppManager_DeleteApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppManagerServer).DeleteApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.cisco.son.apphcd.api.v1.appmanager.AppManager/DeleteApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppManagerServer).DeleteApp(ctx, req.(*DeleteAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppManager_DeleteApps_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAppsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppManagerServer).DeleteApps(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.cisco.son.apphcd.api.v1.appmanager.AppManager/DeleteApps",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppManagerServer).DeleteApps(ctx, req.(*DeleteAppsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppManager_GetApps_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAppsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppManagerServer).GetApps(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.cisco.son.apphcd.api.v1.appmanager.AppManager/GetApps",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppManagerServer).GetApps(ctx, req.(*GetAppsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppManager_DeleteAppMetadata_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAppMetadataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppManagerServer).DeleteAppMetadata(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.cisco.son.apphcd.api.v1.appmanager.AppManager/DeleteAppMetadata",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppManagerServer).DeleteAppMetadata(ctx, req.(*DeleteAppMetadataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AppManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "com.cisco.son.apphcd.api.v1.appmanager.AppManager",
	HandlerType: (*AppManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateApp",
			Handler:    _AppManager_CreateApp_Handler,
		},
		{
			MethodName: "UpgradeApp",
			Handler:    _AppManager_UpgradeApp_Handler,
		},
		{
			MethodName: "UpdateApp",
			Handler:    _AppManager_UpdateApp_Handler,
		},
		{
			MethodName: "EnableDisableApp",
			Handler:    _AppManager_EnableDisableApp_Handler,
		},
		{
			MethodName: "DeleteApp",
			Handler:    _AppManager_DeleteApp_Handler,
		},
		{
			MethodName: "DeleteApps",
			Handler:    _AppManager_DeleteApps_Handler,
		},
		{
			MethodName: "GetApps",
			Handler:    _AppManager_GetApps_Handler,
		},
		{
			MethodName: "DeleteAppMetadata",
			Handler:    _AppManager_DeleteAppMetadata_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "appmanager.proto",
}

func init() { proto.RegisterFile("appmanager.proto", fileDescriptor_appmanager_545acda625c91d98) }

var fileDescriptor_appmanager_545acda625c91d98 = []byte{
	// 3168 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x5a, 0x4d, 0x70, 0x1b, 0xc7,
	0x95, 0xe6, 0xe0, 0x7f, 0x1e, 0x48, 0x10, 0x6a, 0x51, 0x16, 0x04, 0x4b, 0x36, 0x0d, 0xcb, 0x6b,
	0x8a, 0x32, 0x41, 0x09, 0xf6, 0x7a, 0x2d, 0xf9, 0x17, 0x22, 0x29, 0x89, 0x2e, 0x8b, 0xe2, 0x0e,
	0x49, 0x6f, 0xd9, 0x96, 0x34, 0x6e, 0xce, 0x34, 0xc1, 0x91, 0x06, 0x33, 0xad, 0xe9, 0x01, 0x2d,
	0xac, 0xd7, 0x17, 0xdf, 0x76, 0x37, 0x55, 0x49, 0xd9, 0x87, 0x24, 0x95, 0x9b, 0x73, 0x48, 0xf9,
	0x90, 0x4b, 0x2a, 0xa7, 0x5c, 0x92, 0x43, 0x52, 0xb9, 0xe5, 0x92, 0x4a, 0x2a, 0x55, 0x49, 0x6e,
	0xa9, 0x54, 0xe5, 0x96, 0x63, 0x6e, 0x4e, 0xf5, 0xcf, 0x00, 0x83, 0x1f, 0xda, 0x00, 0x68, 0x57,
	0xd9, 0x29, 0x9d, 0x80, 0xf7, 0xba, 0xfb, 0xbd, 0xd7, 0xef, 0xbd, 0xfe, 0xfa, 0x75, 0xf7, 0x40,
	0x11, 0x53, 0xda, 0xc4, 0x1e, 0x6e, 0x90, 0xa0, 0x4a, 0x03, 0x3f, 0xf4, 0xd1, 0xbf, 0x59, 0x7e,
	0xb3, 0x6a, 0x39, 0xcc, 0xf2, 0xab, 0xcc, 0xf7, 0xaa, 0x98, 0xd2, 0x7d, 0xcb, 0xae, 0x62, 0xea,
	0x54, 0x0f, 0x2e, 0x56, 0xbb, 0xbd, 0xcb, 0xa7, 0x1b, 0xbe, 0xdf, 0x70, 0xc9, 0x32, 0xa6, 0xce,
	0x32, 0xf6, 0x3c, 0x3f, 0xc4, 0xa1, 0xe3, 0x7b, 0x4c, 0x4a, 0x29, 0x3f, 0xae, 0x5a, 0x05, 0xb5,
	0xdb, 0xda, 0x5b, 0x0e, 0x9d, 0x26, 0x61, 0x21, 0x6e, 0x52, 0xd5, 0xa1, 0xde, 0x70, 0xc2, 0xfd,
	0xd6, 0x6e, 0xd5, 0xf2, 0x9b, 0xcb, 0xc4, 0x3b, 0xf0, 0xdb, 0x34, 0xf0, 0x1f, 0xb4, 0x65, 0x7f,
	0x6b, 0xa9, 0x41, 0xbc, 0xa5, 0x03, 0xec, 0x3a, 0x36, 0x0e, 0xc9, 0xf2, 0xc0, 0x1f, 0x25, 0xe2,
	0x54, 0xbf, 0x0e, 0xec, 0xb5, 0x65, 0x53, 0xe5, 0xa3, 0x3c, 0x14, 0x57, 0x02, 0x82, 0x43, 0x52,
	0xa7, 0xd4, 0x20, 0xf7, 0x5b, 0x84, 0x85, 0xe8, 0x0c, 0xa4, 0x3c, 0xdc, 0x24, 0x25, 0x6d, 0x5e,
	0x5b, 0xd0, 0xaf, 0xe8, 0x3f, 0xfb, 0xdb, 0x2f, 0x92, 0xa9, 0x20, 0x31, 0xaf, 0x19, 0x82, 0x8d,
	0x6e, 0x81, 0x8e, 0x29, 0x35, 0x59, 0x88, 0x43, 0x52, 0x4a, 0xcc, 0x6b, 0x0b, 0x85, 0xda, 0xab,
	0xd5, 0xd1, 0x9c, 0x51, 0xad, 0x53, 0xba, 0xc5, 0xc7, 0xd5, 0xf7, 0x42, 0x12, 0xac, 0x12, 0xea,
	0xfa, 0xed, 0x26, 0xf1, 0x42, 0x23, 0x87, 0x55, 0x03, 0xaa, 0x41, 0xf6, 0x80, 0x04, 0xcc, 0xf1,
	0xbd, 0x52, 0x52, 0xe8, 0x2f, 0x71, 0xfd, 0xc7, 0x83, 0x63, 0xb5, 0xd9, 0x3b, 0xb7, 0xde, 0x5b,
	0xbc, 0x65, 0x9f, 0x5f, 0xb8, 0x55, 0xbd, 0x65, 0x9f, 0x5b, 0x3c, 0x6b, 0x44, 0x1d, 0xd1, 0x13,
	0x30, 0xbd, 0x17, 0xf8, 0x4d, 0xd3, 0xc2, 0x21, 0x76, 0xfd, 0x46, 0x29, 0x35, 0xaf, 0x2d, 0xe4,
	0x8c, 0x3c, 0xe7, 0xad, 0x48, 0x16, 0x9a, 0x87, 0xbc, 0x4d, 0x98, 0x15, 0x38, 0x94, 0x7b, 0xbf,
	0x94, 0xe6, 0xa2, 0x8d, 0x38, 0x0b, 0x5d, 0x82, 0xb4, 0xd5, 0xb6, 0x5c, 0x52, 0xca, 0x08, 0xb5,
	0x4f, 0x72, 0xb5, 0x8f, 0x05, 0xa7, 0x8d, 0x1c, 0x25, 0x81, 0xe3, 0xdb, 0x8e, 0x65, 0x64, 0x6c,
	0x4c, 0x9a, 0xbe, 0x67, 0xe4, 0x82, 0x96, 0x67, 0xfa, 0x9e, 0x45, 0x0c, 0x39, 0x02, 0xb9, 0x70,
	0x5c, 0xfc, 0x31, 0xa3, 0xae, 0x26, 0x0e, 0xc3, 0xa0, 0x94, 0x9d, 0xd7, 0x16, 0xf2, 0xb5, 0x97,
	0x46, 0xf5, 0xcd, 0x0a, 0x17, 0xb1, 0x19, 0x29, 0x23, 0xf7, 0xeb, 0x61, 0x18, 0x18, 0xc7, 0xac,
	0x38, 0x97, 0xb3, 0x50, 0x05, 0x66, 0x02, 0xdf, 0x0f, 0xcd, 0x46, 0xe0, 0xb7, 0xa8, 0xe9, 0xd8,
	0xa5, 0x9c, 0x9c, 0x0c, 0x67, 0x5e, 0xe3, 0xbc, 0x75, 0x1b, 0x3d, 0x0d, 0x7a, 0xd4, 0xcc, 0x4a,
	0xfa, 0x7c, 0x72, 0x41, 0xbf, 0x02, 0x7c, 0x42, 0xe9, 0x8f, 0xb4, 0x44, 0x4e, 0x33, 0x72, 0x0d,
	0xd9, 0x8f, 0x21, 0x07, 0xf2, 0x3c, 0x98, 0x96, 0xef, 0xed, 0x39, 0x0d, 0x56, 0x82, 0xf9, 0xe4,
	0x42, 0xbe, 0x76, 0x7d, 0x64, 0x93, 0xfb, 0x52, 0x87, 0xc7, 0x77, 0x45, 0x8a, 0x5a, 0xf3, 0xc2,
	0xa0, 0x6d, 0x00, 0xee, 0x30, 0xd0, 0xbb, 0x90, 0x23, 0xde, 0x81, 0x79, 0x80, 0x03, 0x56, 0xca,
	0x0b, 0x3d, 0x6b, 0x13, 0xeb, 0x59, 0xf3, 0x0e, 0xde, 0xc4, 0x81, 0x52, 0x92, 0x25, 0x92, 0x42,
	0x26, 0x64, 0x19, 0xb1, 0x02, 0x12, 0xb2, 0xd2, 0xf4, 0x11, 0x15, 0x6c, 0x49, 0x39, 0x4a, 0x81,
	0x92, 0x8a, 0x6e, 0x41, 0xc6, 0xc5, 0xbb, 0xc4, 0x65, 0xa5, 0x19, 0x21, 0x7f, 0x75, 0x62, 0xf9,
	0x6f, 0x08, 0x31, 0x52, 0xbc, 0x92, 0x89, 0xee, 0x41, 0x3e, 0x06, 0x10, 0xa5, 0x82, 0x50, 0xb1,
	0x3e, 0x79, 0x2c, 0xba, 0xb2, 0xa4, 0x9e, 0xb8, 0x74, 0xf4, 0x14, 0x14, 0xd8, 0x3e, 0x0e, 0x88,
	0x6d, 0xb2, 0xd0, 0x0f, 0x70, 0x83, 0x94, 0x66, 0xe7, 0xb5, 0x85, 0x19, 0x63, 0x46, 0x72, 0xb7,
	0x24, 0x13, 0xbd, 0x06, 0x29, 0x46, 0x89, 0x55, 0x2a, 0x8a, 0x5c, 0x7e, 0x66, 0x54, 0x63, 0xb6,
	0x28, 0xb1, 0x0c, 0x31, 0xb2, 0xfc, 0x32, 0xcc, 0xf6, 0x65, 0x05, 0x2a, 0x42, 0xf2, 0x1e, 0x69,
	0x4b, 0x7c, 0x31, 0xf8, 0x5f, 0x34, 0x07, 0xe9, 0x03, 0xec, 0xb6, 0x24, 0x9e, 0xe8, 0x86, 0x24,
	0x2e, 0x27, 0x5e, 0xd0, 0xca, 0x97, 0x61, 0x3a, 0x1e, 0xec, 0x71, 0xc7, 0xc6, 0xe3, 0x38, 0xd6,
	0xd8, 0x4b, 0x90, 0x8f, 0xc5, 0x68, 0xac, 0xa1, 0xaf, 0x40, 0xb1, 0xdf, 0xf7, 0xe3, 0x8c, 0xaf,
	0x7c, 0x2b, 0x0f, 0xc7, 0x76, 0x68, 0x23, 0xc0, 0xf6, 0x43, 0x54, 0xfe, 0x97, 0x42, 0xe5, 0x47,
	0x07, 0x50, 0x39, 0x86, 0xc4, 0x77, 0x87, 0x21, 0xf1, 0xc8, 0xab, 0x7f, 0x20, 0x5f, 0x3e, 0x17,
	0x8a, 0xf1, 0x00, 0x14, 0x5f, 0x9d, 0x5c, 0xd1, 0x70, 0x2c, 0x7e, 0xb7, 0x1f, 0x8b, 0x8f, 0xa0,
	0x61, 0x38, 0x18, 0xdf, 0xee, 0x03, 0xe3, 0xb5, 0xc9, 0x15, 0x0c, 0x43, 0x63, 0x77, 0x18, 0x1a,
	0xbf, 0x7e, 0x84, 0x78, 0x3c, 0x84, 0xe3, 0x6f, 0x26, 0x1c, 0xff, 0x03, 0xa0, 0xb8, 0x43, 0xed,
	0xaf, 0x51, 0x8d, 0x7c, 0xb6, 0x1f, 0x8d, 0x65, 0x6d, 0x17, 0x24, 0xbf, 0xa7, 0x4d, 0x3d, 0xc4,
	0xdf, 0x09, 0xf1, 0xf7, 0x68, 0x95, 0x70, 0x7f, 0x82, 0x7c, 0x55, 0x95, 0xf0, 0x80, 0x9e, 0x2f,
	0xbb, 0x12, 0x1e, 0x50, 0xf0, 0x25, 0x57, 0xc2, 0x03, 0xf2, 0xbf, 0xfc, 0x4a, 0x78, 0x30, 0x16,
	0x0f, 0xa1, 0xf7, 0x9b, 0x09, 0xbd, 0xbf, 0xd7, 0xa0, 0x70, 0x8d, 0x84, 0x75, 0x4a, 0x59, 0x04,
	0xbc, 0x28, 0x0e, 0xbc, 0x0a, 0x6d, 0x4b, 0x5d, 0x3c, 0x94, 0x22, 0x3a, 0x18, 0xf8, 0x62, 0x04,
	0x5f, 0x12, 0x27, 0x9f, 0xe2, 0xf0, 0x35, 0x1f, 0x3c, 0xf6, 0xb9, 0xf0, 0x35, 0x15, 0x01, 0xd8,
	0x00, 0xa4, 0xa4, 0xbe, 0x00, 0x52, 0xd2, 0x7d, 0x90, 0x22, 0xed, 0xda, 0xf5, 0x99, 0x84, 0xcf,
	0x9c, 0x11, 0x91, 0x95, 0x4f, 0x34, 0x28, 0xae, 0x12, 0x97, 0x8c, 0xb3, 0xa7, 0x1c, 0x3e, 0xcb,
	0x01, 0x43, 0x93, 0x5f, 0x60, 0x68, 0xaa, 0xcf, 0xd0, 0x39, 0x48, 0xd3, 0x56, 0xd0, 0x20, 0x62,
	0x07, 0xc8, 0x19, 0x92, 0xa8, 0xfc, 0x40, 0x83, 0x52, 0xc7, 0xc8, 0x1b, 0x24, 0xc4, 0x36, 0x0e,
	0x71, 0x64, 0xec, 0x59, 0xe0, 0xfb, 0x91, 0x39, 0xdc, 0xe0, 0x2c, 0xa6, 0x74, 0xe3, 0xab, 0xb5,
	0xb9, 0x72, 0x0e, 0x8e, 0x75, 0x8c, 0xeb, 0x64, 0x47, 0x67, 0x22, 0x5a, 0x7c, 0x22, 0x9f, 0x68,
	0x70, 0x72, 0xcd, 0xc3, 0xbb, 0x2e, 0x59, 0x75, 0x18, 0xff, 0x89, 0x39, 0x7d, 0xbc, 0x7c, 0x3a,
	0xb2, 0xa7, 0x4b, 0x90, 0xb5, 0xa5, 0x0d, 0xca, 0xd7, 0x11, 0x59, 0xf9, 0x5d, 0x12, 0xe6, 0x86,
	0x6d, 0x76, 0x88, 0xc0, 0xf4, 0x7b, 0x7e, 0x70, 0xcf, 0xf1, 0x1a, 0xa6, 0x8d, 0xdb, 0x4c, 0x58,
	0x9a, 0xaf, 0x5d, 0x39, 0xca, 0x06, 0x5a, 0xdd, 0xb2, 0xf6, 0x89, 0x6d, 0xe4, 0x95, 0xdc, 0x55,
	0xdc, 0x66, 0xe8, 0x22, 0x14, 0x9a, 0x8e, 0xc7, 0x4b, 0x96, 0x20, 0x34, 0xf7, 0xfd, 0x56, 0x20,
	0xe6, 0x3e, 0x73, 0x25, 0xcf, 0xc3, 0x9a, 0x59, 0x4c, 0x95, 0x4e, 0x2e, 0x4c, 0x19, 0xd3, 0x4d,
	0xc7, 0xdb, 0xe2, 0x3d, 0xae, 0xfb, 0xad, 0x40, 0x0c, 0xc1, 0x0f, 0xe2, 0x43, 0x92, 0xc3, 0x86,
	0xe0, 0x07, 0xdd, 0x21, 0x55, 0x98, 0x76, 0xbc, 0x90, 0x04, 0x07, 0xd8, 0x35, 0x9b, 0x8e, 0x27,
	0x96, 0x54, 0x6c, 0xc0, 0x8b, 0x0b, 0x9a, 0x91, 0x8f, 0x3a, 0xdc, 0x70, 0xbc, 0xf2, 0xcf, 0x35,
	0x48, 0x0b, 0x63, 0x51, 0x19, 0x72, 0x5b, 0x38, 0x6c, 0x05, 0x36, 0x6e, 0xab, 0xe8, 0x76, 0x68,
	0xf4, 0x08, 0x64, 0xb6, 0x5a, 0x1e, 0x6f, 0x49, 0x88, 0x16, 0x45, 0x71, 0xfe, 0x0d, 0x5f, 0xf0,
	0x93, 0x92, 0x2f, 0x29, 0x1e, 0x85, 0xed, 0x16, 0x61, 0xbc, 0x41, 0x56, 0x45, 0x11, 0x89, 0x4e,
	0x83, 0xfe, 0x5f, 0xc4, 0xf6, 0x64, 0x9b, 0x8c, 0x50, 0x97, 0xc1, 0x6d, 0xd8, 0xde, 0x6f, 0x05,
	0xa2, 0x51, 0xae, 0xe8, 0x0e, 0xcd, 0x75, 0x5d, 0x0d, 0x1c, 0xde, 0x92, 0x95, 0xba, 0x24, 0x55,
	0xf9, 0x6b, 0x1a, 0x52, 0x7c, 0x13, 0x40, 0xdb, 0x90, 0x76, 0x9a, 0x58, 0xe5, 0x66, 0xbe, 0x56,
	0x1b, 0x67, 0x07, 0xa9, 0xae, 0xf3, 0x91, 0xaa, 0xce, 0xfb, 0x3f, 0x2d, 0x51, 0xd4, 0x0c, 0x29,
	0x0c, 0x5d, 0x83, 0x34, 0xf5, 0x83, 0x90, 0x95, 0x12, 0x62, 0x93, 0xbc, 0x38, 0x96, 0xd4, 0x4d,
	0x3f, 0x08, 0x0d, 0x39, 0x1e, 0x6d, 0x83, 0x1e, 0x10, 0xe6, 0xb7, 0x02, 0x8b, 0x30, 0xe1, 0xae,
	0x7c, 0xed, 0xf9, 0xb1, 0x84, 0x19, 0xd1, 0x68, 0xa3, 0x2b, 0xa8, 0xbc, 0x02, 0x69, 0x61, 0x3a,
	0x07, 0xb7, 0x80, 0x50, 0x7f, 0x08, 0xb8, 0x71, 0x36, 0x7a, 0x14, 0x92, 0x21, 0x6e, 0xc8, 0xe5,
	0x16, 0x6f, 0xe5, 0xdc, 0xf2, 0x1f, 0x35, 0x48, 0x71, 0x53, 0xd1, 0x6a, 0x0f, 0x42, 0x5e, 0xe0,
	0xdd, 0xce, 0x07, 0xe7, 0x6a, 0x4f, 0x2f, 0xdc, 0xb9, 0xc5, 0x16, 0xcf, 0xfe, 0xcf, 0x9d, 0x77,
	0xee, 0x2c, 0x55, 0x2f, 0x2c, 0x5d, 0xba, 0xfd, 0x0e, 0x5e, 0xfa, 0xef, 0x0b, 0x4b, 0x97, 0xaa,
	0x4b, 0xb7, 0xdf, 0xbf, 0xf8, 0xcc, 0xf3, 0xcf, 0x7e, 0xc0, 0xf9, 0xb7, 0xcf, 0x9e, 0x53, 0xcb,
	0xfb, 0x49, 0xc8, 0x78, 0xad, 0xe6, 0x2e, 0x19, 0xc8, 0xf0, 0xcf, 0x3e, 0x4b, 0x1a, 0xaa, 0x09,
	0xdd, 0x80, 0xb4, 0xb8, 0x22, 0x17, 0xae, 0x28, 0xd4, 0xfe, 0x63, 0x6c, 0xbf, 0x56, 0x37, 0xf9,
	0x70, 0x43, 0x4a, 0xa9, 0x9c, 0x82, 0xb4, 0xa0, 0x51, 0x16, 0x92, 0xdb, 0x2b, 0x9b, 0xc5, 0x29,
	0xfe, 0x67, 0x67, 0x75, 0xb3, 0xa8, 0x95, 0x7f, 0xa5, 0x81, 0xde, 0xf1, 0x1d, 0x5a, 0x02, 0x44,
	0x39, 0xd8, 0xb0, 0x90, 0x78, 0x61, 0xa7, 0x22, 0xd1, 0x44, 0x45, 0x72, 0xac, 0xdb, 0x12, 0x55,
	0x25, 0x3b, 0x90, 0x71, 0x9d, 0xa6, 0x23, 0xe2, 0xcf, 0x43, 0xf6, 0xf2, 0x64, 0x21, 0xab, 0xbe,
	0x21, 0x84, 0x18, 0x4a, 0x58, 0xb9, 0x06, 0x19, 0xc9, 0xe1, 0x69, 0xdd, 0x24, 0x4d, 0x3f, 0x68,
	0x2b, 0x1b, 0x14, 0xc5, 0xb7, 0x71, 0x8b, 0xb6, 0x84, 0x56, 0xcd, 0xe0, 0x7f, 0x2b, 0x9f, 0x6a,
	0x70, 0xa2, 0x0f, 0x6c, 0x18, 0x15, 0x08, 0xf6, 0xc4, 0x00, 0x82, 0x71, 0x50, 0xec, 0x41, 0x9f,
	0xb3, 0xc3, 0xd1, 0xa7, 0x0f, 0x70, 0xce, 0x0e, 0x07, 0x9c, 0x3e, 0x8c, 0x79, 0x62, 0x18, 0xc6,
	0xf4, 0xc0, 0x4a, 0xe5, 0x0f, 0x1a, 0x14, 0x22, 0x33, 0xaf, 0x3a, 0xc4, 0xb5, 0x19, 0x5f, 0xdb,
	0x8c, 0x03, 0x4d, 0xcb, 0x8d, 0x36, 0x83, 0x0e, 0x8d, 0x9e, 0x01, 0xe4, 0x62, 0x16, 0x9a, 0x11,
	0xc3, 0x0c, 0x9d, 0x66, 0x54, 0xae, 0x14, 0x79, 0xcb, 0x96, 0x6a, 0xd8, 0x76, 0x9a, 0x04, 0x5d,
	0x82, 0x53, 0x7b, 0xd8, 0x71, 0x89, 0x6d, 0xde, 0xf5, 0x77, 0x99, 0xb9, 0xef, 0xf0, 0x28, 0xb6,
	0x4d, 0xe1, 0x5a, 0x61, 0x70, 0xd2, 0x78, 0x44, 0x76, 0x78, 0xdd, 0xdf, 0x65, 0xd7, 0x65, 0xb3,
	0x70, 0x37, 0xaa, 0xc3, 0x19, 0xd6, 0xb2, 0x2c, 0xc2, 0xd8, 0x5e, 0xcb, 0x1d, 0x36, 0x3c, 0x25,
	0x86, 0x97, 0xbb, 0x9d, 0xfa, 0x45, 0x54, 0x7e, 0xad, 0xc1, 0x8c, 0xd1, 0xf2, 0x6e, 0x7a, 0x16,
	0x51, 0x33, 0x7b, 0x04, 0x32, 0xd8, 0x0a, 0x9d, 0x03, 0x39, 0xaf, 0xa4, 0xa1, 0x28, 0x7e, 0xfa,
	0xb3, 0xfc, 0x26, 0x75, 0x89, 0xac, 0xb2, 0x13, 0xa2, 0x31, 0xce, 0xe2, 0x23, 0xa5, 0xa1, 0xca,
	0x6c, 0x45, 0x71, 0x94, 0x14, 0x16, 0x10, 0x9b, 0xd8, 0xca, 0xa4, 0x2e, 0x03, 0x9d, 0x01, 0x90,
	0x11, 0x12, 0x5e, 0x92, 0x87, 0x4a, 0x5d, 0x70, 0x84, 0x7b, 0x9e, 0x86, 0xd9, 0xae, 0x0e, 0xd9,
	0x47, 0x1c, 0x2e, 0x8d, 0x42, 0x97, 0xcd, 0x3b, 0x56, 0x7e, 0x93, 0x88, 0x2f, 0x8c, 0x37, 0x21,
	0x17, 0xc8, 0x3d, 0x3b, 0xda, 0x02, 0x2f, 0x8f, 0x9a, 0xeb, 0xdd, 0x34, 0x57, 0xbb, 0x3e, 0x33,
	0x3a, 0xb2, 0xd0, 0x66, 0xdf, 0x0a, 0x7a, 0x61, 0x7c, 0xa9, 0xbd, 0x8b, 0xe7, 0x90, 0x25, 0x9c,
	0x3c, 0x64, 0x09, 0x97, 0x9f, 0x83, 0x5c, 0x64, 0xd6, 0xe8, 0xab, 0x6d, 0xa2, 0x15, 0xfa, 0xc3,
	0x02, 0xe4, 0xd6, 0x3d, 0x16, 0x62, 0xcf, 0x22, 0x43, 0x0b, 0x9f, 0x02, 0x24, 0x1c, 0x5b, 0xe5,
	0x75, 0xc2, 0xb1, 0xe3, 0x85, 0x50, 0xf2, 0x0b, 0x0a, 0xa1, 0x21, 0xb5, 0xf1, 0x29, 0xc8, 0x75,
	0x9a, 0x65, 0x16, 0x64, 0x55, 0x1d, 0xc4, 0xeb, 0x34, 0x79, 0x37, 0x22, 0x23, 0x2f, 0x09, 0xce,
	0x95, 0xd5, 0x7a, 0x56, 0x72, 0x65, 0x19, 0x7e, 0x06, 0x40, 0x6c, 0x75, 0xa6, 0xd8, 0x3f, 0xe4,
	0xb1, 0x5e, 0x17, 0x1c, 0x83, 0xef, 0x1c, 0x9d, 0x66, 0x31, 0x1b, 0x3d, 0xd6, 0x2c, 0x2a, 0xd0,
	0x47, 0x41, 0x12, 0x26, 0xdf, 0x5e, 0x40, 0xae, 0x6b, 0xc1, 0xd8, 0xc6, 0x0d, 0x84, 0x61, 0xb6,
	0x73, 0x39, 0xb1, 0x27, 0x16, 0x4b, 0x29, 0x3f, 0xde, 0xce, 0xd7, 0x0b, 0x22, 0xd7, 0xa7, 0x8c,
	0x02, 0xed, 0x85, 0x15, 0x13, 0x66, 0xa3, 0x93, 0x45, 0xa4, 0x62, 0x5a, 0xa8, 0xf8, 0xf7, 0x91,
	0xf3, 0x2c, 0xbe, 0x98, 0xaf, 0x4f, 0x19, 0x33, 0x41, 0xcf, 0xea, 0x7e, 0x1c, 0xf2, 0x96, 0x78,
	0xfa, 0x31, 0xf9, 0xa9, 0xb7, 0x34, 0x23, 0xa6, 0x08, 0x92, 0xb5, 0xca, 0xbd, 0xfa, 0x38, 0xe4,
	0x5b, 0xe2, 0x44, 0x2c, 0x3b, 0x14, 0x64, 0x07, 0xc9, 0x12, 0x1d, 0xce, 0x00, 0xd0, 0xc0, 0xbf,
	0x4b, 0xac, 0x90, 0x47, 0x6a, 0x56, 0x7a, 0x50, 0x71, 0xd6, 0xc5, 0x62, 0xe7, 0xae, 0x65, 0x14,
	0x5b, 0x44, 0x9c, 0x7e, 0x75, 0xa3, 0xcb, 0x10, 0x91, 0xb4, 0xb0, 0x4b, 0x4a, 0xc7, 0x54, 0x24,
	0x39, 0x81, 0x6e, 0xc6, 0x8b, 0x09, 0x24, 0xe6, 0x7b, 0x71, 0xec, 0x75, 0x15, 0xab, 0x23, 0xd0,
	0xdb, 0x00, 0x96, 0xef, 0x85, 0xd8, 0xf1, 0x48, 0xc0, 0x4a, 0xc7, 0x45, 0xad, 0x33, 0xf2, 0xfa,
	0x8f, 0x72, 0xbe, 0xba, 0x12, 0x89, 0x30, 0x62, 0xd2, 0xd0, 0x5d, 0x28, 0xd2, 0xd6, 0xae, 0xeb,
	0x58, 0x26, 0xf1, 0x6c, 0xea, 0x3b, 0x5e, 0xc8, 0x4a, 0x73, 0x42, 0xc3, 0xab, 0x63, 0x6b, 0xd8,
	0x14, 0x82, 0xd6, 0x94, 0x1c, 0x63, 0x96, 0xf6, 0xd0, 0x0c, 0xbd, 0x01, 0xb9, 0x90, 0x34, 0xa9,
	0xcb, 0x23, 0x71, 0x42, 0xf8, 0xe5, 0xc2, 0xa8, 0x3a, 0xb6, 0xd5, 0x38, 0xa3, 0x23, 0xa1, 0xfc,
	0xe3, 0x14, 0xe8, 0x9d, 0x39, 0x0d, 0x5d, 0xd1, 0x73, 0x51, 0xd1, 0xa9, 0xce, 0xd6, 0xb2, 0x68,
	0xec, 0x2c, 0xbf, 0x64, 0x7c, 0xf9, 0xed, 0x44, 0xa5, 0x64, 0x6a, 0xc2, 0xc9, 0x77, 0x4c, 0xe9,
	0x29, 0x2c, 0x09, 0xc0, 0x81, 0xef, 0x9a, 0x4d, 0xbf, 0xc5, 0x1d, 0x9b, 0x1e, 0xef, 0x31, 0x60,
	0x88, 0xec, 0x37, 0x7d, 0xb7, 0xd5, 0x24, 0x37, 0xb8, 0x38, 0x43, 0x3f, 0xf0, 0x5d, 0xf1, 0x8f,
	0x95, 0x7f, 0x14, 0x15, 0x89, 0xc3, 0xdc, 0x80, 0x20, 0xc5, 0x8d, 0x51, 0x7b, 0x9c, 0xf8, 0xcf,
	0xe1, 0xc9, 0xf6, 0x98, 0x84, 0x0d, 0x85, 0x6e, 0xb6, 0xc7, 0x04, 0x68, 0x9c, 0x84, 0xec, 0xbe,
	0xcf, 0x42, 0xd3, 0xa1, 0x0a, 0xd7, 0x32, 0x9c, 0x5c, 0xa7, 0x5c, 0xce, 0x3d, 0xc7, 0x8b, 0xe0,
	0x4c, 0xfc, 0x17, 0x67, 0x4e, 0x51, 0x29, 0x2a, 0x2c, 0x93, 0x9f, 0x87, 0x9c, 0x82, 0x1c, 0x0b,
	0x2c, 0x53, 0x68, 0xcd, 0x0a, 0xad, 0x59, 0x16, 0x58, 0xdc, 0xc0, 0xf2, 0x03, 0xc8, 0xc7, 0xe6,
	0x30, 0xd4, 0xde, 0x33, 0x00, 0xc2, 0x5f, 0x26, 0xc5, 0xe1, 0xbe, 0x8a, 0x9d, 0x2e, 0x38, 0x9b,
	0x38, 0xdc, 0xe7, 0xa0, 0x16, 0x10, 0x6c, 0x9b, 0xbe, 0xe7, 0x46, 0x47, 0x9b, 0x1c, 0x67, 0xdc,
	0xf4, 0xdc, 0xb6, 0xd0, 0xdc, 0xda, 0x95, 0x23, 0xa5, 0xf5, 0x59, 0xd6, 0xda, 0xe5, 0xe3, 0xca,
	0x1f, 0x27, 0xa0, 0xd0, 0x9b, 0xa1, 0x7c, 0x75, 0x63, 0xdb, 0x0e, 0x08, 0x63, 0x24, 0x2a, 0xcc,
	0xba, 0x0c, 0xae, 0x08, 0xbb, 0xae, 0xe9, 0xf9, 0x36, 0x61, 0xea, 0x6c, 0x95, 0xc3, 0xae, 0xbb,
	0xc1, 0x69, 0x5e, 0x31, 0x71, 0xb7, 0xc4, 0x1c, 0xd8, 0xa1, 0x05, 0x2a, 0x7b, 0x0d, 0x2e, 0xa5,
	0xbb, 0x39, 0xe8, 0x8a, 0xb3, 0x6e, 0x73, 0x07, 0x73, 0x99, 0xdd, 0x9d, 0x21, 0xc3, 0xc9, 0x75,
	0x5b, 0x04, 0x8a, 0x1b, 0x2e, 0x7d, 0x29, 0xfe, 0xa3, 0x13, 0x90, 0xa1, 0xbe, 0xcd, 0xfb, 0xaa,
	0x7d, 0x81, 0xfa, 0xb6, 0xea, 0xca, 0xbd, 0x9b, 0x8b, 0xc5, 0xb4, 0x13, 0x0b, 0x3d, 0x1e, 0x0b,
	0x5e, 0x90, 0x90, 0xe0, 0xc0, 0xb1, 0x84, 0x42, 0x50, 0x05, 0x89, 0xe4, 0xac, 0xdb, 0x57, 0x66,
	0x20, 0x2f, 0xea, 0x56, 0x09, 0xa8, 0x95, 0xb7, 0x20, 0x17, 0x2d, 0xb5, 0xa1, 0xb1, 0x29, 0x43,
	0x4e, 0xed, 0x82, 0xf2, 0xd0, 0xa5, 0x1b, 0x1d, 0x9a, 0x6b, 0x52, 0xd7, 0xed, 0xdd, 0xcb, 0x01,
	0x5d, 0x71, 0xd6, 0x6d, 0x5e, 0x76, 0xe6, 0xeb, 0x94, 0x7e, 0x3d, 0xf6, 0xe0, 0x38, 0x14, 0x65,
	0x8e, 0x0a, 0x45, 0x95, 0x0f, 0x35, 0x48, 0xd6, 0x29, 0x3d, 0x0c, 0x84, 0xe4, 0xbe, 0x9e, 0x88,
	0xef, 0xeb, 0xff, 0x09, 0xba, 0xa3, 0x1c, 0xc1, 0x0f, 0x9c, 0x1c, 0x16, 0x9e, 0x1d, 0xe3, 0x8d,
	0x24, 0x72, 0xa2, 0xd1, 0x95, 0x52, 0xb9, 0x06, 0xa9, 0x3a, 0xa5, 0x0c, 0xbd, 0x0a, 0x29, 0x4c,
	0xa9, 0xcc, 0xe7, 0x7c, 0xed, 0xfc, 0x18, 0x52, 0x0d, 0x31, 0xb0, 0xf2, 0xff, 0x49, 0xc8, 0x0a,
	0x1d, 0x7b, 0x3e, 0xdf, 0x3f, 0x9b, 0xbe, 0xe7, 0x84, 0x7e, 0x60, 0xb6, 0x02, 0x57, 0x4d, 0x0c,
	0x14, 0x6b, 0x27, 0x70, 0xb9, 0x8f, 0x5d, 0xbf, 0xc1, 0x44, 0xab, 0xba, 0x2f, 0xe2, 0x34, 0x6f,
	0x7a, 0x1b, 0x66, 0x43, 0x3f, 0xc4, 0xae, 0xd9, 0x7f, 0xb4, 0x9e, 0x60, 0x37, 0x2c, 0x08, 0x49,
	0xdd, 0x82, 0x78, 0xf0, 0xde, 0x3a, 0x35, 0xec, 0xde, 0xfa, 0x3e, 0x9c, 0xe8, 0x7b, 0x86, 0x51,
	0x65, 0x48, 0x7a, 0xbc, 0x03, 0xe3, 0xd0, 0xa3, 0x9d, 0x71, 0xbc, 0xe7, 0x25, 0x46, 0x95, 0x24,
	0x1b, 0xf1, 0xc8, 0x66, 0x44, 0x0c, 0x2e, 0x8c, 0x0b, 0xf8, 0xf1, 0xb0, 0xfe, 0x52, 0x83, 0x1c,
	0x8f, 0xab, 0x08, 0xc7, 0x46, 0x4f, 0x6c, 0x2f, 0x8f, 0x11, 0x5b, 0x31, 0x5e, 0xfc, 0x91, 0xaf,
	0x00, 0x42, 0x4e, 0x79, 0x1f, 0xf4, 0x0e, 0x6b, 0xc8, 0xe5, 0xf4, 0x5a, 0xfc, 0x72, 0x3a, 0x5f,
	0x5b, 0x1e, 0x2b, 0x43, 0xf7, 0xfc, 0xf8, 0x6d, 0x76, 0x1b, 0xa6, 0xeb, 0x94, 0x46, 0x6b, 0x87,
	0xf1, 0xbc, 0xe9, 0xbd, 0x42, 0xed, 0xde, 0x9b, 0x6e, 0x80, 0x1e, 0xad, 0xac, 0xe8, 0x66, 0x67,
	0xfc, 0xc5, 0xd9, 0x15, 0x51, 0xf9, 0x48, 0x83, 0xe3, 0xf5, 0xbd, 0x3d, 0x62, 0x85, 0xc4, 0xfe,
	0xba, 0x00, 0x50, 0xe5, 0x3e, 0xcc, 0x0d, 0xb1, 0x89, 0xa1, 0xb7, 0xe2, 0xe9, 0x23, 0xc3, 0xfc,
	0xe2, 0xc8, 0x6e, 0x1f, 0x14, 0x18, 0xcf, 0xa4, 0x3f, 0x6b, 0x50, 0xe0, 0xd1, 0xae, 0xf3, 0x13,
	0xb0, 0x78, 0x95, 0x40, 0xdb, 0x3d, 0xf9, 0xf4, 0xda, 0x38, 0xf9, 0xd4, 0x95, 0x32, 0x90, 0x55,
	0xad, 0xcf, 0xcf, 0x2a, 0xa3, 0x37, 0xab, 0x5e, 0x3a, 0xc2, 0xf4, 0x58, 0x3c, 0xc5, 0xfe, 0xa4,
	0xf1, 0xc3, 0x24, 0xa3, 0xbe, 0xc7, 0x08, 0x5a, 0x05, 0xbd, 0xf3, 0x35, 0xa9, 0x3a, 0x32, 0x97,
	0xab, 0xf2, 0x5b, 0xd0, 0x6a, 0xf4, 0x2d, 0x68, 0x75, 0x3b, 0xea, 0xa1, 0x2e, 0x17, 0x7f, 0x22,
	0x3e, 0x10, 0xec, 0x0e, 0x44, 0x57, 0x21, 0xc3, 0xcb, 0xc3, 0x16, 0x53, 0xef, 0xd8, 0xd5, 0x91,
	0x6f, 0x98, 0xc4, 0x28, 0x43, 0x8d, 0xe6, 0x69, 0xd4, 0x24, 0x8c, 0x45, 0x47, 0x61, 0xdd, 0x88,
	0x48, 0xb4, 0x00, 0xa9, 0x5d, 0xdf, 0x96, 0x57, 0xb1, 0xf9, 0xda, 0xdc, 0x80, 0x89, 0x75, 0xaf,
	0x6d, 0x88, 0x1e, 0x8b, 0xcf, 0xc1, 0xc9, 0x43, 0x5e, 0xc7, 0xd1, 0x34, 0xe4, 0xd4, 0x4d, 0xba,
	0x5d, 0x9c, 0x42, 0x79, 0xc8, 0x12, 0x4f, 0x12, 0xda, 0xe2, 0x2b, 0x90, 0x91, 0xb6, 0x70, 0xf6,
	0xd6, 0xce, 0xca, 0xca, 0xda, 0xd6, 0x56, 0x71, 0x0a, 0xe9, 0x90, 0x5e, 0x33, 0x8c, 0x9b, 0x46,
	0x51, 0x43, 0x33, 0xa0, 0x6f, 0xdc, 0xdc, 0x36, 0xaf, 0xde, 0xdc, 0xd9, 0x58, 0x2d, 0x26, 0x38,
	0xb9, 0xb3, 0xb1, 0x72, 0xbd, 0xbe, 0x71, 0x6d, 0x6d, 0xb5, 0x98, 0xac, 0xfd, 0x5d, 0x07, 0xa8,
	0x53, 0x7a, 0x43, 0xce, 0x0b, 0x7d, 0x47, 0x03, 0xbd, 0xf3, 0xb1, 0x1d, 0x7a, 0x61, 0xd2, 0xef,
	0xf3, 0xca, 0x17, 0xc6, 0xd8, 0x02, 0x44, 0x40, 0x2b, 0x27, 0x3f, 0xfc, 0xed, 0x5f, 0x3e, 0x4e,
	0x1c, 0xab, 0x4c, 0x8b, 0x8f, 0x89, 0x0f, 0x2e, 0x2e, 0xf3, 0x54, 0xbb, 0xac, 0x2d, 0xa2, 0xef,
	0x6b, 0x00, 0xdd, 0x2f, 0x4e, 0xd0, 0xa5, 0x89, 0xbf, 0x52, 0x99, 0xc0, 0xa8, 0xc7, 0x84, 0x51,
	0xa5, 0xf2, 0xf1, 0xb8, 0x51, 0xcb, 0xef, 0x73, 0x28, 0xf9, 0x80, 0xdb, 0xf6, 0x5d, 0x0d, 0xf4,
	0xce, 0x8b, 0xec, 0xe8, 0xee, 0xea, 0x7f, 0xc4, 0x9d, 0xdc, 0xb2, 0xda, 0x61, 0x96, 0x7d, 0xaa,
	0x41, 0xb1, 0xff, 0x59, 0x08, 0x8d, 0x7c, 0xea, 0x39, 0xe4, 0x41, 0x69, 0x02, 0x3b, 0x2b, 0xc2,
	0xce, 0xd3, 0x95, 0x93, 0x3d, 0x76, 0xe2, 0x0e, 0xb8, 0x44, 0x5e, 0xec, 0x3c, 0x77, 0x8d, 0xee,
	0xc5, 0xfe, 0x37, 0xc6, 0xc9, 0xbd, 0xb8, 0x78, 0x98, 0x17, 0xbf, 0xad, 0x01, 0x74, 0x1f, 0xe2,
	0x46, 0xcf, 0xbd, 0x81, 0xc7, 0xbb, 0x09, 0x6c, 0x9b, 0x13, 0xb6, 0x15, 0x16, 0x7b, 0x16, 0x04,
	0xfa, 0x5f, 0x0d, 0xb2, 0xea, 0xd5, 0x18, 0x8d, 0x7c, 0x91, 0xd3, 0xfb, 0xcc, 0x3c, 0xb9, 0x2d,
	0xa8, 0xd7, 0x96, 0x9f, 0x6a, 0xb1, 0x67, 0xca, 0xe8, 0x0d, 0x15, 0xbd, 0x36, 0xb6, 0x93, 0xfa,
	0x9e, 0x5f, 0x27, 0xb0, 0xef, 0xbc, 0xb0, 0xef, 0xa9, 0xc5, 0xf9, 0x9e, 0x38, 0x36, 0x95, 0xdc,
	0xe5, 0xf7, 0xa3, 0x52, 0x84, 0x07, 0xf5, 0xca, 0xf4, 0xdb, 0xd0, 0x95, 0xb1, 0x9b, 0x11, 0x50,
	0xfc, 0xec, 0x3f, 0x03, 0x00, 0x00, 0xff, 0xff, 0xc3, 0xb5, 0x5f, 0xe6, 0x05, 0x31, 0x00, 0x00,
}
