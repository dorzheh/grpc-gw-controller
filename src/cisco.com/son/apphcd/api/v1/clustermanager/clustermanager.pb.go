// Code generated by protoc-gen-go. DO NOT EDIT.
// source: clustermanager.proto

package clustermanager

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/envoyproxy/protoc-gen-validate/validate"
import any "github.com/golang/protobuf/ptypes/any"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Status represents operation status
type Status int32

const (
	// Operation was successful
	Status_SUCCESS Status = 0
	// Operation failed
	Status_ERROR Status = 1
	// Operation in progress
	Status_IN_PROGRESS Status = 2
)

var Status_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR",
	2: "IN_PROGRESS",
}
var Status_value = map[string]int32{
	"SUCCESS":     0,
	"ERROR":       1,
	"IN_PROGRESS": 2,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}
func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_clustermanager_034f4aca859d6bc9, []int{0}
}

// Node state. We use lower case properties since
// they are used as parameters in the API path.
type State int32

const (
	// Schedulable, accepts new deployments
	State_active State = 0
	// Node is up and serving running applications however doesn't accepts new deployments
	State_unschedulable State = 1
	// Node doesn't run any workloads and doesn't accept new deployments
	State_maintenance State = 2
)

var State_name = map[int32]string{
	0: "active",
	1: "unschedulable",
	2: "maintenance",
}
var State_value = map[string]int32{
	"active":        0,
	"unschedulable": 1,
	"maintenance":   2,
}

func (x State) String() string {
	return proto.EnumName(State_name, int32(x))
}
func (State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_clustermanager_034f4aca859d6bc9, []int{1}
}

type Condition_Status int32

const (
	// Cluster level:
	// - all nodes are running and schedulable
	// Node level:
	// - the node is schedulable
	Condition_OK Condition_Status = 0
	// An error occurred at the cluster or node level
	Condition_ERROR Condition_Status = 1
	// No error at the cluster or nodes level
	// however the cluster node is either in unschedulable or maintenance state
	Condition_WARNING Condition_Status = 2
)

var Condition_Status_name = map[int32]string{
	0: "OK",
	1: "ERROR",
	2: "WARNING",
}
var Condition_Status_value = map[string]int32{
	"OK":      0,
	"ERROR":   1,
	"WARNING": 2,
}

func (x Condition_Status) String() string {
	return proto.EnumName(Condition_Status_name, int32(x))
}
func (Condition_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_clustermanager_034f4aca859d6bc9, []int{0, 0}
}

type Condition struct {
	Status               Condition_Status `protobuf:"varint,1,opt,name=status,proto3,enum=com.cisco.son.apphcd.api.v1.clustermanager.Condition_Status" json:"status,omitempty"`
	State                State            `protobuf:"varint,2,opt,name=state,proto3,enum=com.cisco.son.apphcd.api.v1.clustermanager.State" json:"state,omitempty"`
	Errors               []string         `protobuf:"bytes,3,rep,name=errors,proto3" json:"errors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Condition) Reset()         { *m = Condition{} }
func (m *Condition) String() string { return proto.CompactTextString(m) }
func (*Condition) ProtoMessage()    {}
func (*Condition) Descriptor() ([]byte, []int) {
	return fileDescriptor_clustermanager_034f4aca859d6bc9, []int{0}
}
func (m *Condition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Condition.Unmarshal(m, b)
}
func (m *Condition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Condition.Marshal(b, m, deterministic)
}
func (dst *Condition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Condition.Merge(dst, src)
}
func (m *Condition) XXX_Size() int {
	return xxx_messageInfo_Condition.Size(m)
}
func (m *Condition) XXX_DiscardUnknown() {
	xxx_messageInfo_Condition.DiscardUnknown(m)
}

var xxx_messageInfo_Condition proto.InternalMessageInfo

func (m *Condition) GetStatus() Condition_Status {
	if m != nil {
		return m.Status
	}
	return Condition_OK
}

func (m *Condition) GetState() State {
	if m != nil {
		return m.State
	}
	return State_active
}

func (m *Condition) GetErrors() []string {
	if m != nil {
		return m.Errors
	}
	return nil
}

type Cpu struct {
	Total                string   `protobuf:"bytes,1,opt,name=total,proto3" json:"total,omitempty"`
	Allocated            string   `protobuf:"bytes,2,opt,name=allocated,proto3" json:"allocated,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Cpu) Reset()         { *m = Cpu{} }
func (m *Cpu) String() string { return proto.CompactTextString(m) }
func (*Cpu) ProtoMessage()    {}
func (*Cpu) Descriptor() ([]byte, []int) {
	return fileDescriptor_clustermanager_034f4aca859d6bc9, []int{1}
}
func (m *Cpu) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cpu.Unmarshal(m, b)
}
func (m *Cpu) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cpu.Marshal(b, m, deterministic)
}
func (dst *Cpu) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cpu.Merge(dst, src)
}
func (m *Cpu) XXX_Size() int {
	return xxx_messageInfo_Cpu.Size(m)
}
func (m *Cpu) XXX_DiscardUnknown() {
	xxx_messageInfo_Cpu.DiscardUnknown(m)
}

var xxx_messageInfo_Cpu proto.InternalMessageInfo

func (m *Cpu) GetTotal() string {
	if m != nil {
		return m.Total
	}
	return ""
}

func (m *Cpu) GetAllocated() string {
	if m != nil {
		return m.Allocated
	}
	return ""
}

type Memory struct {
	Total                string   `protobuf:"bytes,1,opt,name=total,proto3" json:"total,omitempty"`
	Allocated            string   `protobuf:"bytes,2,opt,name=allocated,proto3" json:"allocated,omitempty"`
	Free                 string   `protobuf:"bytes,3,opt,name=free,proto3" json:"free,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Memory) Reset()         { *m = Memory{} }
func (m *Memory) String() string { return proto.CompactTextString(m) }
func (*Memory) ProtoMessage()    {}
func (*Memory) Descriptor() ([]byte, []int) {
	return fileDescriptor_clustermanager_034f4aca859d6bc9, []int{2}
}
func (m *Memory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Memory.Unmarshal(m, b)
}
func (m *Memory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Memory.Marshal(b, m, deterministic)
}
func (dst *Memory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Memory.Merge(dst, src)
}
func (m *Memory) XXX_Size() int {
	return xxx_messageInfo_Memory.Size(m)
}
func (m *Memory) XXX_DiscardUnknown() {
	xxx_messageInfo_Memory.DiscardUnknown(m)
}

var xxx_messageInfo_Memory proto.InternalMessageInfo

func (m *Memory) GetTotal() string {
	if m != nil {
		return m.Total
	}
	return ""
}

func (m *Memory) GetAllocated() string {
	if m != nil {
		return m.Allocated
	}
	return ""
}

func (m *Memory) GetFree() string {
	if m != nil {
		return m.Free
	}
	return ""
}

type GetClusterInfoResponseBody struct {
	ClusterName          string                                    `protobuf:"bytes,1,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	Id                   string                                    `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	CreationDate         string                                    `protobuf:"bytes,3,opt,name=creation_date,json=creationDate,proto3" json:"creation_date,omitempty"`
	Condition            *Condition                                `protobuf:"bytes,4,opt,name=condition,proto3" json:"condition,omitempty"`
	CpuCores             *Cpu                                      `protobuf:"bytes,5,opt,name=cpu_cores,json=cpuCores,proto3" json:"cpu_cores,omitempty"`
	Memory               *Memory                                   `protobuf:"bytes,6,opt,name=memory,proto3" json:"memory,omitempty"`
	LastUpgradeStatus    *GetClusterInfoResponseBody_UpgradeStatus `protobuf:"bytes,7,opt,name=last_upgrade_status,json=lastUpgradeStatus,proto3" json:"last_upgrade_status,omitempty"`
	SvcMonitorUrl        string                                    `protobuf:"bytes,8,opt,name=svc_monitor_url,json=svcMonitorUrl,proto3" json:"svc_monitor_url,omitempty"`
	Workloads            *GetClusterInfoResponseBody_Workloads     `protobuf:"bytes,9,opt,name=workloads,proto3" json:"workloads,omitempty"`
	NumberOfNodes        uint32                                    `protobuf:"varint,10,opt,name=number_of_nodes,json=numberOfNodes,proto3" json:"number_of_nodes,omitempty"`
	Nodes                []*GetClusterInfoResponseBody_Node        `protobuf:"bytes,11,rep,name=nodes,proto3" json:"nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *GetClusterInfoResponseBody) Reset()         { *m = GetClusterInfoResponseBody{} }
func (m *GetClusterInfoResponseBody) String() string { return proto.CompactTextString(m) }
func (*GetClusterInfoResponseBody) ProtoMessage()    {}
func (*GetClusterInfoResponseBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_clustermanager_034f4aca859d6bc9, []int{3}
}
func (m *GetClusterInfoResponseBody) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetClusterInfoResponseBody.Unmarshal(m, b)
}
func (m *GetClusterInfoResponseBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetClusterInfoResponseBody.Marshal(b, m, deterministic)
}
func (dst *GetClusterInfoResponseBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetClusterInfoResponseBody.Merge(dst, src)
}
func (m *GetClusterInfoResponseBody) XXX_Size() int {
	return xxx_messageInfo_GetClusterInfoResponseBody.Size(m)
}
func (m *GetClusterInfoResponseBody) XXX_DiscardUnknown() {
	xxx_messageInfo_GetClusterInfoResponseBody.DiscardUnknown(m)
}

var xxx_messageInfo_GetClusterInfoResponseBody proto.InternalMessageInfo

func (m *GetClusterInfoResponseBody) GetClusterName() string {
	if m != nil {
		return m.ClusterName
	}
	return ""
}

func (m *GetClusterInfoResponseBody) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GetClusterInfoResponseBody) GetCreationDate() string {
	if m != nil {
		return m.CreationDate
	}
	return ""
}

func (m *GetClusterInfoResponseBody) GetCondition() *Condition {
	if m != nil {
		return m.Condition
	}
	return nil
}

func (m *GetClusterInfoResponseBody) GetCpuCores() *Cpu {
	if m != nil {
		return m.CpuCores
	}
	return nil
}

func (m *GetClusterInfoResponseBody) GetMemory() *Memory {
	if m != nil {
		return m.Memory
	}
	return nil
}

func (m *GetClusterInfoResponseBody) GetLastUpgradeStatus() *GetClusterInfoResponseBody_UpgradeStatus {
	if m != nil {
		return m.LastUpgradeStatus
	}
	return nil
}

func (m *GetClusterInfoResponseBody) GetSvcMonitorUrl() string {
	if m != nil {
		return m.SvcMonitorUrl
	}
	return ""
}

func (m *GetClusterInfoResponseBody) GetWorkloads() *GetClusterInfoResponseBody_Workloads {
	if m != nil {
		return m.Workloads
	}
	return nil
}

func (m *GetClusterInfoResponseBody) GetNumberOfNodes() uint32 {
	if m != nil {
		return m.NumberOfNodes
	}
	return 0
}

func (m *GetClusterInfoResponseBody) GetNodes() []*GetClusterInfoResponseBody_Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type GetClusterInfoResponseBody_UpgradeStatus struct {
	LastUpgrade          *timestamp.Timestamp                                  `protobuf:"bytes,1,opt,name=last_upgrade,json=lastUpgrade,proto3" json:"last_upgrade,omitempty"`
	Status               string                                                `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	ErrorMessage         string                                                `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	Components           []*GetClusterInfoResponseBody_UpgradeStatus_Component `protobuf:"bytes,4,rep,name=components,proto3" json:"components,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                              `json:"-"`
	XXX_unrecognized     []byte                                                `json:"-"`
	XXX_sizecache        int32                                                 `json:"-"`
}

func (m *GetClusterInfoResponseBody_UpgradeStatus) Reset() {
	*m = GetClusterInfoResponseBody_UpgradeStatus{}
}
func (m *GetClusterInfoResponseBody_UpgradeStatus) String() string { return proto.CompactTextString(m) }
func (*GetClusterInfoResponseBody_UpgradeStatus) ProtoMessage()    {}
func (*GetClusterInfoResponseBody_UpgradeStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_clustermanager_034f4aca859d6bc9, []int{3, 0}
}
func (m *GetClusterInfoResponseBody_UpgradeStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetClusterInfoResponseBody_UpgradeStatus.Unmarshal(m, b)
}
func (m *GetClusterInfoResponseBody_UpgradeStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetClusterInfoResponseBody_UpgradeStatus.Marshal(b, m, deterministic)
}
func (dst *GetClusterInfoResponseBody_UpgradeStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetClusterInfoResponseBody_UpgradeStatus.Merge(dst, src)
}
func (m *GetClusterInfoResponseBody_UpgradeStatus) XXX_Size() int {
	return xxx_messageInfo_GetClusterInfoResponseBody_UpgradeStatus.Size(m)
}
func (m *GetClusterInfoResponseBody_UpgradeStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_GetClusterInfoResponseBody_UpgradeStatus.DiscardUnknown(m)
}

var xxx_messageInfo_GetClusterInfoResponseBody_UpgradeStatus proto.InternalMessageInfo

func (m *GetClusterInfoResponseBody_UpgradeStatus) GetLastUpgrade() *timestamp.Timestamp {
	if m != nil {
		return m.LastUpgrade
	}
	return nil
}

func (m *GetClusterInfoResponseBody_UpgradeStatus) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *GetClusterInfoResponseBody_UpgradeStatus) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func (m *GetClusterInfoResponseBody_UpgradeStatus) GetComponents() []*GetClusterInfoResponseBody_UpgradeStatus_Component {
	if m != nil {
		return m.Components
	}
	return nil
}

type GetClusterInfoResponseBody_UpgradeStatus_Component struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Status               string   `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	ErrorMessage         string   `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetClusterInfoResponseBody_UpgradeStatus_Component) Reset() {
	*m = GetClusterInfoResponseBody_UpgradeStatus_Component{}
}
func (m *GetClusterInfoResponseBody_UpgradeStatus_Component) String() string {
	return proto.CompactTextString(m)
}
func (*GetClusterInfoResponseBody_UpgradeStatus_Component) ProtoMessage() {}
func (*GetClusterInfoResponseBody_UpgradeStatus_Component) Descriptor() ([]byte, []int) {
	return fileDescriptor_clustermanager_034f4aca859d6bc9, []int{3, 0, 0}
}
func (m *GetClusterInfoResponseBody_UpgradeStatus_Component) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetClusterInfoResponseBody_UpgradeStatus_Component.Unmarshal(m, b)
}
func (m *GetClusterInfoResponseBody_UpgradeStatus_Component) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetClusterInfoResponseBody_UpgradeStatus_Component.Marshal(b, m, deterministic)
}
func (dst *GetClusterInfoResponseBody_UpgradeStatus_Component) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetClusterInfoResponseBody_UpgradeStatus_Component.Merge(dst, src)
}
func (m *GetClusterInfoResponseBody_UpgradeStatus_Component) XXX_Size() int {
	return xxx_messageInfo_GetClusterInfoResponseBody_UpgradeStatus_Component.Size(m)
}
func (m *GetClusterInfoResponseBody_UpgradeStatus_Component) XXX_DiscardUnknown() {
	xxx_messageInfo_GetClusterInfoResponseBody_UpgradeStatus_Component.DiscardUnknown(m)
}

var xxx_messageInfo_GetClusterInfoResponseBody_UpgradeStatus_Component proto.InternalMessageInfo

func (m *GetClusterInfoResponseBody_UpgradeStatus_Component) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetClusterInfoResponseBody_UpgradeStatus_Component) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *GetClusterInfoResponseBody_UpgradeStatus_Component) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

type GetClusterInfoResponseBody_App struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	NumberOfInstances    uint32   `protobuf:"varint,2,opt,name=number_of_instances,json=numberOfInstances,proto3" json:"number_of_instances,omitempty"`
	Active               bool     `protobuf:"varint,3,opt,name=active,proto3" json:"active,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetClusterInfoResponseBody_App) Reset()         { *m = GetClusterInfoResponseBody_App{} }
func (m *GetClusterInfoResponseBody_App) String() string { return proto.CompactTextString(m) }
func (*GetClusterInfoResponseBody_App) ProtoMessage()    {}
func (*GetClusterInfoResponseBody_App) Descriptor() ([]byte, []int) {
	return fileDescriptor_clustermanager_034f4aca859d6bc9, []int{3, 1}
}
func (m *GetClusterInfoResponseBody_App) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetClusterInfoResponseBody_App.Unmarshal(m, b)
}
func (m *GetClusterInfoResponseBody_App) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetClusterInfoResponseBody_App.Marshal(b, m, deterministic)
}
func (dst *GetClusterInfoResponseBody_App) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetClusterInfoResponseBody_App.Merge(dst, src)
}
func (m *GetClusterInfoResponseBody_App) XXX_Size() int {
	return xxx_messageInfo_GetClusterInfoResponseBody_App.Size(m)
}
func (m *GetClusterInfoResponseBody_App) XXX_DiscardUnknown() {
	xxx_messageInfo_GetClusterInfoResponseBody_App.DiscardUnknown(m)
}

var xxx_messageInfo_GetClusterInfoResponseBody_App proto.InternalMessageInfo

func (m *GetClusterInfoResponseBody_App) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetClusterInfoResponseBody_App) GetNumberOfInstances() uint32 {
	if m != nil {
		return m.NumberOfInstances
	}
	return 0
}

func (m *GetClusterInfoResponseBody_App) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

type GetClusterInfoResponseBody_Workloads struct {
	NumberOfApps            uint32                            `protobuf:"varint,1,opt,name=number_of_apps,json=numberOfApps,proto3" json:"number_of_apps,omitempty"`
	NumberOfInstances       uint32                            `protobuf:"varint,2,opt,name=number_of_instances,json=numberOfInstances,proto3" json:"number_of_instances,omitempty"`
	NumberOfActiveApps      uint32                            `protobuf:"varint,3,opt,name=number_of_active_apps,json=numberOfActiveApps,proto3" json:"number_of_active_apps,omitempty"`
	NumberOfActiveInstances uint32                            `protobuf:"varint,4,opt,name=number_of_active_instances,json=numberOfActiveInstances,proto3" json:"number_of_active_instances,omitempty"`
	Apps                    []*GetClusterInfoResponseBody_App `protobuf:"bytes,5,rep,name=apps,proto3" json:"apps,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}                          `json:"-"`
	XXX_unrecognized        []byte                            `json:"-"`
	XXX_sizecache           int32                             `json:"-"`
}

func (m *GetClusterInfoResponseBody_Workloads) Reset()         { *m = GetClusterInfoResponseBody_Workloads{} }
func (m *GetClusterInfoResponseBody_Workloads) String() string { return proto.CompactTextString(m) }
func (*GetClusterInfoResponseBody_Workloads) ProtoMessage()    {}
func (*GetClusterInfoResponseBody_Workloads) Descriptor() ([]byte, []int) {
	return fileDescriptor_clustermanager_034f4aca859d6bc9, []int{3, 2}
}
func (m *GetClusterInfoResponseBody_Workloads) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetClusterInfoResponseBody_Workloads.Unmarshal(m, b)
}
func (m *GetClusterInfoResponseBody_Workloads) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetClusterInfoResponseBody_Workloads.Marshal(b, m, deterministic)
}
func (dst *GetClusterInfoResponseBody_Workloads) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetClusterInfoResponseBody_Workloads.Merge(dst, src)
}
func (m *GetClusterInfoResponseBody_Workloads) XXX_Size() int {
	return xxx_messageInfo_GetClusterInfoResponseBody_Workloads.Size(m)
}
func (m *GetClusterInfoResponseBody_Workloads) XXX_DiscardUnknown() {
	xxx_messageInfo_GetClusterInfoResponseBody_Workloads.DiscardUnknown(m)
}

var xxx_messageInfo_GetClusterInfoResponseBody_Workloads proto.InternalMessageInfo

func (m *GetClusterInfoResponseBody_Workloads) GetNumberOfApps() uint32 {
	if m != nil {
		return m.NumberOfApps
	}
	return 0
}

func (m *GetClusterInfoResponseBody_Workloads) GetNumberOfInstances() uint32 {
	if m != nil {
		return m.NumberOfInstances
	}
	return 0
}

func (m *GetClusterInfoResponseBody_Workloads) GetNumberOfActiveApps() uint32 {
	if m != nil {
		return m.NumberOfActiveApps
	}
	return 0
}

func (m *GetClusterInfoResponseBody_Workloads) GetNumberOfActiveInstances() uint32 {
	if m != nil {
		return m.NumberOfActiveInstances
	}
	return 0
}

func (m *GetClusterInfoResponseBody_Workloads) GetApps() []*GetClusterInfoResponseBody_App {
	if m != nil {
		return m.Apps
	}
	return nil
}

type GetClusterInfoResponseBody_Node struct {
	Hostname             string                                   `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Id                   string                                   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	ExternalIp           string                                   `protobuf:"bytes,3,opt,name=external_ip,json=externalIp,proto3" json:"external_ip,omitempty"`
	Condition            *Condition                               `protobuf:"bytes,4,opt,name=condition,proto3" json:"condition,omitempty"`
	CpuCores             *Cpu                                     `protobuf:"bytes,5,opt,name=cpu_cores,json=cpuCores,proto3" json:"cpu_cores,omitempty"`
	Memory               *Memory                                  `protobuf:"bytes,6,opt,name=memory,proto3" json:"memory,omitempty"`
	LocalStorage         *GetClusterInfoResponseBody_Node_Storage `protobuf:"bytes,7,opt,name=local_storage,json=localStorage,proto3" json:"local_storage,omitempty"`
	MonitorUrl           string                                   `protobuf:"bytes,8,opt,name=monitor_url,json=monitorUrl,proto3" json:"monitor_url,omitempty"`
	Master               bool                                     `protobuf:"varint,9,opt,name=master,proto3" json:"master,omitempty"`
	Worker               bool                                     `protobuf:"varint,10,opt,name=worker,proto3" json:"worker,omitempty"`
	Etcd                 bool                                     `protobuf:"varint,11,opt,name=etcd,proto3" json:"etcd,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                 `json:"-"`
	XXX_unrecognized     []byte                                   `json:"-"`
	XXX_sizecache        int32                                    `json:"-"`
}

func (m *GetClusterInfoResponseBody_Node) Reset()         { *m = GetClusterInfoResponseBody_Node{} }
func (m *GetClusterInfoResponseBody_Node) String() string { return proto.CompactTextString(m) }
func (*GetClusterInfoResponseBody_Node) ProtoMessage()    {}
func (*GetClusterInfoResponseBody_Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_clustermanager_034f4aca859d6bc9, []int{3, 3}
}
func (m *GetClusterInfoResponseBody_Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetClusterInfoResponseBody_Node.Unmarshal(m, b)
}
func (m *GetClusterInfoResponseBody_Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetClusterInfoResponseBody_Node.Marshal(b, m, deterministic)
}
func (dst *GetClusterInfoResponseBody_Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetClusterInfoResponseBody_Node.Merge(dst, src)
}
func (m *GetClusterInfoResponseBody_Node) XXX_Size() int {
	return xxx_messageInfo_GetClusterInfoResponseBody_Node.Size(m)
}
func (m *GetClusterInfoResponseBody_Node) XXX_DiscardUnknown() {
	xxx_messageInfo_GetClusterInfoResponseBody_Node.DiscardUnknown(m)
}

var xxx_messageInfo_GetClusterInfoResponseBody_Node proto.InternalMessageInfo

func (m *GetClusterInfoResponseBody_Node) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *GetClusterInfoResponseBody_Node) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GetClusterInfoResponseBody_Node) GetExternalIp() string {
	if m != nil {
		return m.ExternalIp
	}
	return ""
}

func (m *GetClusterInfoResponseBody_Node) GetCondition() *Condition {
	if m != nil {
		return m.Condition
	}
	return nil
}

func (m *GetClusterInfoResponseBody_Node) GetCpuCores() *Cpu {
	if m != nil {
		return m.CpuCores
	}
	return nil
}

func (m *GetClusterInfoResponseBody_Node) GetMemory() *Memory {
	if m != nil {
		return m.Memory
	}
	return nil
}

func (m *GetClusterInfoResponseBody_Node) GetLocalStorage() *GetClusterInfoResponseBody_Node_Storage {
	if m != nil {
		return m.LocalStorage
	}
	return nil
}

func (m *GetClusterInfoResponseBody_Node) GetMonitorUrl() string {
	if m != nil {
		return m.MonitorUrl
	}
	return ""
}

func (m *GetClusterInfoResponseBody_Node) GetMaster() bool {
	if m != nil {
		return m.Master
	}
	return false
}

func (m *GetClusterInfoResponseBody_Node) GetWorker() bool {
	if m != nil {
		return m.Worker
	}
	return false
}

func (m *GetClusterInfoResponseBody_Node) GetEtcd() bool {
	if m != nil {
		return m.Etcd
	}
	return false
}

type GetClusterInfoResponseBody_Node_Storage struct {
	Total                string   `protobuf:"bytes,1,opt,name=total,proto3" json:"total,omitempty"`
	Used                 string   `protobuf:"bytes,2,opt,name=used,proto3" json:"used,omitempty"`
	Free                 string   `protobuf:"bytes,3,opt,name=free,proto3" json:"free,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetClusterInfoResponseBody_Node_Storage) Reset() {
	*m = GetClusterInfoResponseBody_Node_Storage{}
}
func (m *GetClusterInfoResponseBody_Node_Storage) String() string { return proto.CompactTextString(m) }
func (*GetClusterInfoResponseBody_Node_Storage) ProtoMessage()    {}
func (*GetClusterInfoResponseBody_Node_Storage) Descriptor() ([]byte, []int) {
	return fileDescriptor_clustermanager_034f4aca859d6bc9, []int{3, 3, 0}
}
func (m *GetClusterInfoResponseBody_Node_Storage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetClusterInfoResponseBody_Node_Storage.Unmarshal(m, b)
}
func (m *GetClusterInfoResponseBody_Node_Storage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetClusterInfoResponseBody_Node_Storage.Marshal(b, m, deterministic)
}
func (dst *GetClusterInfoResponseBody_Node_Storage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetClusterInfoResponseBody_Node_Storage.Merge(dst, src)
}
func (m *GetClusterInfoResponseBody_Node_Storage) XXX_Size() int {
	return xxx_messageInfo_GetClusterInfoResponseBody_Node_Storage.Size(m)
}
func (m *GetClusterInfoResponseBody_Node_Storage) XXX_DiscardUnknown() {
	xxx_messageInfo_GetClusterInfoResponseBody_Node_Storage.DiscardUnknown(m)
}

var xxx_messageInfo_GetClusterInfoResponseBody_Node_Storage proto.InternalMessageInfo

func (m *GetClusterInfoResponseBody_Node_Storage) GetTotal() string {
	if m != nil {
		return m.Total
	}
	return ""
}

func (m *GetClusterInfoResponseBody_Node_Storage) GetUsed() string {
	if m != nil {
		return m.Used
	}
	return ""
}

func (m *GetClusterInfoResponseBody_Node_Storage) GetFree() string {
	if m != nil {
		return m.Free
	}
	return ""
}

type GetKubeConfigRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetKubeConfigRequest) Reset()         { *m = GetKubeConfigRequest{} }
func (m *GetKubeConfigRequest) String() string { return proto.CompactTextString(m) }
func (*GetKubeConfigRequest) ProtoMessage()    {}
func (*GetKubeConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_clustermanager_034f4aca859d6bc9, []int{4}
}
func (m *GetKubeConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetKubeConfigRequest.Unmarshal(m, b)
}
func (m *GetKubeConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetKubeConfigRequest.Marshal(b, m, deterministic)
}
func (dst *GetKubeConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetKubeConfigRequest.Merge(dst, src)
}
func (m *GetKubeConfigRequest) XXX_Size() int {
	return xxx_messageInfo_GetKubeConfigRequest.Size(m)
}
func (m *GetKubeConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetKubeConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetKubeConfigRequest proto.InternalMessageInfo

type GetKubeConfigResponse struct {
	Kubeconfig           string   `protobuf:"bytes,1,opt,name=kubeconfig,proto3" json:"kubeconfig,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetKubeConfigResponse) Reset()         { *m = GetKubeConfigResponse{} }
func (m *GetKubeConfigResponse) String() string { return proto.CompactTextString(m) }
func (*GetKubeConfigResponse) ProtoMessage()    {}
func (*GetKubeConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_clustermanager_034f4aca859d6bc9, []int{5}
}
func (m *GetKubeConfigResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetKubeConfigResponse.Unmarshal(m, b)
}
func (m *GetKubeConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetKubeConfigResponse.Marshal(b, m, deterministic)
}
func (dst *GetKubeConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetKubeConfigResponse.Merge(dst, src)
}
func (m *GetKubeConfigResponse) XXX_Size() int {
	return xxx_messageInfo_GetKubeConfigResponse.Size(m)
}
func (m *GetKubeConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetKubeConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetKubeConfigResponse proto.InternalMessageInfo

func (m *GetKubeConfigResponse) GetKubeconfig() string {
	if m != nil {
		return m.Kubeconfig
	}
	return ""
}

type GetClusterInfoRequest struct {
	Hostname             string   `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetClusterInfoRequest) Reset()         { *m = GetClusterInfoRequest{} }
func (m *GetClusterInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetClusterInfoRequest) ProtoMessage()    {}
func (*GetClusterInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_clustermanager_034f4aca859d6bc9, []int{6}
}
func (m *GetClusterInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetClusterInfoRequest.Unmarshal(m, b)
}
func (m *GetClusterInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetClusterInfoRequest.Marshal(b, m, deterministic)
}
func (dst *GetClusterInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetClusterInfoRequest.Merge(dst, src)
}
func (m *GetClusterInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetClusterInfoRequest.Size(m)
}
func (m *GetClusterInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetClusterInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetClusterInfoRequest proto.InternalMessageInfo

func (m *GetClusterInfoRequest) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

type UpgradeClusterRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpgradeClusterRequest) Reset()         { *m = UpgradeClusterRequest{} }
func (m *UpgradeClusterRequest) String() string { return proto.CompactTextString(m) }
func (*UpgradeClusterRequest) ProtoMessage()    {}
func (*UpgradeClusterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_clustermanager_034f4aca859d6bc9, []int{7}
}
func (m *UpgradeClusterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpgradeClusterRequest.Unmarshal(m, b)
}
func (m *UpgradeClusterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpgradeClusterRequest.Marshal(b, m, deterministic)
}
func (dst *UpgradeClusterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpgradeClusterRequest.Merge(dst, src)
}
func (m *UpgradeClusterRequest) XXX_Size() int {
	return xxx_messageInfo_UpgradeClusterRequest.Size(m)
}
func (m *UpgradeClusterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpgradeClusterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpgradeClusterRequest proto.InternalMessageInfo

type Quota struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Memory               uint32   `protobuf:"varint,2,opt,name=memory,proto3" json:"memory,omitempty"`
	Cpu                  float64  `protobuf:"fixed64,3,opt,name=cpu,proto3" json:"cpu,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Quota) Reset()         { *m = Quota{} }
func (m *Quota) String() string { return proto.CompactTextString(m) }
func (*Quota) ProtoMessage()    {}
func (*Quota) Descriptor() ([]byte, []int) {
	return fileDescriptor_clustermanager_034f4aca859d6bc9, []int{8}
}
func (m *Quota) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Quota.Unmarshal(m, b)
}
func (m *Quota) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Quota.Marshal(b, m, deterministic)
}
func (dst *Quota) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Quota.Merge(dst, src)
}
func (m *Quota) XXX_Size() int {
	return xxx_messageInfo_Quota.Size(m)
}
func (m *Quota) XXX_DiscardUnknown() {
	xxx_messageInfo_Quota.DiscardUnknown(m)
}

var xxx_messageInfo_Quota proto.InternalMessageInfo

func (m *Quota) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *Quota) GetMemory() uint32 {
	if m != nil {
		return m.Memory
	}
	return 0
}

func (m *Quota) GetCpu() float64 {
	if m != nil {
		return m.Cpu
	}
	return 0
}

type SetClusterResourceQuotasRequest struct {
	Quotas               []*Quota `protobuf:"bytes,1,rep,name=quotas,proto3" json:"quotas,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetClusterResourceQuotasRequest) Reset()         { *m = SetClusterResourceQuotasRequest{} }
func (m *SetClusterResourceQuotasRequest) String() string { return proto.CompactTextString(m) }
func (*SetClusterResourceQuotasRequest) ProtoMessage()    {}
func (*SetClusterResourceQuotasRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_clustermanager_034f4aca859d6bc9, []int{9}
}
func (m *SetClusterResourceQuotasRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetClusterResourceQuotasRequest.Unmarshal(m, b)
}
func (m *SetClusterResourceQuotasRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetClusterResourceQuotasRequest.Marshal(b, m, deterministic)
}
func (dst *SetClusterResourceQuotasRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetClusterResourceQuotasRequest.Merge(dst, src)
}
func (m *SetClusterResourceQuotasRequest) XXX_Size() int {
	return xxx_messageInfo_SetClusterResourceQuotasRequest.Size(m)
}
func (m *SetClusterResourceQuotasRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetClusterResourceQuotasRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetClusterResourceQuotasRequest proto.InternalMessageInfo

func (m *SetClusterResourceQuotasRequest) GetQuotas() []*Quota {
	if m != nil {
		return m.Quotas
	}
	return nil
}

type GetClusterResourceQuotasRequest struct {
	Namespaces           []string `protobuf:"bytes,1,rep,name=namespaces,proto3" json:"namespaces,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetClusterResourceQuotasRequest) Reset()         { *m = GetClusterResourceQuotasRequest{} }
func (m *GetClusterResourceQuotasRequest) String() string { return proto.CompactTextString(m) }
func (*GetClusterResourceQuotasRequest) ProtoMessage()    {}
func (*GetClusterResourceQuotasRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_clustermanager_034f4aca859d6bc9, []int{10}
}
func (m *GetClusterResourceQuotasRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetClusterResourceQuotasRequest.Unmarshal(m, b)
}
func (m *GetClusterResourceQuotasRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetClusterResourceQuotasRequest.Marshal(b, m, deterministic)
}
func (dst *GetClusterResourceQuotasRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetClusterResourceQuotasRequest.Merge(dst, src)
}
func (m *GetClusterResourceQuotasRequest) XXX_Size() int {
	return xxx_messageInfo_GetClusterResourceQuotasRequest.Size(m)
}
func (m *GetClusterResourceQuotasRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetClusterResourceQuotasRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetClusterResourceQuotasRequest proto.InternalMessageInfo

func (m *GetClusterResourceQuotasRequest) GetNamespaces() []string {
	if m != nil {
		return m.Namespaces
	}
	return nil
}

type DeleteClusterResourceQuotasRequest struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteClusterResourceQuotasRequest) Reset()         { *m = DeleteClusterResourceQuotasRequest{} }
func (m *DeleteClusterResourceQuotasRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteClusterResourceQuotasRequest) ProtoMessage()    {}
func (*DeleteClusterResourceQuotasRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_clustermanager_034f4aca859d6bc9, []int{11}
}
func (m *DeleteClusterResourceQuotasRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteClusterResourceQuotasRequest.Unmarshal(m, b)
}
func (m *DeleteClusterResourceQuotasRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteClusterResourceQuotasRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteClusterResourceQuotasRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteClusterResourceQuotasRequest.Merge(dst, src)
}
func (m *DeleteClusterResourceQuotasRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteClusterResourceQuotasRequest.Size(m)
}
func (m *DeleteClusterResourceQuotasRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteClusterResourceQuotasRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteClusterResourceQuotasRequest proto.InternalMessageInfo

func (m *DeleteClusterResourceQuotasRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

type SetGetClusterResourceQuotasResponseBody struct {
	Quotas               []*Quota `protobuf:"bytes,1,rep,name=quotas,proto3" json:"quotas,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetGetClusterResourceQuotasResponseBody) Reset() {
	*m = SetGetClusterResourceQuotasResponseBody{}
}
func (m *SetGetClusterResourceQuotasResponseBody) String() string { return proto.CompactTextString(m) }
func (*SetGetClusterResourceQuotasResponseBody) ProtoMessage()    {}
func (*SetGetClusterResourceQuotasResponseBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_clustermanager_034f4aca859d6bc9, []int{12}
}
func (m *SetGetClusterResourceQuotasResponseBody) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetGetClusterResourceQuotasResponseBody.Unmarshal(m, b)
}
func (m *SetGetClusterResourceQuotasResponseBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetGetClusterResourceQuotasResponseBody.Marshal(b, m, deterministic)
}
func (dst *SetGetClusterResourceQuotasResponseBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetGetClusterResourceQuotasResponseBody.Merge(dst, src)
}
func (m *SetGetClusterResourceQuotasResponseBody) XXX_Size() int {
	return xxx_messageInfo_SetGetClusterResourceQuotasResponseBody.Size(m)
}
func (m *SetGetClusterResourceQuotasResponseBody) XXX_DiscardUnknown() {
	xxx_messageInfo_SetGetClusterResourceQuotasResponseBody.DiscardUnknown(m)
}

var xxx_messageInfo_SetGetClusterResourceQuotasResponseBody proto.InternalMessageInfo

func (m *SetGetClusterResourceQuotasResponseBody) GetQuotas() []*Quota {
	if m != nil {
		return m.Quotas
	}
	return nil
}

type CreateNodeRequest struct {
	Hostname             string   `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Master               bool     `protobuf:"varint,2,opt,name=master,proto3" json:"master,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateNodeRequest) Reset()         { *m = CreateNodeRequest{} }
func (m *CreateNodeRequest) String() string { return proto.CompactTextString(m) }
func (*CreateNodeRequest) ProtoMessage()    {}
func (*CreateNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_clustermanager_034f4aca859d6bc9, []int{13}
}
func (m *CreateNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNodeRequest.Unmarshal(m, b)
}
func (m *CreateNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNodeRequest.Marshal(b, m, deterministic)
}
func (dst *CreateNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNodeRequest.Merge(dst, src)
}
func (m *CreateNodeRequest) XXX_Size() int {
	return xxx_messageInfo_CreateNodeRequest.Size(m)
}
func (m *CreateNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNodeRequest proto.InternalMessageInfo

func (m *CreateNodeRequest) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *CreateNodeRequest) GetMaster() bool {
	if m != nil {
		return m.Master
	}
	return false
}

type CreateNodeResponseBody struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Hostname             string   `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Master               bool     `protobuf:"varint,3,opt,name=master,proto3" json:"master,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateNodeResponseBody) Reset()         { *m = CreateNodeResponseBody{} }
func (m *CreateNodeResponseBody) String() string { return proto.CompactTextString(m) }
func (*CreateNodeResponseBody) ProtoMessage()    {}
func (*CreateNodeResponseBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_clustermanager_034f4aca859d6bc9, []int{14}
}
func (m *CreateNodeResponseBody) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNodeResponseBody.Unmarshal(m, b)
}
func (m *CreateNodeResponseBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNodeResponseBody.Marshal(b, m, deterministic)
}
func (dst *CreateNodeResponseBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNodeResponseBody.Merge(dst, src)
}
func (m *CreateNodeResponseBody) XXX_Size() int {
	return xxx_messageInfo_CreateNodeResponseBody.Size(m)
}
func (m *CreateNodeResponseBody) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNodeResponseBody.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNodeResponseBody proto.InternalMessageInfo

func (m *CreateNodeResponseBody) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CreateNodeResponseBody) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *CreateNodeResponseBody) GetMaster() bool {
	if m != nil {
		return m.Master
	}
	return false
}

type UpdateNodeStateRequest struct {
	Hostname             string   `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	State                State    `protobuf:"varint,2,opt,name=state,proto3,enum=com.cisco.son.apphcd.api.v1.clustermanager.State" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateNodeStateRequest) Reset()         { *m = UpdateNodeStateRequest{} }
func (m *UpdateNodeStateRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateNodeStateRequest) ProtoMessage()    {}
func (*UpdateNodeStateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_clustermanager_034f4aca859d6bc9, []int{15}
}
func (m *UpdateNodeStateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateNodeStateRequest.Unmarshal(m, b)
}
func (m *UpdateNodeStateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateNodeStateRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateNodeStateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateNodeStateRequest.Merge(dst, src)
}
func (m *UpdateNodeStateRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateNodeStateRequest.Size(m)
}
func (m *UpdateNodeStateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateNodeStateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateNodeStateRequest proto.InternalMessageInfo

func (m *UpdateNodeStateRequest) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *UpdateNodeStateRequest) GetState() State {
	if m != nil {
		return m.State
	}
	return State_active
}

type UpdateNodesStateResponseBody struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Hostname             string   `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	State                State    `protobuf:"varint,3,opt,name=state,proto3,enum=com.cisco.son.apphcd.api.v1.clustermanager.State" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateNodesStateResponseBody) Reset()         { *m = UpdateNodesStateResponseBody{} }
func (m *UpdateNodesStateResponseBody) String() string { return proto.CompactTextString(m) }
func (*UpdateNodesStateResponseBody) ProtoMessage()    {}
func (*UpdateNodesStateResponseBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_clustermanager_034f4aca859d6bc9, []int{16}
}
func (m *UpdateNodesStateResponseBody) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateNodesStateResponseBody.Unmarshal(m, b)
}
func (m *UpdateNodesStateResponseBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateNodesStateResponseBody.Marshal(b, m, deterministic)
}
func (dst *UpdateNodesStateResponseBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateNodesStateResponseBody.Merge(dst, src)
}
func (m *UpdateNodesStateResponseBody) XXX_Size() int {
	return xxx_messageInfo_UpdateNodesStateResponseBody.Size(m)
}
func (m *UpdateNodesStateResponseBody) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateNodesStateResponseBody.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateNodesStateResponseBody proto.InternalMessageInfo

func (m *UpdateNodesStateResponseBody) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateNodesStateResponseBody) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *UpdateNodesStateResponseBody) GetState() State {
	if m != nil {
		return m.State
	}
	return State_active
}

type DeleteNodeRequest struct {
	Hostname             string   `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteNodeRequest) Reset()         { *m = DeleteNodeRequest{} }
func (m *DeleteNodeRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteNodeRequest) ProtoMessage()    {}
func (*DeleteNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_clustermanager_034f4aca859d6bc9, []int{17}
}
func (m *DeleteNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNodeRequest.Unmarshal(m, b)
}
func (m *DeleteNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNodeRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNodeRequest.Merge(dst, src)
}
func (m *DeleteNodeRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteNodeRequest.Size(m)
}
func (m *DeleteNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNodeRequest proto.InternalMessageInfo

func (m *DeleteNodeRequest) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

type DeleteNodeResponseBody struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Hostname             string   `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteNodeResponseBody) Reset()         { *m = DeleteNodeResponseBody{} }
func (m *DeleteNodeResponseBody) String() string { return proto.CompactTextString(m) }
func (*DeleteNodeResponseBody) ProtoMessage()    {}
func (*DeleteNodeResponseBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_clustermanager_034f4aca859d6bc9, []int{18}
}
func (m *DeleteNodeResponseBody) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNodeResponseBody.Unmarshal(m, b)
}
func (m *DeleteNodeResponseBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNodeResponseBody.Marshal(b, m, deterministic)
}
func (dst *DeleteNodeResponseBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNodeResponseBody.Merge(dst, src)
}
func (m *DeleteNodeResponseBody) XXX_Size() int {
	return xxx_messageInfo_DeleteNodeResponseBody.Size(m)
}
func (m *DeleteNodeResponseBody) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNodeResponseBody.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNodeResponseBody proto.InternalMessageInfo

func (m *DeleteNodeResponseBody) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeleteNodeResponseBody) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

// Response holds information related to a response message that is sent on appropriate request
type Response struct {
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Status               Status               `protobuf:"varint,2,opt,name=status,proto3,enum=com.cisco.son.apphcd.api.v1.clustermanager.Status" json:"status,omitempty"`
	Message              string               `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Body                 *any.Any             `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_clustermanager_034f4aca859d6bc9, []int{19}
}
func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (dst *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(dst, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *Response) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_SUCCESS
}

func (m *Response) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Response) GetBody() *any.Any {
	if m != nil {
		return m.Body
	}
	return nil
}

func init() {
	proto.RegisterType((*Condition)(nil), "com.cisco.son.apphcd.api.v1.clustermanager.Condition")
	proto.RegisterType((*Cpu)(nil), "com.cisco.son.apphcd.api.v1.clustermanager.Cpu")
	proto.RegisterType((*Memory)(nil), "com.cisco.son.apphcd.api.v1.clustermanager.Memory")
	proto.RegisterType((*GetClusterInfoResponseBody)(nil), "com.cisco.son.apphcd.api.v1.clustermanager.GetClusterInfoResponseBody")
	proto.RegisterType((*GetClusterInfoResponseBody_UpgradeStatus)(nil), "com.cisco.son.apphcd.api.v1.clustermanager.GetClusterInfoResponseBody.UpgradeStatus")
	proto.RegisterType((*GetClusterInfoResponseBody_UpgradeStatus_Component)(nil), "com.cisco.son.apphcd.api.v1.clustermanager.GetClusterInfoResponseBody.UpgradeStatus.Component")
	proto.RegisterType((*GetClusterInfoResponseBody_App)(nil), "com.cisco.son.apphcd.api.v1.clustermanager.GetClusterInfoResponseBody.App")
	proto.RegisterType((*GetClusterInfoResponseBody_Workloads)(nil), "com.cisco.son.apphcd.api.v1.clustermanager.GetClusterInfoResponseBody.Workloads")
	proto.RegisterType((*GetClusterInfoResponseBody_Node)(nil), "com.cisco.son.apphcd.api.v1.clustermanager.GetClusterInfoResponseBody.Node")
	proto.RegisterType((*GetClusterInfoResponseBody_Node_Storage)(nil), "com.cisco.son.apphcd.api.v1.clustermanager.GetClusterInfoResponseBody.Node.Storage")
	proto.RegisterType((*GetKubeConfigRequest)(nil), "com.cisco.son.apphcd.api.v1.clustermanager.GetKubeConfigRequest")
	proto.RegisterType((*GetKubeConfigResponse)(nil), "com.cisco.son.apphcd.api.v1.clustermanager.GetKubeConfigResponse")
	proto.RegisterType((*GetClusterInfoRequest)(nil), "com.cisco.son.apphcd.api.v1.clustermanager.GetClusterInfoRequest")
	proto.RegisterType((*UpgradeClusterRequest)(nil), "com.cisco.son.apphcd.api.v1.clustermanager.UpgradeClusterRequest")
	proto.RegisterType((*Quota)(nil), "com.cisco.son.apphcd.api.v1.clustermanager.Quota")
	proto.RegisterType((*SetClusterResourceQuotasRequest)(nil), "com.cisco.son.apphcd.api.v1.clustermanager.SetClusterResourceQuotasRequest")
	proto.RegisterType((*GetClusterResourceQuotasRequest)(nil), "com.cisco.son.apphcd.api.v1.clustermanager.GetClusterResourceQuotasRequest")
	proto.RegisterType((*DeleteClusterResourceQuotasRequest)(nil), "com.cisco.son.apphcd.api.v1.clustermanager.DeleteClusterResourceQuotasRequest")
	proto.RegisterType((*SetGetClusterResourceQuotasResponseBody)(nil), "com.cisco.son.apphcd.api.v1.clustermanager.SetGetClusterResourceQuotasResponseBody")
	proto.RegisterType((*CreateNodeRequest)(nil), "com.cisco.son.apphcd.api.v1.clustermanager.CreateNodeRequest")
	proto.RegisterType((*CreateNodeResponseBody)(nil), "com.cisco.son.apphcd.api.v1.clustermanager.CreateNodeResponseBody")
	proto.RegisterType((*UpdateNodeStateRequest)(nil), "com.cisco.son.apphcd.api.v1.clustermanager.UpdateNodeStateRequest")
	proto.RegisterType((*UpdateNodesStateResponseBody)(nil), "com.cisco.son.apphcd.api.v1.clustermanager.UpdateNodesStateResponseBody")
	proto.RegisterType((*DeleteNodeRequest)(nil), "com.cisco.son.apphcd.api.v1.clustermanager.DeleteNodeRequest")
	proto.RegisterType((*DeleteNodeResponseBody)(nil), "com.cisco.son.apphcd.api.v1.clustermanager.DeleteNodeResponseBody")
	proto.RegisterType((*Response)(nil), "com.cisco.son.apphcd.api.v1.clustermanager.Response")
	proto.RegisterEnum("com.cisco.son.apphcd.api.v1.clustermanager.Status", Status_name, Status_value)
	proto.RegisterEnum("com.cisco.son.apphcd.api.v1.clustermanager.State", State_name, State_value)
	proto.RegisterEnum("com.cisco.son.apphcd.api.v1.clustermanager.Condition_Status", Condition_Status_name, Condition_Status_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ClusterManagerClient is the client API for ClusterManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ClusterManagerClient interface {
	// Obtain Kubernetes cluster configuration
	GetKubeConfig(ctx context.Context, in *GetKubeConfigRequest, opts ...grpc.CallOption) (*GetKubeConfigResponse, error)
	// GetClusterInfo shows appropriate information about AppHoster cluster
	GetClusterInfo(ctx context.Context, in *GetClusterInfoRequest, opts ...grpc.CallOption) (*Response, error)
	// UpgradeCluster responsible for upgrading AppHoster cluster
	UpgradeCluster(ctx context.Context, in *UpgradeClusterRequest, opts ...grpc.CallOption) (*Response, error)
	// CreateNode scales out an AppHoster cluster
	CreateNode(ctx context.Context, in *CreateNodeRequest, opts ...grpc.CallOption) (*Response, error)
	// DeleteNode scales in an AppHoster cluster
	DeleteNode(ctx context.Context, in *DeleteNodeRequest, opts ...grpc.CallOption) (*Response, error)
	// UpdateNodeState sets AppHoster node to appropriate state
	UpdateNodeState(ctx context.Context, in *UpdateNodeStateRequest, opts ...grpc.CallOption) (*Response, error)
	// SetClusterResourceQuotas responsible for applying resource quotas to appropriate namespaces
	SetClusterResourceQuotas(ctx context.Context, in *SetClusterResourceQuotasRequest, opts ...grpc.CallOption) (*Response, error)
	// GetClusterResourceQuotas responsible for fetching resource quotas information
	GetClusterResourceQuotas(ctx context.Context, in *GetClusterResourceQuotasRequest, opts ...grpc.CallOption) (*Response, error)
	// DeleteClusterResourceQuotas responsible for deleting a resource quota from appropriate namespace
	DeleteClusterResourceQuotas(ctx context.Context, in *DeleteClusterResourceQuotasRequest, opts ...grpc.CallOption) (*Response, error)
}

type clusterManagerClient struct {
	cc *grpc.ClientConn
}

func NewClusterManagerClient(cc *grpc.ClientConn) ClusterManagerClient {
	return &clusterManagerClient{cc}
}

func (c *clusterManagerClient) GetKubeConfig(ctx context.Context, in *GetKubeConfigRequest, opts ...grpc.CallOption) (*GetKubeConfigResponse, error) {
	out := new(GetKubeConfigResponse)
	err := c.cc.Invoke(ctx, "/com.cisco.son.apphcd.api.v1.clustermanager.ClusterManager/GetKubeConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) GetClusterInfo(ctx context.Context, in *GetClusterInfoRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/com.cisco.son.apphcd.api.v1.clustermanager.ClusterManager/GetClusterInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) UpgradeCluster(ctx context.Context, in *UpgradeClusterRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/com.cisco.son.apphcd.api.v1.clustermanager.ClusterManager/UpgradeCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) CreateNode(ctx context.Context, in *CreateNodeRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/com.cisco.son.apphcd.api.v1.clustermanager.ClusterManager/CreateNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) DeleteNode(ctx context.Context, in *DeleteNodeRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/com.cisco.son.apphcd.api.v1.clustermanager.ClusterManager/DeleteNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) UpdateNodeState(ctx context.Context, in *UpdateNodeStateRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/com.cisco.son.apphcd.api.v1.clustermanager.ClusterManager/UpdateNodeState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) SetClusterResourceQuotas(ctx context.Context, in *SetClusterResourceQuotasRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/com.cisco.son.apphcd.api.v1.clustermanager.ClusterManager/SetClusterResourceQuotas", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) GetClusterResourceQuotas(ctx context.Context, in *GetClusterResourceQuotasRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/com.cisco.son.apphcd.api.v1.clustermanager.ClusterManager/GetClusterResourceQuotas", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) DeleteClusterResourceQuotas(ctx context.Context, in *DeleteClusterResourceQuotasRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/com.cisco.son.apphcd.api.v1.clustermanager.ClusterManager/DeleteClusterResourceQuotas", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ClusterManagerServer is the server API for ClusterManager service.
type ClusterManagerServer interface {
	// Obtain Kubernetes cluster configuration
	GetKubeConfig(context.Context, *GetKubeConfigRequest) (*GetKubeConfigResponse, error)
	// GetClusterInfo shows appropriate information about AppHoster cluster
	GetClusterInfo(context.Context, *GetClusterInfoRequest) (*Response, error)
	// UpgradeCluster responsible for upgrading AppHoster cluster
	UpgradeCluster(context.Context, *UpgradeClusterRequest) (*Response, error)
	// CreateNode scales out an AppHoster cluster
	CreateNode(context.Context, *CreateNodeRequest) (*Response, error)
	// DeleteNode scales in an AppHoster cluster
	DeleteNode(context.Context, *DeleteNodeRequest) (*Response, error)
	// UpdateNodeState sets AppHoster node to appropriate state
	UpdateNodeState(context.Context, *UpdateNodeStateRequest) (*Response, error)
	// SetClusterResourceQuotas responsible for applying resource quotas to appropriate namespaces
	SetClusterResourceQuotas(context.Context, *SetClusterResourceQuotasRequest) (*Response, error)
	// GetClusterResourceQuotas responsible for fetching resource quotas information
	GetClusterResourceQuotas(context.Context, *GetClusterResourceQuotasRequest) (*Response, error)
	// DeleteClusterResourceQuotas responsible for deleting a resource quota from appropriate namespace
	DeleteClusterResourceQuotas(context.Context, *DeleteClusterResourceQuotasRequest) (*Response, error)
}

func RegisterClusterManagerServer(s *grpc.Server, srv ClusterManagerServer) {
	s.RegisterService(&_ClusterManager_serviceDesc, srv)
}

func _ClusterManager_GetKubeConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetKubeConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).GetKubeConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.cisco.son.apphcd.api.v1.clustermanager.ClusterManager/GetKubeConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).GetKubeConfig(ctx, req.(*GetKubeConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_GetClusterInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetClusterInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).GetClusterInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.cisco.son.apphcd.api.v1.clustermanager.ClusterManager/GetClusterInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).GetClusterInfo(ctx, req.(*GetClusterInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_UpgradeCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpgradeClusterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).UpgradeCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.cisco.son.apphcd.api.v1.clustermanager.ClusterManager/UpgradeCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).UpgradeCluster(ctx, req.(*UpgradeClusterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_CreateNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).CreateNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.cisco.son.apphcd.api.v1.clustermanager.ClusterManager/CreateNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).CreateNode(ctx, req.(*CreateNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_DeleteNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).DeleteNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.cisco.son.apphcd.api.v1.clustermanager.ClusterManager/DeleteNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).DeleteNode(ctx, req.(*DeleteNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_UpdateNodeState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateNodeStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).UpdateNodeState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.cisco.son.apphcd.api.v1.clustermanager.ClusterManager/UpdateNodeState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).UpdateNodeState(ctx, req.(*UpdateNodeStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_SetClusterResourceQuotas_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetClusterResourceQuotasRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).SetClusterResourceQuotas(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.cisco.son.apphcd.api.v1.clustermanager.ClusterManager/SetClusterResourceQuotas",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).SetClusterResourceQuotas(ctx, req.(*SetClusterResourceQuotasRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_GetClusterResourceQuotas_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetClusterResourceQuotasRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).GetClusterResourceQuotas(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.cisco.son.apphcd.api.v1.clustermanager.ClusterManager/GetClusterResourceQuotas",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).GetClusterResourceQuotas(ctx, req.(*GetClusterResourceQuotasRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_DeleteClusterResourceQuotas_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteClusterResourceQuotasRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).DeleteClusterResourceQuotas(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.cisco.son.apphcd.api.v1.clustermanager.ClusterManager/DeleteClusterResourceQuotas",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).DeleteClusterResourceQuotas(ctx, req.(*DeleteClusterResourceQuotasRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ClusterManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "com.cisco.son.apphcd.api.v1.clustermanager.ClusterManager",
	HandlerType: (*ClusterManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetKubeConfig",
			Handler:    _ClusterManager_GetKubeConfig_Handler,
		},
		{
			MethodName: "GetClusterInfo",
			Handler:    _ClusterManager_GetClusterInfo_Handler,
		},
		{
			MethodName: "UpgradeCluster",
			Handler:    _ClusterManager_UpgradeCluster_Handler,
		},
		{
			MethodName: "CreateNode",
			Handler:    _ClusterManager_CreateNode_Handler,
		},
		{
			MethodName: "DeleteNode",
			Handler:    _ClusterManager_DeleteNode_Handler,
		},
		{
			MethodName: "UpdateNodeState",
			Handler:    _ClusterManager_UpdateNodeState_Handler,
		},
		{
			MethodName: "SetClusterResourceQuotas",
			Handler:    _ClusterManager_SetClusterResourceQuotas_Handler,
		},
		{
			MethodName: "GetClusterResourceQuotas",
			Handler:    _ClusterManager_GetClusterResourceQuotas_Handler,
		},
		{
			MethodName: "DeleteClusterResourceQuotas",
			Handler:    _ClusterManager_DeleteClusterResourceQuotas_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "clustermanager.proto",
}

func init() {
	proto.RegisterFile("clustermanager.proto", fileDescriptor_clustermanager_034f4aca859d6bc9)
}

var fileDescriptor_clustermanager_034f4aca859d6bc9 = []byte{
	// 1656 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe4, 0x58, 0x4f, 0x6f, 0xdb, 0xc8,
	0x15, 0x37, 0xf5, 0xcf, 0xe2, 0x93, 0xe5, 0xd8, 0x13, 0xc7, 0xe1, 0xaa, 0x6e, 0xad, 0x30, 0xc1,
	0xae, 0x20, 0x34, 0x14, 0xec, 0xb4, 0x58, 0xf4, 0x1f, 0x50, 0x59, 0x5e, 0x08, 0xde, 0xd4, 0x76,
	0x3a, 0x8a, 0xb1, 0x40, 0xb1, 0x58, 0x61, 0x44, 0x8d, 0x65, 0x62, 0x45, 0x0e, 0xc3, 0x3f, 0x8e,
	0x8d, 0x20, 0x3d, 0x14, 0xbd, 0xf4, 0xda, 0x00, 0xfd, 0x04, 0xed, 0xb1, 0x87, 0xf6, 0xd8, 0x4b,
	0x83, 0x7e, 0x83, 0xa2, 0x5f, 0xa0, 0x87, 0x5e, 0x5a, 0xb4, 0xc7, 0xde, 0x8b, 0x99, 0x21, 0x29,
	0xca, 0xb2, 0xe3, 0x50, 0x76, 0x4e, 0xd5, 0x89, 0xf3, 0x86, 0xf3, 0x7b, 0xbf, 0x37, 0x6f, 0xe6,
	0xf7, 0x1e, 0x05, 0x6b, 0xe6, 0x38, 0xf4, 0x03, 0xea, 0xd9, 0xc4, 0x21, 0x23, 0xea, 0x19, 0xae,
	0xc7, 0x02, 0x86, 0x9a, 0x26, 0xb3, 0x0d, 0xd3, 0xf2, 0x4d, 0x66, 0xf8, 0xcc, 0x31, 0x88, 0xeb,
	0x9e, 0x98, 0x43, 0x83, 0xb8, 0x96, 0x71, 0xba, 0x65, 0x4c, 0xaf, 0xa8, 0x6d, 0x8c, 0x18, 0x1b,
	0x8d, 0x69, 0x8b, 0xb8, 0x56, 0x8b, 0x38, 0x0e, 0x0b, 0x48, 0x60, 0x31, 0xc7, 0x97, 0x48, 0xb5,
	0xcd, 0x68, 0x56, 0x8c, 0x06, 0xe1, 0x71, 0x2b, 0xb0, 0x6c, 0xea, 0x07, 0xc4, 0x76, 0xa3, 0x17,
	0xda, 0x23, 0x2b, 0x38, 0x09, 0x07, 0x86, 0xc9, 0xec, 0x16, 0x75, 0x4e, 0xd9, 0xb9, 0xeb, 0xb1,
	0xb3, 0x73, 0xf9, 0xbe, 0xf9, 0x78, 0x44, 0x9d, 0xc7, 0xa7, 0x64, 0x6c, 0x0d, 0x49, 0x40, 0x5b,
	0x33, 0x0f, 0x11, 0xc4, 0x47, 0x17, 0x7d, 0x10, 0xe7, 0x5c, 0x4e, 0xe9, 0xff, 0x56, 0x40, 0xed,
	0x30, 0x67, 0x68, 0x71, 0x4e, 0xe8, 0x39, 0x94, 0xfc, 0x80, 0x04, 0xa1, 0xaf, 0x29, 0x75, 0xa5,
	0xb1, 0xbc, 0xfd, 0x43, 0xe3, 0xfd, 0xe3, 0x34, 0x12, 0x18, 0xa3, 0x27, 0x30, 0x70, 0x84, 0x85,
	0xba, 0x50, 0xe4, 0x4f, 0x54, 0xcb, 0x09, 0xd0, 0xad, 0x2c, 0xa0, 0x1c, 0x8a, 0x62, 0xb9, 0x1e,
	0xad, 0x43, 0x89, 0x7a, 0x1e, 0xf3, 0x7c, 0x2d, 0x5f, 0xcf, 0x37, 0x54, 0x1c, 0x8d, 0xf4, 0x06,
	0x94, 0xa4, 0x4b, 0x54, 0x82, 0xdc, 0xe1, 0xd3, 0x95, 0x05, 0xa4, 0x42, 0xf1, 0x33, 0x8c, 0x0f,
	0xf1, 0x8a, 0x82, 0x2a, 0xb0, 0xf8, 0x45, 0x1b, 0x1f, 0xec, 0x1d, 0x74, 0x57, 0x72, 0xfa, 0xf7,
	0x20, 0xdf, 0x71, 0x43, 0xb4, 0x06, 0xc5, 0x80, 0x05, 0x64, 0x2c, 0xc2, 0x54, 0xb1, 0x1c, 0xa0,
	0x0d, 0x50, 0xc9, 0x78, 0xcc, 0x4c, 0x12, 0xd0, 0xa1, 0xe0, 0xaa, 0xe2, 0x89, 0x41, 0x7f, 0x06,
	0xa5, 0x7d, 0x6a, 0x33, 0xef, 0x7c, 0x9e, 0xd5, 0x08, 0x41, 0xe1, 0xd8, 0xa3, 0x54, 0xcb, 0x8b,
	0x09, 0xf1, 0xac, 0xff, 0x6a, 0x15, 0x6a, 0x5d, 0x1a, 0x74, 0x64, 0xc4, 0x7b, 0xce, 0x31, 0xc3,
	0xd4, 0x77, 0x99, 0xe3, 0xd3, 0x1d, 0x36, 0x3c, 0x47, 0x0f, 0x60, 0x29, 0xda, 0x8c, 0xbe, 0x43,
	0x6c, 0x1a, 0x79, 0xab, 0x44, 0xb6, 0x03, 0x62, 0x53, 0xb4, 0x0c, 0x39, 0x2b, 0x76, 0x96, 0xb3,
	0x86, 0xe8, 0x21, 0x54, 0x4d, 0x8f, 0x8a, 0xf3, 0xd5, 0xe7, 0xf9, 0x8f, 0xdc, 0x2d, 0xc5, 0xc6,
	0x5d, 0xbe, 0x8b, 0x3d, 0x50, 0xcd, 0x38, 0x55, 0x5a, 0xa1, 0xae, 0x34, 0x2a, 0xdb, 0xdf, 0x9d,
	0x2b, 0xcf, 0x78, 0x82, 0x83, 0x7e, 0x02, 0xaa, 0xe9, 0x86, 0x7d, 0x93, 0x79, 0xd4, 0xd7, 0x8a,
	0x02, 0xb4, 0x95, 0x09, 0xd4, 0x0d, 0x71, 0xd9, 0x74, 0xc3, 0x0e, 0x07, 0x40, 0x9f, 0x43, 0xc9,
	0x16, 0x7b, 0xad, 0x95, 0x04, 0xd4, 0x76, 0x16, 0x28, 0x99, 0x25, 0x1c, 0x21, 0xa0, 0x5f, 0x2a,
	0x70, 0x77, 0x4c, 0xfc, 0xa0, 0x1f, 0xba, 0x23, 0x8f, 0x0c, 0x69, 0x3f, 0x3a, 0xe1, 0x8b, 0x02,
	0xf9, 0x79, 0x16, 0xe4, 0xab, 0x93, 0x65, 0x1c, 0x49, 0xf0, 0xe8, 0xe4, 0xaf, 0x72, 0x87, 0x53,
	0x26, 0xf4, 0x31, 0xdc, 0xf1, 0x4f, 0xcd, 0xbe, 0xcd, 0x1c, 0x2b, 0x60, 0x5e, 0x3f, 0xf4, 0xc6,
	0x5a, 0x59, 0x24, 0xa7, 0xea, 0x9f, 0x9a, 0xfb, 0xd2, 0x7a, 0xe4, 0x8d, 0x91, 0x03, 0xea, 0x4b,
	0xe6, 0x7d, 0x3d, 0x66, 0x64, 0xe8, 0x6b, 0xaa, 0xe0, 0xf8, 0xec, 0x96, 0x38, 0x7e, 0x11, 0xe3,
	0xe2, 0x89, 0x0b, 0xce, 0xcb, 0x09, 0xed, 0x01, 0xf5, 0xfa, 0xec, 0xb8, 0xef, 0xb0, 0x21, 0xf5,
	0x35, 0xa8, 0x2b, 0x8d, 0x2a, 0xae, 0x4a, 0xf3, 0xe1, 0xf1, 0x01, 0x37, 0x22, 0x02, 0x45, 0x39,
	0x5b, 0xa9, 0xe7, 0x1b, 0x95, 0xed, 0xa7, 0xb7, 0xc4, 0x89, 0x83, 0x63, 0x89, 0x5c, 0xfb, 0x6f,
	0x0e, 0xaa, 0xd3, 0x9b, 0xb6, 0x07, 0x4b, 0xe9, 0xd4, 0x89, 0x2b, 0x50, 0xd9, 0xae, 0x19, 0x52,
	0xcf, 0x8c, 0x58, 0xcf, 0x8c, 0xe7, 0xb1, 0x66, 0xee, 0xc0, 0x9f, 0xfe, 0xf9, 0x36, 0x5f, 0xfc,
	0xa3, 0x92, 0x2b, 0x2b, 0xb8, 0x92, 0xca, 0x02, 0xd7, 0x8e, 0x28, 0xf1, 0xf2, 0xba, 0xc4, 0xe2,
	0xf4, 0x10, 0xaa, 0x42, 0x45, 0xfa, 0x36, 0xf5, 0x7d, 0x32, 0x4a, 0xae, 0x8c, 0x30, 0xee, 0x4b,
	0x1b, 0xfa, 0x39, 0x80, 0xc9, 0x6c, 0x97, 0x39, 0xd4, 0x09, 0x7c, 0xad, 0x20, 0x76, 0xe0, 0xab,
	0x0f, 0x71, 0x72, 0x8c, 0x4e, 0xec, 0x06, 0xa7, 0x3c, 0xd6, 0xbe, 0xe4, 0x22, 0x1d, 0x8d, 0xb8,
	0x94, 0xa4, 0xf4, 0x40, 0x3c, 0xdf, 0x28, 0xba, 0x1a, 0x81, 0x7c, 0xdb, 0x75, 0x2f, 0xc5, 0x35,
	0xe0, 0xee, 0xe4, 0x74, 0x58, 0x8e, 0x1f, 0x10, 0xc7, 0xa4, 0xd2, 0x49, 0x15, 0xaf, 0xc6, 0x27,
	0x64, 0x2f, 0x9e, 0xe0, 0x3c, 0x88, 0x19, 0x58, 0xa7, 0xd2, 0x51, 0x19, 0x47, 0xa3, 0xda, 0x1f,
	0x72, 0xa0, 0x26, 0xc7, 0x0f, 0x3d, 0x82, 0xe5, 0x09, 0x2a, 0x71, 0x5d, 0x59, 0x6e, 0xaa, 0x78,
	0x29, 0x06, 0x6c, 0xbb, 0xae, 0x9f, 0xd9, 0xf7, 0x16, 0xdc, 0x4b, 0xa1, 0x0a, 0xbf, 0x12, 0x3c,
	0x2f, 0x56, 0xa0, 0x04, 0x5c, 0x4c, 0x09, 0x17, 0x3f, 0x80, 0xda, 0xcc, 0x92, 0x89, 0xa7, 0x82,
	0x58, 0x77, 0x7f, 0x7a, 0xdd, 0xc4, 0xdf, 0x57, 0x50, 0x10, 0xf0, 0x45, 0x71, 0x1c, 0x3e, 0xbf,
	0xa5, 0xe3, 0xd0, 0x76, 0x5d, 0x2c, 0x70, 0x6b, 0xff, 0x2a, 0x40, 0x81, 0x5f, 0x0f, 0x54, 0x83,
	0xf2, 0x09, 0xf3, 0x83, 0x54, 0x72, 0x92, 0xf1, 0x4c, 0x05, 0xd8, 0x84, 0x0a, 0x3d, 0x0b, 0xa8,
	0xe7, 0x90, 0x71, 0xdf, 0x72, 0xa3, 0x74, 0x43, 0x6c, 0xda, 0x73, 0xff, 0xdf, 0xd4, 0xff, 0x0c,
	0xaa, 0xbc, 0x04, 0x8f, 0xfb, 0x7e, 0xc0, 0x3c, 0x7e, 0x01, 0xa4, 0xec, 0xf7, 0x6e, 0x51, 0xbe,
	0x8c, 0x9e, 0x84, 0xc6, 0x4b, 0xc2, 0x53, 0x34, 0xe2, 0x99, 0x98, 0x15, 0x7b, 0xb0, 0x27, 0x4a,
	0xbf, 0x0e, 0x25, 0x9b, 0x70, 0x54, 0x21, 0xf3, 0x65, 0x1c, 0x8d, 0xb8, 0x9d, 0xcb, 0x33, 0xf5,
	0x84, 0x10, 0x97, 0x71, 0x34, 0xe2, 0xf7, 0x93, 0x06, 0xe6, 0x50, 0xab, 0x08, 0xab, 0x78, 0xae,
	0x75, 0x61, 0x31, 0xf6, 0x77, 0x79, 0x57, 0x82, 0xa0, 0x10, 0xfa, 0x49, 0x43, 0x22, 0x9e, 0x2f,
	0xed, 0x45, 0xd6, 0x61, 0xad, 0x4b, 0x83, 0xa7, 0xe1, 0x80, 0x76, 0x98, 0x73, 0x6c, 0x8d, 0x30,
	0x7d, 0x11, 0x52, 0x3f, 0xd0, 0x3f, 0x85, 0x7b, 0x17, 0xec, 0x32, 0x7a, 0xf4, 0x2d, 0x80, 0xaf,
	0xc3, 0x01, 0x35, 0x85, 0x35, 0xf2, 0x99, 0xb2, 0xe8, 0x4f, 0xc4, 0xc2, 0xa9, 0x7d, 0x13, 0x88,
	0xef, 0x3a, 0xcd, 0xfa, 0x7d, 0xb8, 0x17, 0xc9, 0x61, 0xb4, 0x30, 0xa6, 0xf1, 0x12, 0x8a, 0x3f,
	0x0d, 0x59, 0x40, 0xd0, 0x27, 0xa0, 0xf2, 0x37, 0x7d, 0x97, 0x98, 0xd1, 0xf2, 0x1d, 0x95, 0x4b,
	0x7e, 0xc1, 0xcb, 0xd5, 0x15, 0x3c, 0x99, 0x43, 0x0f, 0x92, 0x43, 0x24, 0x04, 0x23, 0x7a, 0xab,
	0x99, 0xab, 0x2f, 0x24, 0x67, 0x43, 0x87, 0xbc, 0xe9, 0x86, 0x62, 0x1b, 0x94, 0x9d, 0x15, 0x3e,
	0x5f, 0x41, 0xea, 0x83, 0x85, 0xe8, 0x87, 0xf9, 0xa4, 0x7e, 0x06, 0x9b, 0xbd, 0x24, 0x0c, 0x4c,
	0x7d, 0x16, 0x7a, 0x26, 0x15, 0x54, 0xfc, 0x38, 0xa0, 0x23, 0x28, 0xbd, 0x10, 0x06, 0x4d, 0x11,
	0x4a, 0x90, 0xa9, 0xbf, 0x15, 0x50, 0x51, 0xd5, 0xfa, 0xb5, 0xa8, 0x5a, 0x11, 0x98, 0xbe, 0x0f,
	0x9b, 0xdd, 0x6b, 0x3c, 0x37, 0x01, 0x92, 0x80, 0xa5, 0x77, 0x75, 0x0a, 0x2a, 0x35, 0xab, 0xef,
	0x80, 0xbe, 0x4b, 0xc7, 0x34, 0xa0, 0xef, 0x44, 0xdc, 0x98, 0xd9, 0xde, 0xd4, 0x9e, 0xea, 0x01,
	0x7c, 0xd2, 0xa3, 0xc1, 0xd5, 0xac, 0x52, 0xcd, 0xeb, 0xde, 0x8d, 0x37, 0x25, 0xd9, 0x88, 0x2e,
	0xac, 0x76, 0x78, 0xff, 0x4a, 0x45, 0xaf, 0x70, 0xfd, 0x29, 0x4a, 0x5d, 0xac, 0x5c, 0xfa, 0x62,
	0xe9, 0x5f, 0xc2, 0x7a, 0x1a, 0x28, 0xc5, 0x56, 0xaa, 0xa8, 0x92, 0xa8, 0x68, 0x1a, 0x3d, 0x77,
	0x25, 0x7a, 0x7e, 0x0a, 0xfd, 0x35, 0xac, 0x1f, 0xb9, 0xc3, 0x08, 0x5d, 0x7e, 0xb6, 0xbc, 0x07,
	0xd7, 0xdb, 0xfa, 0x36, 0xd2, 0xdf, 0x28, 0xb0, 0x31, 0xf1, 0xef, 0x47, 0x04, 0xe6, 0x8c, 0x31,
	0x61, 0x95, 0xbf, 0x21, 0xab, 0x16, 0xac, 0xca, 0x53, 0xf7, 0x9e, 0xb9, 0xd3, 0x77, 0x61, 0x3d,
	0xbd, 0x60, 0x3e, 0xfe, 0xfa, 0xdf, 0x15, 0x28, 0x27, 0x4a, 0xb5, 0x0b, 0x6a, 0xf2, 0x4d, 0x9d,
	0xb1, 0x83, 0x9c, 0x2c, 0xe4, 0x45, 0x29, 0xd5, 0x61, 0x2d, 0x67, 0x2b, 0x4a, 0x17, 0x3e, 0x88,
	0x35, 0x58, 0x9c, 0xee, 0xc7, 0xe2, 0x21, 0x6a, 0x40, 0x61, 0xc0, 0x86, 0xe7, 0x51, 0x61, 0x5e,
	0x9b, 0xa1, 0xd9, 0x76, 0xce, 0xb1, 0x78, 0xa3, 0xb9, 0x95, 0x7c, 0xf3, 0x56, 0x60, 0xb1, 0x77,
	0xd4, 0xe9, 0x7c, 0xd6, 0xeb, 0x4d, 0x7f, 0xf8, 0xde, 0x81, 0xca, 0xde, 0x41, 0xff, 0x19, 0x3e,
	0xec, 0x62, 0x3e, 0x97, 0x6b, 0x7e, 0x0a, 0x45, 0x91, 0x1c, 0x04, 0x71, 0x97, 0xb6, 0xb2, 0x80,
	0x56, 0xa1, 0x1a, 0x3a, 0xbe, 0x79, 0x42, 0x87, 0xe1, 0x98, 0x0c, 0xc6, 0x54, 0x2e, 0xb4, 0x89,
	0xe5, 0x04, 0xd4, 0xe1, 0x8d, 0xce, 0x4a, 0x6e, 0xfb, 0x3f, 0x4b, 0xb0, 0x1c, 0x5d, 0xf9, 0x7d,
	0x19, 0x11, 0xfa, 0x8d, 0x02, 0xd5, 0xa9, 0xc2, 0x80, 0x7e, 0x9c, 0xb1, 0xa4, 0xce, 0xd4, 0x9a,
	0x5a, 0xfb, 0x06, 0x08, 0x32, 0xd7, 0xfa, 0x02, 0xfa, 0xad, 0x02, 0xcb, 0xd3, 0x85, 0x07, 0xb5,
	0x6f, 0x52, 0xec, 0x25, 0xb5, 0xef, 0x64, 0x81, 0x48, 0xd8, 0x7c, 0xf4, 0x8b, 0xbf, 0xfd, 0xe3,
	0x4d, 0xee, 0x2e, 0x5a, 0x15, 0xff, 0xfd, 0x9c, 0x6e, 0xb5, 0xf8, 0x32, 0x26, 0x8a, 0x3c, 0xa7,
	0x39, 0x5d, 0xea, 0xb2, 0xd1, 0xbc, 0xb4, 0x4c, 0xde, 0x8c, 0x66, 0xed, 0x12, 0x9a, 0xbf, 0x53,
	0x00, 0x26, 0x9a, 0x89, 0x7e, 0x94, 0xa9, 0xa9, 0xbb, 0x28, 0xda, 0x73, 0xd2, 0xd3, 0x05, 0xbd,
	0x0d, 0xfd, 0xfe, 0x0c, 0xbd, 0x96, 0xf8, 0x6e, 0xfc, 0xbe, 0xd2, 0x44, 0xbf, 0x57, 0x00, 0x26,
	0xba, 0x91, 0x8d, 0xe7, 0x8c, 0x40, 0xcd, 0xc9, 0xb3, 0x29, 0x78, 0x3e, 0x6a, 0xea, 0x57, 0xf0,
	0x6c, 0xbd, 0x8a, 0xf5, 0xe9, 0x35, 0x7a, 0xab, 0xc0, 0x9d, 0x0b, 0xd5, 0x02, 0xed, 0x64, 0xcb,
	0xff, 0x65, 0xa5, 0x66, 0x4e, 0xe6, 0x4f, 0x04, 0xf3, 0xc7, 0x7a, 0xe3, 0x7a, 0xe6, 0x2d, 0xa1,
	0xeb, 0x7c, 0xcb, 0xff, 0xa2, 0x80, 0x76, 0x55, 0x6b, 0x84, 0x32, 0xfd, 0x3d, 0x70, 0x4d, 0x83,
	0x35, 0x67, 0x50, 0x0f, 0x45, 0x50, 0xdf, 0xd4, 0xb5, 0xd9, 0xa0, 0x64, 0x63, 0xc1, 0x83, 0xf8,
	0xb3, 0x02, 0x5a, 0xf7, 0x56, 0x82, 0xe8, 0x7e, 0x90, 0x20, 0xea, 0x22, 0x88, 0x1a, 0xba, 0x32,
	0x08, 0xf4, 0x57, 0x05, 0xbe, 0xf1, 0x8e, 0xc6, 0x0e, 0x1d, 0x64, 0xbf, 0x0a, 0x1f, 0x20, 0x8e,
	0x6f, 0x8b, 0x38, 0x3e, 0x6e, 0x3e, 0xba, 0x2a, 0x8e, 0xd6, 0xab, 0xa4, 0xcd, 0x7c, 0xbd, 0xb3,
	0xf2, 0xb3, 0xe5, 0x69, 0xa0, 0x41, 0x49, 0x54, 0xc0, 0x27, 0xff, 0x0b, 0x00, 0x00, 0xff, 0xff,
	0xac, 0x86, 0x68, 0xe3, 0x8e, 0x17, 0x00, 0x00,
}
